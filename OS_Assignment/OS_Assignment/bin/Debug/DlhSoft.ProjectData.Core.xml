<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DlhSoft.ProjectData.Core</name>
    </assembly>
    <members>
        <member name="T:DlhSoft.Windows.Data.ITaskItem">
            <summary>
            Represents the interface of a task item aware of its indentation, expansion state (can be expanded or collapsed), start date and time, effort, etc. that can be used as a source object to be wrapped within a <see cref="T:DlhSoft.Windows.Data.Task">Task</see> and managed using a <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> or hosted within a task data management control.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ITaskItem.Schedule">
            <summary>
            Gets or sets the schedule of this <see cref="T:DlhSoft.Windows.Data.ITaskItem">ITaskItem</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ITaskItem.Start">
            <summary>
            Gets or sets the start date and time of this <see cref="T:DlhSoft.Windows.Data.ITaskItem">ITaskItem</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ITaskItem.Effort">
            <summary>
            Gets or sets the effort of this <see cref="T:DlhSoft.Windows.Data.ITaskItem">ITaskItem</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ITaskItem.CompletedEffort">
            <summary>
            Gets or sets the completed effort of this <see cref="T:DlhSoft.Windows.Data.ITaskItem">ITaskItem</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ITaskItem.Assignments">
            <summary>
            Enumerates or populates the assignment item collection of this <see cref="T:DlhSoft.Windows.Data.ITaskItem">ITaskItem</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ITaskItem.Predecessors">
            <summary>
            Enumerates or populates the predecessor item collection of this <see cref="T:DlhSoft.Windows.Data.ITaskItem">ITaskItem</see>.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Converters.PredecessorTaskConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Converters.PredecessorTaskConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.ScheduleDefinitionInfo">
            <summary>
            Represents structured schedule definition information computed based on the definition string within a <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see>.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionInfo">ScheduleDefinitionInfo</see> class.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionInfo.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionInfo.OnChanged">
            <summary>
            Raises the Changed event.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ScheduleDefinitionInfo.DayOfWeekInfo">
            <summary>
            Gets the day of week based schedule definition information of the scheduled time.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ScheduleDefinitionInfo.DateInfo">
            <summary>
            Gets the date based schedule definition information of the scheduled time.
            </summary>
        </member>
        <member name="E:DlhSoft.Windows.Data.ScheduleDefinitionInfo.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:DlhSoft.Windows.Data.ScheduleDefinitionInfo.Changed">
            <summary>
            Occurs when a property value of this object or of a contained object changes.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.TimeIntervalCollection">
            <summary>
            Represents a time interval, starting at a specified date and time, and lasting for a specified time span.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeIntervalCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TimeIntervalCollection">TimeIntervalCollection</see> class.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeIntervalCollection.#ctor(System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.TimeInterval})">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TimeIntervalCollection">TimeIntervalCollection</see> class.
            </summary>
            <param name="initialValues">Initial .</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeIntervalCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:DlhSoft.Windows.Data.TimeIntervalCollection">TimeIntervalCollection</see>.
            </summary>
            <returns>An enumerator that iterates through the <see cref="T:DlhSoft.Windows.Data.TimeIntervalCollection">TimeIntervalCollection</see></returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeIntervalCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the <see cref="T:DlhSoft.Windows.Data.TimeIntervalCollection">TimeIntervalCollection</see>.
            </summary>
            <returns>An enumerator that iterates through the <see cref="T:DlhSoft.Windows.Data.TimeIntervalCollection">TimeIntervalCollection</see></returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeIntervalCollection.Add(DlhSoft.Windows.Data.TimeInterval)">
            <summary>
            Adds a <see cref="T:DlhSoft.Windows.Data.TimeInterval">TimeInterval</see> element to this <see cref="T:DlhSoft.Windows.Data.TimeIntervalCollection">TimeIntervalCollection</see>.
            </summary>
            <param name="timeInterval">The <see cref="T:DlhSoft.Windows.Data.TimeInterval">TimeInterval</see> element to add to this <see cref="T:DlhSoft.Windows.Data.TimeIntervalCollection">TimeIntervalCollection</see>.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeIntervalCollection.AddRange(System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.TimeInterval})">
            <summary>
            Adds multiple <see cref="T:DlhSoft.Windows.Data.TimeInterval">TimeInterval</see> elements to this <see cref="T:DlhSoft.Windows.Data.TimeIntervalCollection">TimeIntervalCollection</see>.
            </summary>
            <param name="timeIntervals">The <see cref="T:DlhSoft.Windows.Data.TimeInterval">TimeInterval</see> elements to add to this <see cref="T:DlhSoft.Windows.Data.TimeIntervalCollection">TimeIntervalCollection</see>.</param>
        </member>
        <member name="P:DlhSoft.Windows.Data.TimeIntervalCollection.Count">
            <summary>
            Gets the number of elements actually contained in this <see cref="T:DlhSoft.Windows.Data.TimeIntervalCollection">TimeIntervalCollection</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TimeIntervalCollection.Item(System.Int32)">
            <summary>
            Gets the time interval at the specified index.
            </summary>
            <param name="index">The zero-based index of the time interval to be get.</param>
            <returns>The time interval at the specified index.</returns>
        </member>
        <member name="P:DlhSoft.Windows.Data.TimeIntervalCollection.Ascending">
            <summary>
            Enumerates the elements actually contained in the <see cref="T:DlhSoft.Windows.Data.TimeIntervalCollection">TimeIntervalCollection</see> in ascending order.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TimeIntervalCollection.Descending">
            <summary>
            Enumerates the elements actually contained in the <see cref="T:DlhSoft.Windows.Data.TimeIntervalCollection">TimeIntervalCollection</see> in descending order.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TimeIntervalCollection.Start">
            <summary>
            Gets the start date and time of the earliest interval in the collection.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TimeIntervalCollection.Duration">
            <summary>
            Gets the total duration of the intervals in the collection.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TimeIntervalCollection.Finish">
            <summary>
            Gets the finish date and time of the latest interval in the collection.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.IResourceItem">
            <summary>
            Represents the interface of a resource item aware of its schedule and costs that can be used as a source object to be wrapped within an <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see> and managed using a <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> or hosted within a resource data management control.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.IResourceItem.Schedule">
            <summary>
            Gets or sets the schedule of this <see cref="T:DlhSoft.Windows.Data.IResourceItem">IResourceItem</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.IResourceItem.CostPerUsage">
            <summary>
            Gets or sets the cost per usage of this <see cref="T:DlhSoft.Windows.Data.IResourceItem">IResourceItem</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.IResourceItem.CostPerHour">
            <summary>
            Gets or sets the cost per hour of this <see cref="T:DlhSoft.Windows.Data.IResourceItem">IResourceItem</see>.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.ReadOnlyScheduleDefinitionCollection">
            <summary>
            Read-only observable collection of <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see> objects.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ReadOnlyScheduleDefinitionCollection.#ctor(DlhSoft.Windows.Data.ScheduleDefinitionCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ReadOnlyScheduleDefinitionCollection">ReadOnlyScheduleDefinitionCollection</see> class.
            </summary>
            <param name="scheduleDefinitions">Source schedule definition collection to be used by the new read-only schedule definition collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ReadOnlyScheduleDefinitionCollection.CreateNewItem(System.Object[])">
            <summary>
            Called when a new schedule definition item is added to the collection by calling <see cref="M:DlhSoft.Windows.Data.ReadOnlyEntityCollection.InsertNewItem(System.Int32,System.Object[])">InsertNewItem</see> method and the event handlers of the <see cref="E:DlhSoft.Windows.Data.ReadOnlyEntityCollection.NewItem">NewItem</see> event haven't set up the new schedule definition item themselves.
            </summary>
            <param name="parameters">List of parameters passed from <see cref="M:DlhSoft.Windows.Data.ReadOnlyEntityCollection.InsertNewItem(System.Int32,System.Object[])">InsertNewItem</see> method used for actually creating the new schedule definition item.</param>
            <returns>The newly created schedule definition item.</returns>
        </member>
        <member name="P:DlhSoft.Windows.Data.ReadOnlyScheduleDefinitionCollection.Item(System.Int32)">
            <summary>
            Gets the schedule definition at the specified index.
            </summary>
            <param name="index">The zero-based index of the schedule definition to get.</param>
            <returns>The schedule definition at the specified index.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Converters.PredecessorsConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Converters.PredecessorsConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.TimeInterval">
            <summary>
            Represents a time interval, starting at a specified date and time, and lasting for a specified time span.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeInterval.#ctor(System.DateTime,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TimeInterval">TimeInterval</see> structure.
            </summary>
            <param name="start">Start date and time of the time interval.</param>
            <param name="duration">Duration of the time interval.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeInterval.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TimeInterval">TimeInterval</see> structure.
            </summary>
            <param name="start">Start date and time of the time interval.</param>
            <param name="finish">Finish date and time of the time interval.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeInterval.Equals(DlhSoft.Windows.Data.TimeInterval)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified <see cref="T:DlhSoft.Windows.Data.TimeInterval">TimeInterval</see> instance.
            </summary>
            <param name="other">A <see cref="T:DlhSoft.Windows.Data.TimeInterval">TimeInterval</see> to compare to this instance.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeInterval.CompareTo(DlhSoft.Windows.Data.TimeInterval)">
            <summary>
            Compares this instance to a specified <see cref="T:DlhSoft.Windows.Data.TimeInterval">TimeInterval</see> and returns an indication of their relative value.
            </summary>
            <param name="other">A <see cref="T:DlhSoft.Windows.Data.TimeInterval">TimeInterval</see> to compare.</param>
            <returns>A 32-bit signed integer that indicates the relative order of the comparands.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeInterval.Intersect(DlhSoft.Windows.Data.TimeInterval)">
            <summary>
            Returns a new <see cref="T:DlhSoft.Windows.Data.TimeInterval">TimeInterval</see> object based on this <see cref="T:DlhSoft.Windows.Data.TimeInterval">TimeInterval</see> so that it is completely included by a specified <see cref="T:DlhSoft.Windows.Data.TimeInterval">TimeInterval</see> or null if this intersection is empty.
            </summary>
            <param name="timeInterval">The <see cref="T:DlhSoft.Windows.Data.TimeInterval">TimeInterval</see> object to intersect with.</param>
            <returns>The time interval intersection result.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeInterval.Union(DlhSoft.Windows.Data.TimeInterval)">
            <summary>
            Returns a new <see cref="T:DlhSoft.Windows.Data.TimeInterval">TimeInterval</see> object based on this <see cref="T:DlhSoft.Windows.Data.TimeInterval">TimeInterval</see> so that it completely also includes a specified <see cref="T:DlhSoft.Windows.Data.TimeInterval">TimeInterval</see>.
            </summary>
            <param name="timeInterval">The <see cref="T:DlhSoft.Windows.Data.TimeInterval">TimeInterval</see> object to union with.</param>
            <returns>The time interval union result.</returns>
        </member>
        <member name="P:DlhSoft.Windows.Data.TimeInterval.Start">
            <summary>
            Gets or sets the start date and time of the <see cref="T:DlhSoft.Windows.Data.TimeInterval">TimeInterval</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TimeInterval.Duration">
            <summary>
            Gets or sets the duration of the <see cref="T:DlhSoft.Windows.Data.TimeInterval">TimeInterval</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TimeInterval.Finish">
            <summary>
            Gets or sets the finish date and time of the <see cref="T:DlhSoft.Windows.Data.TimeInterval">TimeInterval</see>.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.TaskItem">
            <summary>
            Represents a task item aware of its indentation, expansion state (can be expanded or collapsed), start date and time, effort, etc. that can be used as a source object to be wrapped within a <see cref="T:DlhSoft.Windows.Data.Task">Task</see> and managed using a <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> or hosted within a task data management control.
            It is recommended to set at least these data properties: <see cref="P:DlhSoft.Windows.Data.NodeItem.Indentation">Indentation</see>, <see cref="P:DlhSoft.Windows.Data.EntityItem.Content">Content</see>, <see cref="P:DlhSoft.Windows.Data.TaskItem.Start">Start</see>, <see cref="P:DlhSoft.Windows.Data.TaskItem.Effort">Effort</see>, <see cref="P:DlhSoft.Windows.Data.TaskItem.CompletedEffort">CompletedEffort</see>, <see cref="P:DlhSoft.Windows.Data.TaskItem.Assignments">Assignments</see>.
            These data properties can also be set: <see cref="P:DlhSoft.Windows.Data.NodeItem.IsExpanded">IsExpanded</see>, <see cref="P:DlhSoft.Windows.Data.TaskItem.Schedule">Schedule</see>, <see cref="P:DlhSoft.Windows.Data.TaskItem.Predecessors">Predecessors</see>, <see cref="P:DlhSoft.Windows.Data.TaskItem.Duration">Duration</see>, <see cref="P:DlhSoft.Windows.Data.TaskItem.Finish">Finish</see>, <see cref="P:DlhSoft.Windows.Data.TaskItem.IsMilestone">IsMilestone</see>, <see cref="P:DlhSoft.Windows.Data.TaskItem.Completion">Completion</see>, <see cref="P:DlhSoft.Windows.Data.TaskItem.IsCompleted">IsCompleted</see>, <see cref="P:DlhSoft.Windows.Data.TaskItem.Cost">Cost</see>, <see cref="P:DlhSoft.Windows.Data.TaskItem.MinStart">MinStart</see>, <see cref="P:DlhSoft.Windows.Data.TaskItem.MaxStart">MaxStart</see>, <see cref="P:DlhSoft.Windows.Data.TaskItem.MinFinish">MinFinish</see>, <see cref="P:DlhSoft.Windows.Data.TaskItem.MaxFinish">MaxFinish</see>.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see> class.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskItem.#ctor(System.Object,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see> class.
            </summary>
            <param name="content">Content of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="indentation">Indentation level of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskItem.#ctor(System.Object,System.Int32,System.DateTime,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see> class.
            </summary>
            <param name="content">Content of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="indentation">Indentation level of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="start">Start date and time of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="effort">Effort of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskItem.#ctor(System.Object,System.Int32,System.DateTime,System.TimeSpan,System.TimeSpan,System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.AssignmentItem})">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see> class.
            </summary>
            <param name="content">Content of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="indentation">Indentation level of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="start">Start date and time of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="effort">Effort of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="completedEffort">Completed effort of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="assignments">Assignment item collection of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskItem.#ctor(System.Object,System.Int32,DlhSoft.Windows.Data.Schedule,System.DateTime,System.TimeSpan,System.TimeSpan,System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.AssignmentItem})">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see> class.
            </summary>
            <param name="content">Content of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="indentation">Indentation level of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="schedule">Schedule of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="start">Start date and time of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="effort">Effort of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="completedEffort">Completed effort of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="assignments">Assignment item collection of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskItem.#ctor(System.Object,System.Int32,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see> class.
            </summary>
            <param name="content">Content of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="indentation">Indentation level of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="isExpanded">Expansion indicator of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskItem.#ctor(System.Object,System.Int32,System.Boolean,System.DateTime,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see> class.
            </summary>
            <param name="content">Content of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="indentation">Indentation level of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="isExpanded">Expansion indicator of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="start">Start date and time of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="effort">Effort of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskItem.#ctor(System.Object,System.Int32,System.Boolean,System.DateTime,System.TimeSpan,System.TimeSpan,System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.AssignmentItem})">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see> class.
            </summary>
            <param name="content">Content of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="indentation">Indentation level of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="isExpanded">Expansion indicator of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="start">Start date and time of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="effort">Effort of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="completedEffort">Completed effort of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="assignments">Assignment item collection of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskItem.#ctor(System.Object,System.Int32,System.Boolean,DlhSoft.Windows.Data.Schedule,System.DateTime,System.TimeSpan,System.TimeSpan,System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.AssignmentItem})">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see> class.
            </summary>
            <param name="content">Content of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="indentation">Indentation level of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="isExpanded">Expansion indicator of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="schedule">Schedule of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="start">Start date and time of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="effort">Effort of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="completedEffort">Completed effort of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
            <param name="assignments">Assignment item collection of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.</param>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskItem.ScheduleProperty">
            <summary>
            Identifies the Schedule dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskItem.StartProperty">
            <summary>
            Identifies the Start dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskItem.MinStartProperty">
            <summary>
            Identifies the MinStart dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskItem.MaxStartProperty">
            <summary>
            Identifies the MaxStart dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskItem.EffortProperty">
            <summary>
            Identifies the Effort dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskItem.CompletedEffortProperty">
            <summary>
            Identifies the CompletedEffort dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskItem.AssignmentsProperty">
            <summary>
            Identifies the Assignments dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskItem.PredecessorsProperty">
            <summary>
            Identifies the Predecessors dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskItem.DurationProperty">
            <summary>
            Identifies the Duration dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskItem.FinishProperty">
            <summary>
            Identifies the Finish dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskItem.MinFinishProperty">
            <summary>
            Identifies the MinFinish dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskItem.MaxFinishProperty">
            <summary>
            Identifies the MaxFinish dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskItem.IsMilestoneProperty">
            <summary>
            Identifies the IsMilestone dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskItem.CompletionProperty">
            <summary>
            Identifies the Completion dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskItem.IsCompletedProperty">
            <summary>
            Identifies the IsCompleted dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskItem.AssignmentsStringProperty">
            <summary>
            Identifies the AssignmentsString dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskItem.PredecessorsStringProperty">
            <summary>
            Identifies the PredecessorsString dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskItem.IndexStringProperty">
            <summary>
            Identifies the IndexString dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskItem.CostProperty">
            <summary>
            Identifies the Cost dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskItem.Schedule">
            <summary>
            Gets or sets the schedule of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.
            The task schedule indicates the time intervals of a day that can be used as work time for achieving completion of the task. If a child task schedule is not set, the parent task schedule is used. If a root task schedule is not set the <see cref="P:DlhSoft.Windows.Data.Schedule.Continuous">Continuous</see> schedule is used.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskItem.Start">
            <summary>
            Gets or sets the start date and time of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.
            The start date and time of a parent task will be based on the start date and time values of its children.
            It is recommended to set this property.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskItem.MinStart">
            <summary>
            Gets or sets the minimum start date and time of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskItem.MaxStart">
            <summary>
            Gets or sets the maximum start date and time of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskItem.Effort">
            <summary>
            Gets or sets the effort of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.
            The effort of a parent task will be based on the effort values of its children.
            It is recommended to set this property.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskItem.CompletedEffort">
            <summary>
            Gets or sets the completed effort of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.
            The completed effort of a parent task will be based on the completed effort values of its children.
            It is recommended to set this property.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskItem.Assignments">
            <summary>
            Gets or sets the assignment item collection of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.
            You can use a collection of <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see> objects as the task assignment item collection. Note that the assignment item collection is ignored for parent tasks.
            It is recommended to set this property.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskItem.DlhSoft#Windows#Data#ITaskItem#Assignments">
            <summary>
            Enumerates or populates the assignment item collection of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.
            When setting this property you must use an <see cref="T:DlhSoft.Windows.Data.IAssignmentItem">IAssignmentItem</see> object collection.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskItem.Predecessors">
            <summary>
            Gets or sets the predecessor item collection of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.
            The predecessor item collection is used to indicate dependencies between tasks. You can use a collection of <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see> objects as the task predecessor item collection.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskItem.DlhSoft#Windows#Data#ITaskItem#Predecessors">
            <summary>
            Enumerates or populates the predecessor item collection of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.
            When setting this property you must use an <see cref="T:DlhSoft.Windows.Data.IPredecessorItem">IPredecessorItem</see> object collection.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskItem.Duration">
            <summary>
            Gets or sets the duration of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.
            Task duration is computed automatically based on schedule, start date and time, effort, and assignments. The duration of a parent task will be based on the duration values of its children.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskItem.Finish">
            <summary>
            Gets or sets the finish date and time of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.
            Task finish date and time is computed automatically based on schedule, start date and time, effort, and assignments. The finish date and time of a parent task will be based on the finish date and time values of its children.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskItem.MinFinish">
            <summary>
            Gets or sets the minimum finish date and time of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskItem.MaxFinish">
            <summary>
            Gets or sets the maximum finish date and time of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskItem.IsMilestone">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see> represents a milestone.
            A milestone task has its <see cref="P:DlhSoft.Windows.Data.TaskItem.Effort">Effort</see> value set to zero.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskItem.Completion">
            <summary>
            Gets or sets the completion rate of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.
            Task completion rate is computed automatically based on effort and completed effort.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskItem.IsCompleted">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see> is completed.
            A completed task has its <see cref="P:DlhSoft.Windows.Data.TaskItem.CompletedEffort">CompletedEffort</see> value equal to <see cref="P:DlhSoft.Windows.Data.TaskItem.Effort">Effort</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskItem.AssignmentsString">
            <summary>
            Gets or sets a string representation of the predecessor collection of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.
            The assignments string is of this form: John, Diane [80%].
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskItem.PredecessorsString">
            <summary>
            Gets or sets a string representation of the predecessor collection of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.
            The predecessors string is of this form: 1, 2SS, 3FF+2.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskItem.IndexString">
            <summary>
            Gets or sets a string representation of the index of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.
            The value of this property can be automatically computed based on the position of the task in the task collection.
            The index string is of this form: 1, 2.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskItem.Cost">
            <summary>
            Gets or sets the cost of this <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>.
            Task cost can be computed automatically based on duration and assignments. The cost of a parent task will be based on the cost values of its children. However a specific task cost can be set and will be used instead if it is higher than the automatically computed cost.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.ReadOnlyAssignmentCollection">
            <summary>
            Read-only observable collection of <see cref="T:DlhSoft.Windows.Data.Assignment">Assignment</see> objects.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ReadOnlyAssignmentCollection.#ctor(DlhSoft.Windows.Data.AssignmentCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ReadOnlyAssignmentCollection">ReadOnlyAssignmentCollection</see> class.
            </summary>
            <param name="assignments">Source assignment collection to be used by the new read-only assignment collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ReadOnlyAssignmentCollection.CreateNewItem(System.Object[])">
            <summary>
            Called when a new assignment item is added to the collection by calling <see cref="M:DlhSoft.Windows.Data.ReadOnlyEntityCollection.InsertNewItem(System.Int32,System.Object[])">InsertNewItem</see> method and the event handlers of the <see cref="E:DlhSoft.Windows.Data.ReadOnlyEntityCollection.NewItem">NewItem</see> event haven't set up the new assignment item themselves.
            </summary>
            <param name="parameters">List of parameters passed from <see cref="M:DlhSoft.Windows.Data.ReadOnlyEntityCollection.InsertNewItem(System.Int32,System.Object[])">InsertNewItem</see> method used for actually creating the new assignment item.</param>
            <returns>The newly created assignment item.</returns>
        </member>
        <member name="P:DlhSoft.Windows.Data.ReadOnlyAssignmentCollection.Item(System.Int32)">
            <summary>
            Gets the assignment at the specified index.
            </summary>
            <param name="index">The zero-based index of the assignment to get.</param>
            <returns>The assignment at the specified index.</returns>
        </member>
        <member name="T:DlhSoft.Windows.Data.IAssignmentItem">
            <summary>
            Represents the interface of an assignment item aware of its assigned resource and allocation units that can be used as a source object to be wrapped within an <see cref="T:DlhSoft.Windows.Data.Assignment">Assignment</see> and managed using an <see cref="T:DlhSoft.Windows.Data.AssignmentManager">AssignmentManager</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.IAssignmentItem.ResourceItem">
            <summary>
            Gets or sets the resource item of this <see cref="T:DlhSoft.Windows.Data.IAssignmentItem">IAssignmentItem</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.IAssignmentItem.AllocationUnits">
            <summary>
            Gets or sets the allocation units of this <see cref="T:DlhSoft.Windows.Data.IAssignmentItem">IAssignmentItem</see>.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.PredecessorCollection">
            <summary>
            Observable collection that owns <see cref="T:DlhSoft.Windows.Data.Predecessor">Predecessor</see> objects used internally by a <see cref="T:DlhSoft.Windows.Data.PredecessorManager">PredecessorManager</see>.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorCollection.#ctor(DlhSoft.Windows.Data.PredecessorManager)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.PredecessorCollection">PredecessorCollection</see> class.
            </summary>
            <param name="parentManager">The parent manager of the collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorCollection.InsertItem(System.Int32,DlhSoft.Windows.Data.Entity)">
            <summary>
            Inserts a predecessor to the collection at the specified index and sets it as owned by this <see cref="T:DlhSoft.Windows.Data.PredecessorCollection">PredecessorCollection</see>.
            </summary>
            <param name="index">The zero-based index at which the predecessor should be inserted.</param>
            <param name="entity">The predecessor to insert.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the predecessor at the specified index of the collection and sets it as not owned by this <see cref="T:DlhSoft.Windows.Data.PredecessorCollection">PredecessorCollection</see>.
            </summary>
            <param name="index">The zero-based index of the predecessor to remove.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorCollection.GetPredecessor(System.Object)">
            <summary>
            Gets the predecessor that wraps the specified object, or null if such predecessor doesn't exist.
            </summary>
            <param name="item">Wrapped object to search for.</param>
            <returns>The predecessor that wraps the specified object, or null if such predecessor doesn't exist.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorCollection.GetPredecessorAt(System.Int32)">
            <summary>
            Gets the predecessor at the specified index.
            </summary>
            <param name="index">The zero-based index of the predecessor to be get.</param>
            <returns>The predecessor at the specified index.</returns>
        </member>
        <member name="P:DlhSoft.Windows.Data.PredecessorCollection.Item(System.Int32)">
            <summary>
            Gets the predecessor at the specified index.
            </summary>
            <param name="index">The zero-based index of the predecessor to be get.</param>
            <returns>The predecessor at the specified index.</returns>
        </member>
        <member name="P:DlhSoft.Windows.Data.PredecessorCollection.ParentManager">
            <summary>
            Gets the parent manager of this collection.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.PredecessorCollection.ParentTask">
            <summary>
            Gets the parent task of this collection.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.ReadOnlyResourceCollection">
            <summary>
            Read-only observable collection of <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see> objects.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ReadOnlyResourceCollection.#ctor(DlhSoft.Windows.Data.ResourceCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ReadOnlyResourceCollection">ReadOnlyResourceCollection</see> class.
            </summary>
            <param name="resources">Source resource collection to be used by the new read-only resource collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ReadOnlyResourceCollection.CreateNewItem(System.Object[])">
            <summary>
            Called when a new resource item is added to the collection by calling <see cref="M:DlhSoft.Windows.Data.ReadOnlyEntityCollection.InsertNewItem(System.Int32,System.Object[])">InsertNewItem</see> method and the event handlers of the <see cref="E:DlhSoft.Windows.Data.ReadOnlyEntityCollection.NewItem">NewItem</see> event haven't set up the new resource item themselves.
            </summary>
            <param name="parameters">List of parameters passed from <see cref="M:DlhSoft.Windows.Data.ReadOnlyEntityCollection.InsertNewItem(System.Int32,System.Object[])">InsertNewItem</see> method used for actually creating the new resource item.</param>
            <returns>The newly created resource item.</returns>
        </member>
        <member name="P:DlhSoft.Windows.Data.ReadOnlyResourceCollection.Item(System.Int32)">
            <summary>
            Gets the resource at the specified index.
            </summary>
            <param name="index">The zero-based index of the resource to get.</param>
            <returns>The resource at the specified index.</returns>
        </member>
        <member name="T:DlhSoft.Windows.Data.ResourceManager">
            <summary>
            Object collection management engine that uses a resource collection to wrap the objects internally.
            Provides automatic management for the collection items.
            Use <see cref="P:DlhSoft.Windows.Data.EntityManager.Items">Items</see> property to set your own resource data item collection to manage and use <see cref="P:DlhSoft.Windows.Data.ResourceManager.Resources">Resources</see> property to access the managed resource collection mapping your items.
            It is recommended to set at least these data member properties: <see cref="P:DlhSoft.Windows.Data.ResourceManager.ContentMemberPath">ContentMemberPath</see>.
            These data member properties can also be set: <see cref="P:DlhSoft.Windows.Data.ResourceManager.ScheduleMemberPath">ScheduleMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.ResourceManager.CostPerUsageMemberPath">CostPerUsageMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.ResourceManager.CostPerHourMemberPath">CostPerHourMemberPath</see>.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.ResourceItem">ResourceItem</see> objects.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceManager.#ctor(DlhSoft.Windows.Data.DataManagementMode)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.ResourceItem">ResourceItem</see> objects.
            </summary>
            <param name="dataManagementMode">Data management mode to use.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceManager.#ctor(System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.SimpleResourceItem})">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> class using simple data management mode.
            </summary>
            <param name="simpleResourceItems">Item definitions representing resources to be initially added to the collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceManager.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.ResourceItem">ResourceItem</see> objects.
            </summary>
            <param name="items">Collection of resource items to be managed.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceManager.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.String,DlhSoft.Windows.Data.EntityManager.Initialization)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> class.
            </summary>
            <param name="items">Collection of resource items to be managed.</param>
            <param name="contentMemberPath">Path to an <see cref="T:System.Object">Object</see> value on a source resource item to serve as the resource content, or null to indicate that the content is not provided by the source resource item.</param>
            <param name="scheduleMemberPath">Path to a <see cref="T:DlhSoft.Windows.Data.Schedule">Schedule</see> value on a source resource item to serve as the resource schedule, or null to indicate that the schedule is not provided by the source resource item.</param>
            <param name="costPerUsageMemberPath">Path to a <see cref="T:System.Double">Double</see> value on a source resource item to serve as the resource cost per usage, or null to indicate that the cost per usage is not provided by the source resource item.</param>
            <param name="costPerHourMemberPath">Path to a <see cref="T:System.Double">Double</see> value on a source resource item to serve as the resource cost per hour, or null to indicate that the cost per hour is not provided by the source resource item.</param>
            <param name="initialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> initializes.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceManager.CreateEntityCollection">
            <summary>
            Creates the internal resource collection to be used as the resource host of this <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see>.
            </summary>
            <returns>The internal resource collection to be used as the resource host of this <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceManager.CreateReadOnlyEntityCollection(DlhSoft.Windows.Data.EntityCollection)">
            <summary>
            Creates the internal read-only resource collection to be provided by this <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see>.
            </summary>
            <returns>The internal read-only resource collection to be provided by this <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceManager.InitializeEntityCollection(DlhSoft.Windows.Data.EntityCollection)">
            <summary>
            Sets up the read only resource collection to be used for viewing resource externally.
            </summary>
            <param name="entities">Internal resource collection to be used as the source for the read only resource collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceManager.CreateEntity(System.Object)">
            <summary>
            Creates a new resource wrapping the specified object.
            </summary>
            <param name="item">Resource item to be wrapped by the new resource.</param>
            <returns>The new resource that wraps the specified object.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceManager.CreateEntityFromSimpleItem(DlhSoft.Windows.Data.SimpleEntityItem)">
            <summary>
            Creates a new resource for simple data management mode.
            </summary>
            <param name="entityItem">The entity item definition to use.</param>
            <returns>The new resource.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceManager.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.SimpleResourceItem})">
            <summary>
            Inserts a set of resources into the managed collection.
            </summary>
            <param name="index">The zero-based index at which the resources should be inserted.</param>
            <param name="simpleResourceItems">Item definitions representing the resources to insert.</param>
            <returns>The new resources.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceManager.Insert(System.Int32,DlhSoft.Windows.Data.SimpleResourceItem)">
            <summary>
            Inserts a resource into the managed collection.
            </summary>
            <param name="index">The zero-based index at which the resource should be inserted.</param>
            <param name="simpleResourceItem">Item definition representing the resource to insert.</param>
            <returns>The new resource.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceManager.AddRange(System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.SimpleResourceItem})">
            <summary>
            Adds a set of resources to the end of the managed collection.
            </summary>
            <param name="simpleResourceItems">Item definitions representing the resources to be added at the end of the collection.</param>
            <returns>The new resources.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceManager.Add(DlhSoft.Windows.Data.SimpleResourceItem)">
            <summary>
            Adds a resource to the end of the managed collection.
            </summary>
            <param name="simpleResourceItem">Item definition representing the resource to be added at the end of the collection.</param>
            <returns>The new resource.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceManager.RemoveRange(System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.Resource})">
            <summary>
            Removes specific resources from the managed collection.
            </summary>
            <param name="resources">The resources to remove from the collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceManager.Remove(DlhSoft.Windows.Data.Resource)">
            <summary>
            Removes a specific resource from the managed collection.
            </summary>
            <param name="resource">The resource to remove from the collection.</param>
        </member>
        <member name="F:DlhSoft.Windows.Data.ResourceManager.ResourcesProperty">
            <summary>
            Identifies the Resources dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.ResourceManager.ContentMemberPathProperty">
            <summary>
            Identifies the ContentMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceManager.OnContentMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.ResourceManager.ContentMemberPath">ContentMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.ResourceManager.ScheduleMemberPathProperty">
            <summary>
            Identifies the ScheduleMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceManager.OnScheduleMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.ResourceManager.ScheduleMemberPath">ScheduleMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.ResourceManager.CostPerUsageMemberPathProperty">
            <summary>
            Identifies the CostPerUsageMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceManager.OnCostPerUsageMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.ResourceManager.CostPerUsageMemberPath">CostPerUsageMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.ResourceManager.CostPerHourMemberPathProperty">
            <summary>
            Identifies the CostPerHourMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceManager.OnCostPerHourMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.ResourceManager.CostPerHourMemberPath">CostPerHourMemberPath</see> property changes.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceManager.GetResource(System.Object)">
            <summary>
            Gets the resource that wraps the specified object from the internal resource collection, or null if such resource doesn't exist.
            </summary>
            <param name="item">Wrapped object to search for.</param>
            <returns>The resource that wraps the specified object from the internal resource collection, or null if such resource doesn't exist.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceManager.GetResourceAt(System.Int32)">
            <summary>
            Gets the resource at the specified index from the internal resource collection.
            </summary>
            <param name="index">The zero-based index of the resource to be get.</param>
            <returns>The resource at the specified index from the internal resource collection.</returns>
        </member>
        <member name="P:DlhSoft.Windows.Data.ResourceManager.Resources">
            <summary>
            Gets the read-only resource collection wrapping the objects that are currently managed.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ResourceManager.ContentMemberPath">
            <summary>
            Gets or sets the path to an <see cref="T:System.Object">Object</see> value on a source resource item to serve as the resource content, or null to indicate that the content is not provided by the source resource item.
            It is recommended to set this property.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ResourceManager.ScheduleMemberPath">
            <summary>
            Gets or sets the path to a <see cref="T:DlhSoft.Windows.Data.Schedule">Schedule</see> value on a source resource item to serve as the resource schedule, or null to indicate that the schedule is not provided by the source resource item.
            The resource schedule indicates the time intervals of a day that the resource can use as work time for achieving completion of a task, restricting the task schedule further. If the resource schedule is not set it means that the resource can use any time interval as work time, and the task schedule is not restricted.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ResourceManager.CostPerUsageMemberPath">
            <summary>
            Gets or sets the path to a <see cref="T:System.Double">Double</see> value on a source resource item to serve as the resource cost per usage, or null to indicate that the cost per usage is not provided by the source resource item.
            The resource cost per usage is applied when computing a task cost, one time for each assignment, without considering the task duration or the assigned allocation units.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ResourceManager.CostPerHourMemberPath">
            <summary>
            Gets or sets the path to a <see cref="T:System.Double">Double</see> value on a source resource item to serve as the resource cost per hour, or null to indicate that the cost per hour is not provided by the source resource item.
            The resource cost per hour is applied when computing a task cost, proportionally for each assignment, considering the task duration and the assigned allocation units.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ResourceManager.Item(System.Object)">
            <summary>
            Gets the resource that wraps the specified object from the internal resource collection, or null if such resource doesn't exist.
            </summary>
            <param name="item">Wrapped object to search for.</param>
            <returns>The resource that wraps the specified object from the internal resource collection, or null if such resource doesn't exist.</returns>
        </member>
        <member name="T:DlhSoft.Windows.Data.ScheduleDefinitionManager">
            <summary>
            Object collection management engine that uses a schedule definition collection to wrap the objects internally.
            Provides automatic management for the collection items.
            Use <see cref="P:DlhSoft.Windows.Data.EntityManager.Items">Items</see> property to set your own schedule definition data item collection to manage and use <see cref="P:DlhSoft.Windows.Data.ScheduleDefinitionManager.ScheduleDefinitions">ScheduleDefinitions</see> property to access the managed schedule definition collection mapping your items.
            It is recommended to set at least these data member properties: <see cref="P:DlhSoft.Windows.Data.ScheduleDefinitionManager.DefinitionStringMemberPath">DefinitionStringMemberPath</see>.
            These data member properties can also be set: <see cref="P:DlhSoft.Windows.Data.ScheduleDefinitionManager.ContentMemberPath">ContentMemberPath</see>.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionManager">ScheduleDefinitionManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionItem">ScheduleDefinitionItem</see> objects.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionManager.#ctor(DlhSoft.Windows.Data.DataManagementMode)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionManager">ScheduleDefinitionManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionItem">ScheduleDefinitionItem</see> objects.
            </summary>
            <param name="dataManagementMode">Data management mode to use.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionManager.#ctor(System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.SimpleScheduleDefinitionItem})">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionManager">ScheduleDefinitionManager</see> class using simple data management mode.
            </summary>
            <param name="simpleScheduleDefinitionItems">Item definitions representing schedule definitions to be initially added to the collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionManager.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionManager">ScheduleDefinitionManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionItem">ScheduleDefinitionItem</see> objects.
            </summary>
            <param name="items">Collection of schedule definition items to be managed.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionManager.#ctor(System.Collections.IEnumerable,System.String,System.String,DlhSoft.Windows.Data.EntityManager.Initialization)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionManager">ScheduleDefinitionManager</see> class.
            </summary>
            <param name="items">Collection of schedule definition items to be managed.</param>
            <param name="contentMemberPath">Path to an <see cref="T:System.Object">Object</see> value on a source schedule definition item to serve as the schedule definition content, or null to indicate that the content is not provided by the source schedule definition item.</param>
            <param name="definitionStringMemberPath">Path to a <see cref="T:System.String">String</see> value on a source schedule definition item to serve as the schedule definition string, or null to indicate that the definition string value is not provided by the source schedule definition item.</param>
            <param name="initialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionManager">ScheduleDefinitionManager</see> initializes.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionManager.CreateEntityCollection">
            <summary>
            Creates the internal schedule definition collection to be used as the schedule definition host of this <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionManager">ScheduleDefinitionManager</see>.
            </summary>
            <returns>The internal schedule definition collection to be used as the schedule definition host of this <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionManager">ScheduleDefinitionManager</see>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionManager.CreateReadOnlyEntityCollection(DlhSoft.Windows.Data.EntityCollection)">
            <summary>
            Creates the internal read-only schedule definition collection to be provided by this <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionManager">ScheduleDefinitionManager</see>.
            </summary>
            <returns>The internal read-only schedule definition collection to be provided by this <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionManager">ScheduleDefinitionManager</see>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionManager.InitializeEntityCollection(DlhSoft.Windows.Data.EntityCollection)">
            <summary>
            Sets up the read only schedule definition collection to be used for viewing schedule definition externally.
            </summary>
            <param name="entities">Internal schedule definition collection to be used as the source for the read only schedule definition collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionManager.CreateEntity(System.Object)">
            <summary>
            Creates a new schedule definition wrapping the specified object.
            </summary>
            <param name="item">Schedule definition item to be wrapped by the new schedule definition.</param>
            <returns>The new schedule definition that wraps the specified object.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionManager.CreateEntityFromSimpleItem(DlhSoft.Windows.Data.SimpleEntityItem)">
            <summary>
            Creates a new schedule definition for simple data management mode.
            </summary>
            <param name="entityItem">The entity item definition to use.</param>
            <returns>The new schedule definition.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionManager.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.SimpleScheduleDefinitionItem})">
            <summary>
            Inserts a set of schedule definitions into the managed collection.
            </summary>
            <param name="index">The zero-based index at which the schedule definitions should be inserted.</param>
            <param name="simpleScheduleDefinitionItems">Item definitions representing the schedule definitions to insert.</param>
            <returns>The new schedule definitions.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionManager.Insert(System.Int32,DlhSoft.Windows.Data.SimpleScheduleDefinitionItem)">
            <summary>
            Inserts a schedule definition into the managed collection.
            </summary>
            <param name="index">The zero-based index at which the schedule definition should be inserted.</param>
            <param name="simpleScheduleDefinitionItem">Item definition representing the schedule definition to insert.</param>
            <returns>The new schedule definition.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionManager.AddRange(System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.SimpleScheduleDefinitionItem})">
            <summary>
            Adds a set of schedule definitions to the end of the managed collection.
            </summary>
            <param name="simpleScheduleDefinitionItems">Item definitions representing the schedule definitions to be added at the end of the collection.</param>
            <returns>The new schedule definitions.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionManager.Add(DlhSoft.Windows.Data.SimpleScheduleDefinitionItem)">
            <summary>
            Adds a schedule definition to the end of the managed collection.
            </summary>
            <param name="simpleScheduleDefinitionItem">Item definition representing the schedule definition to be added at the end of the collection.</param>
            <returns>The new schedule definition.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionManager.RemoveRange(System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.ScheduleDefinition})">
            <summary>
            Removes specific schedule definitions from the managed collection.
            </summary>
            <param name="scheduleDefinitions">The schedule definitions to remove from the collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionManager.Remove(DlhSoft.Windows.Data.ScheduleDefinition)">
            <summary>
            Removes a specific schedule definition from the managed collection.
            </summary>
            <param name="scheduleDefinition">The schedule definition to remove from the collection.</param>
        </member>
        <member name="F:DlhSoft.Windows.Data.ScheduleDefinitionManager.ScheduleDefinitionsProperty">
            <summary>
            Identifies the ScheduleDefinitions dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.ScheduleDefinitionManager.ContentMemberPathProperty">
            <summary>
            Identifies the ContentMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionManager.OnContentMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.ScheduleDefinitionManager.ContentMemberPath">ContentMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.ScheduleDefinitionManager.DefinitionStringMemberPathProperty">
            <summary>
            Identifies the DefinitionStringMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionManager.OnDefinitionStringMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.ScheduleDefinitionManager.DefinitionStringMemberPath">DefinitionStringMemberPath</see> property changes.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionManager.GetScheduleDefinition(System.Object)">
            <summary>
            Gets the schedule definition that wraps the specified object from the internal schedule definition collection, or null if such schedule definition doesn't exist.
            </summary>
            <param name="item">Wrapped object to search for.</param>
            <returns>The schedule definition that wraps the specified object from the internal schedule definition collection, or null if such schedule definition doesn't exist.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionManager.GetScheduleDefinitionAt(System.Int32)">
            <summary>
            Gets the schedule definition at the specified index from the internal schedule definition collection.
            </summary>
            <param name="index">The zero-based index of the schedule definition to be get.</param>
            <returns>The schedule definition at the specified index from the internal schedule definition collection.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionManager.CreateSchedule(System.String)">
            <summary>
            Creates a schedule object based on a schedule definition string value.
            </summary>
            <param name="scheduleDefinitionString">The schedule definition string value, of this form: Monday-Friday 08:00-12:00 12:30-16:30, Saturday 08:00-12:00, 01/01/2010 -, 01/02/2010-01/05/2010 11:00-14:00.</param>
            <returns>The schedule object created based on the provided definition string.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionManager.CreateSchedule(System.Object,System.String)">
            <summary>
            Creates a schedule object based on a schedule definition string value.
            </summary>
            <param name="content">An object to be set as the content of the output schedule object.</param>
            <param name="scheduleDefinitionString">The schedule definition string value, of this form: Monday-Friday 08:00-12:00 12:30-16:30, Saturday 08:00-12:00, 01/01/2010 -, 01/02/2010-01/05/2010 11:00-14:00.</param>
            <returns>The schedule object created based on the provided definition string.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionManager.CreateSchedule(DlhSoft.Windows.Data.ScheduleDefinitionItem)">
            <summary>
            Creates a schedule object based on a schedule definition item.
            </summary>
            <param name="scheduleDefinitionItem">The schedule definition item to create the Schedule from.</param>
            <returns>The schedule object created based on the provided definition item.</returns>
        </member>
        <member name="P:DlhSoft.Windows.Data.ScheduleDefinitionManager.ScheduleDefinitions">
            <summary>
            Gets the read-only schedule definition collection wrapping the objects that are currently managed.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ScheduleDefinitionManager.ContentMemberPath">
            <summary>
            Gets or sets the path to an <see cref="T:System.Object">Object</see> value on a source schedule definition item to serve as the schedule definition content, or null to indicate that the content is not provided by the source schedule definition item.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ScheduleDefinitionManager.DefinitionStringMemberPath">
            <summary>
            Gets or sets the path to a <see cref="T:System.String">String</see> value on a source schedule definition item to serve as the schedule definition string value, or null to indicate that the definition string value is not provided by the source schedule definition item.
            The definition string value is of this form: Monday-Friday 08:00-12:00 12:30-16:30, Saturday 08:00-12:00, 01/01/2010, 01/02/2010-01/05/2010 11:00-14:00.
            It is recommended to set this property.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ScheduleDefinitionManager.Item(System.Object)">
            <summary>
            Gets the schedule definition that wraps the specified object from the internal schedule definition collection, or null if such schedule definition doesn't exist.
            </summary>
            <param name="item">Wrapped object to search for.</param>
            <returns>The schedule definition that wraps the specified object from the internal schedule definition collection, or null if such schedule definition doesn't exist.</returns>
        </member>
        <member name="T:DlhSoft.Windows.Data.AssignmentCollection">
            <summary>
            Observable collection that owns <see cref="T:DlhSoft.Windows.Data.Assignment">Assignment</see> objects used internally by an <see cref="T:DlhSoft.Windows.Data.AssignmentManager">AssignmentManager</see>.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentCollection.#ctor(DlhSoft.Windows.Data.AssignmentManager)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.AssignmentCollection">AssignmentCollection</see> class.
            </summary>
            <param name="parentManager">The parent manager of the collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentCollection.InsertItem(System.Int32,DlhSoft.Windows.Data.Entity)">
            <summary>
            Inserts an assignment to the collection at the specified index and sets it as owned by this <see cref="T:DlhSoft.Windows.Data.AssignmentCollection">AssignmentCollection</see>.
            </summary>
            <param name="index">The zero-based index at which the assignment should be inserted.</param>
            <param name="entity">The assignment to insert.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the assignment at the specified index of the collection and sets it as not owned by this <see cref="T:DlhSoft.Windows.Data.AssignmentCollection">AssignmentCollection</see>.
            </summary>
            <param name="index">The zero-based index of the assignment to remove.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentCollection.GetAssignment(System.Object)">
            <summary>
            Gets the assignment that wraps the specified object, or null if such assignment doesn't exist.
            </summary>
            <param name="item">Wrapped object to search for.</param>
            <returns>The assignment that wraps the specified object, or null if such assignment doesn't exist.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentCollection.GetAssignmentAt(System.Int32)">
            <summary>
            Gets the assignment at the specified index.
            </summary>
            <param name="index">The zero-based index of the assignment to be get.</param>
            <returns>The assignment at the specified index.</returns>
        </member>
        <member name="P:DlhSoft.Windows.Data.AssignmentCollection.Item(System.Int32)">
            <summary>
            Gets the assignment at the specified index.
            </summary>
            <param name="index">The zero-based index of the assignment to be get.</param>
            <returns>The assignment at the specified index.</returns>
        </member>
        <member name="P:DlhSoft.Windows.Data.AssignmentCollection.ParentManager">
            <summary>
            Gets the parent manager of this collection.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.AssignmentCollection.ParentTask">
            <summary>
            Gets the parent task of this collection.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Converters.AssignmentsConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Converters.AssignmentsConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
        </member>
        <member name="T:DlhSoft.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:DlhSoft.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:DlhSoft.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.TimeOfDay">
            <summary>
            Represents a time of the day, typically expressed as a time span passed between the start of the day and that time.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> structure.
            </summary>
            <param name="timeOfDay">The time of day to use expressed as a time span value. The extra time information from the time span value is ignored.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.ToTimeSpan">
            <summary>
            Returns a time span value based on the current time of day value.
            </summary>
            <returns>A time span value based on the current time of day value.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.op_Implicit(DlhSoft.Windows.Data.TimeOfDay)~System.TimeSpan">
            <summary>
            Casts a time of day value to a time span value.
            </summary>
            <param name="timeOfDay">Time of day value to cast.</param>
            <returns>Casted time span value.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.op_Implicit(System.TimeSpan)~DlhSoft.Windows.Data.TimeOfDay">
            <summary>
            Casts a time span value to a time of day value.
            </summary>
            <param name="timeOfDay">Time span value to cast.</param>
            <returns>Casted time of day value.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> structure to the specified number of ticks.
            </summary>
            <param name="ticks">A time period expressed in 100-nanosecond units.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> structure to a specified number of hours, minutes, and seconds.
            </summary>
            <param name="hours">Number of hours.</param>
            <param name="minutes">Number of minutes.</param>
            <param name="seconds">Number of seconds.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> structure to a specified number of days, hours, minutes, and seconds.
            </summary>
            <param name="days">Number of days.</param>
            <param name="hours">Number of hours.</param>
            <param name="minutes">Number of minutes.</param>
            <param name="seconds">Number of seconds.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> structure to a specified number of days, hours, minutes, seconds, and milliseconds.
            </summary>
            <param name="days">Number of days.</param>
            <param name="hours">Number of hours.</param>
            <param name="minutes">Number of minutes.</param>
            <param name="seconds">Number of seconds.</param>
            <param name="milliseconds">Number of milliseconds.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.Add(System.TimeSpan)">
            <summary>
            Adds the value of the specified <see cref="T:System.TimeSpan">TimeSpan</see> to the value of this instance.
            </summary>
            <param name="value">A <see cref="T:System.TimeSpan">TimeSpan</see> that contains the interval to add.</param>
            <returns>A <see cref="T:System.TimeSpan">TimeSpan</see> whose value is the sum of the time span represented by this instance and the time interval represented by <paramref name="value"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.Compare(DlhSoft.Windows.Data.TimeOfDay,DlhSoft.Windows.Data.TimeOfDay)">
            <summary>
            Compares two instances of <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> and returns an indication of their relative values.
            </summary>
            <param name="d1">The first <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> instance.</param>
            <param name="d2">The second <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> instance.</param>
            <returns>A signed number indicating the relative values of <paramref name="d1"/> and <paramref name="d2"/>: less than zero indicates that <paramref name="d1"/> is less than <paramref name="d2"/>, zero indicates that <paramref name="d1"/> equals <paramref name="d2"/>, greater than zero indicates that <paramref name="d1"/> is greater than <paramref name="d2"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.CompareTo(DlhSoft.Windows.Data.TimeOfDay)">
            <summary>
            Compares the value of this instance to a specified <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> value and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> value.
            </summary>
            <param name="value">A <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> object to compare.</param>
            <returns>A signed number indicating the relative values of this instance and the value parameter: : less than zero indicates that this instance is earlier than <paramref name="value"/>, zero indicates that this instance is the same as <paramref name="value"/>, greater than zero indicates that this instance is later than <paramref name="value"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.CompareTo(System.Object)">
            <summary>
            Compares the value of this instance to a specified object that contains a specified <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> or <see cref="T:System.TimeSpan">TimeSpan</see> value, and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> or <see cref="T:System.TimeSpan">TimeSpan</see> value.
            </summary>
            <param name="value">A boxed <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> or <see cref="T:System.TimeSpan">TimeSpan</see> object to compare, or <c>null</c> reference (<c>Nothing</c> in Visual Basic).</param>
            <returns>A signed number indicating the relative values of this instance and the value parameter: less than zero indicates that this instance is earlier than <paramref name="value"/>, zero indicates that this instance is the same as <paramref name="value"/>, greater than zero indicates that this instance is later than <paramref name="value"/>, or <paramref name="value"/> is a <c>null</c> reference (<c>Nothing</c> in Visual Basic).</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.Equals(DlhSoft.Windows.Data.TimeOfDay)">
            <summary>
            Returns a value that indicates whether this instance is equal to the specified <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> instance.
            </summary>
            <param name="value">A <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> instance to compare to this instance.</param>
            <returns><c>true</c> if the value parameter equals the value of this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether this instance is equal to a specified object.
            </summary>
            <param name="value">An object to compare to this instance.</param>
            <returns><c>true</c> if the value parameter is an instance of <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> or <see cref="T:System.TimeSpan">TimeSpan</see> and equals the value of this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.Equals(DlhSoft.Windows.Data.TimeOfDay,DlhSoft.Windows.Data.TimeOfDay)">
            <summary>
            Returns a value that indicates whether two instances of <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> are equal.
            </summary>
            <param name="d1">The first <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> instance.</param>
            <param name="d2">The second <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> instance.</param>
            <returns><c>true</c> if the two <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> values are equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.FromDays(System.Double)">
            <summary>
            Returns a <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> that represents a specified number of days, where the specification is accurate to the nearest millisecond.
            </summary>
            <param name="value">A number of days, accurate to the nearest millisecond.</param>
            <returns>A <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> that represents value.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.FromHours(System.Double)">
            <summary>
            Returns a <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> that represents a specified number of hours, where the specification is accurate to the nearest millisecond.
            </summary>
            <param name="value">A number of hours, accurate to the nearest millisecond.</param>
            <returns>A <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> that represents value.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.FromMilliseconds(System.Double)">
            <summary>
            Returns a <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> that represents a specified number of milliseconds.
            </summary>
            <param name="value">A number of milliseconds.</param>
            <returns>A <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> that represents value.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.FromMinutes(System.Double)">
            <summary>
            Returns a <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> that represents a specified number of minutes, where the specification is accurate to the nearest millisecond.
            </summary>
            <param name="value">A number of minutes, accurate to the nearest millisecond.</param>
            <returns>A <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> that represents value.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.FromSeconds(System.Double)">
            <summary>
            Returns a <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> that represents a specified number of seconds, where the specification is accurate to the nearest millisecond.
            </summary>
            <param name="value">A number of seconds, accurate to the nearest millisecond.</param>
            <returns>A <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> that represents value.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.FromTicks(System.Int64)">
            <summary>
            Returns a <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> that represents a specified time, where the specification is in units of ticks.
            </summary>
            <param name="value">A number of ticks that represent a time.</param>
            <returns>A <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> with a value of value.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A hash code for the current <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.Negate">
            <summary>
            Returns the negated <see cref="T:System.TimeSpan">TimeSpan</see> of this instance.
            </summary>
            <returns>A <see cref="T:System.TimeSpan">TimeSpan</see> interval equal to the negated time span represented by this instance.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.Parse(System.String)">
            <summary>
            Converts the specified string representation of a time of day to its <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> equivalent.
            </summary>
            <param name="s">A string containing a time of day to convert.</param>
            <returns>A <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> equivalent to the time of day contained in <paramref name="s"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.Subtract(System.TimeSpan)">
            <summary>
            Subtracts the specified <see cref="T:System.TimeSpan">TimeSpan</see> from this instance.
            </summary>
            <param name="value">An instance of <see cref="T:System.TimeSpan">TimeSpan</see>.</param>
            <returns>A <see cref="T:System.TimeSpan">TimeSpan</see> interval equal to the time span represented by this instance minus the time span represented by <paramref name="value"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.ToString">
            <summary>
            Converts the value of the current <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> object to its equivalent string representation.
            </summary>
            <returns>A string representation of the value of the current <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> object.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.TryParse(System.String,DlhSoft.Windows.Data.TimeOfDay@)">
            <summary>
            Converts the specified string representation of a time of day to its <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> equivalent.
            </summary>
            <param name="s">A string containing a time of day to convert.</param>
            <param name="result">When this method returns, contains the <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> value equivalent to the time of day contained in <paramref name="s"/>, if the conversion succeeded, or <see cref="F:DlhSoft.Windows.Data.TimeOfDay.MinValue">MinValue</see> if the conversion failed. The conversion fails if the <paramref name="s"/> parameter is a <c>null</c> reference (<c>Nothing</c> in Visual Basic), or does not contain a valid string representation of a time of day. This parameter is passed uninitialized.</param>
            <returns><c>true</c> if the <paramref name="s"/> parameter was converted successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.op_UnaryPlus(DlhSoft.Windows.Data.TimeOfDay)">
            <summary>
            Returns the time span of the specified time of day.
            </summary>
            <param name="d">A <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see>.</param>
            <returns>A <see cref="T:System.TimeSpan">TimeSpan</see> that is the time of day of <paramref name="d"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.op_Addition(DlhSoft.Windows.Data.TimeOfDay,System.TimeSpan)">
            <summary>
            Adds a specified time interval to a specified time of day, yielding a new time span.
            </summary>
            <param name="d">A <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see>.</param>
            <param name="t">A <see cref="T:System.TimeSpan">TimeSpan</see>.</param>
            <returns>A <see cref="T:System.TimeSpan">TimeSpan</see> that is the sum of the values of <paramref name="d"/> and <paramref name="t"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.op_Equality(DlhSoft.Windows.Data.TimeOfDay,System.TimeSpan)">
            <summary>
            Determines whether a specified instance of <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> is equal to a specified <see cref="T:System.TimeSpan">TimeSpan</see>.
            </summary>
            <param name="d1">A <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see>.</param>
            <param name="d2">A <see cref="T:System.TimeSpan">TimeSpan</see>.</param>
            <returns><c>true</c> if <paramref name="d1"/> and <paramref name="d2"/> represent the same time span; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.op_Inequality(DlhSoft.Windows.Data.TimeOfDay,System.TimeSpan)">
            <summary>
            Determines whether a specified instance of <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> is not equal to a specified <see cref="T:System.TimeSpan">TimeSpan</see>.
            </summary>
            <param name="d1">A <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see>.</param>
            <param name="d2">A <see cref="T:System.TimeSpan">TimeSpan</see>.</param>
            <returns><c>true</c> if <paramref name="d1"/> and <paramref name="d2"/> do not represent the same time span; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.op_GreaterThan(DlhSoft.Windows.Data.TimeOfDay,System.TimeSpan)">
            <summary>
            Determines whether one specified <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> is greater than a specified <see cref="T:System.TimeSpan">TimeSpan</see>.
            </summary>
            <param name="d1">A <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see>.</param>
            <param name="d2">A <see cref="T:System.TimeSpan">TimeSpan</see>.</param>
            <returns><c>true</c> if <paramref name="d1"/> is greater than <paramref name="d2"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.op_GreaterThanOrEqual(DlhSoft.Windows.Data.TimeOfDay,System.TimeSpan)">
            <summary>
            Determines whether one specified <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> is greater than or equal to a specified <see cref="T:System.TimeSpan">TimeSpan</see>.
            </summary>
            <param name="d1">A <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see>.</param>
            <param name="d2">A <see cref="T:System.TimeSpan">TimeSpan</see>.</param>
            <returns><c>true</c> if <paramref name="d1"/> is greater than or equal to <paramref name="d2"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.op_LessThan(DlhSoft.Windows.Data.TimeOfDay,System.TimeSpan)">
            <summary>
            Determines whether one specified <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> is less than a specified <see cref="T:System.TimeSpan">TimeSpan</see>.
            </summary>
            <param name="d1">A <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see>.</param>
            <param name="d2">A <see cref="T:System.TimeSpan">TimeSpan</see>.</param>
            <returns><c>true</c> if <paramref name="d1"/> is less than <paramref name="d2"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.op_LessThanOrEqual(DlhSoft.Windows.Data.TimeOfDay,System.TimeSpan)">
            <summary>
            Determines whether one specified <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> is less than or equal to a specified <see cref="T:System.TimeSpan">TimeSpan</see>.
            </summary>
            <param name="d1">A <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see>.</param>
            <param name="d2">A <see cref="T:System.TimeSpan">TimeSpan</see>.</param>
            <returns><c>true</c> if <paramref name="d1"/> is less than or equal to <paramref name="d2"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.op_UnaryNegation(DlhSoft.Windows.Data.TimeOfDay)">
            <summary>
            Returns the negated time span of the specified time of day.
            </summary>
            <param name="d">A <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see>.</param>
            <returns>A <see cref="T:System.TimeSpan">TimeSpan</see> that is the negated time of day of <paramref name="d"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDay.op_Subtraction(DlhSoft.Windows.Data.TimeOfDay,System.TimeSpan)">
            <summary>
            Subtracts a specified time interval from a specified time of day, yielding a new time span.
            </summary>
            <param name="d">A <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see>.</param>
            <param name="t">A <see cref="T:System.TimeSpan">TimeSpan</see>.</param>
            <returns>A <see cref="T:System.TimeSpan">TimeSpan</see> that is the value of <paramref name="d"/> minus the value of <paramref name="t"/>.</returns>
        </member>
        <member name="F:DlhSoft.Windows.Data.TimeOfDay.MaxValue">
            <summary>
            Represents the largest possible value of <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see>. This field is read-only.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TimeOfDay.MinValue">
            <summary>
            Represents the smallest possible value of <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see>. This field is read-only.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TimeOfDay.Days">
            <summary>
            Gets the days component of the time interval represented by the current <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> structure.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TimeOfDay.Hours">
            <summary>
            Gets the hours component of the time interval represented by the current <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> structure.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TimeOfDay.Milliseconds">
            <summary>
            Gets the milliseconds component of the time interval represented by the current <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> structure.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TimeOfDay.Minutes">
            <summary>
            Gets the minutes component of the time interval represented by the current <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> structure.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TimeOfDay.Seconds">
            <summary>
            Gets the seconds component of the time interval represented by the current <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> structure.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TimeOfDay.Ticks">
            <summary>
            Gets the number of ticks that represent the value of the current <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> structure.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TimeOfDay.TotalDays">
            <summary>
            Gets the value of the current <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> structure expressed in whole and fractional days.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TimeOfDay.TotalHours">
            <summary>
            Gets the value of the current <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> structure expressed in whole and fractional hours.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TimeOfDay.TotalMilliseconds">
            <summary>
            Gets the value of the current <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> structure expressed in whole and fractional milliseconds.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TimeOfDay.TotalMinutes">
            <summary>
            Gets the value of the current <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> structure expressed in whole and fractional minutes.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TimeOfDay.TotalSeconds">
            <summary>
            Gets the value of the current <see cref="T:DlhSoft.Windows.Data.TimeOfDay">TimeOfDay</see> structure expressed in whole and fractional seconds.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.TimeOfDayTypeConverter">
            <summary>
            Supports string-to-TimeOfDay conversion, either for property editors in design environmentsto, or enable XAML usages.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDayTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object from the specified type to the type of this converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="sourceType">The type you want to convert from.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDayTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether the type converter can convert an object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="destinationType">The type you want to convert to.</param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDayTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified value to the intended conversion type of the converter.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The CultureInfo to use as the current culture.</param>
            <param name="value">The value to convert to the type of this converter.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDayTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the specified value object to the specified type.
            </summary>
            <param name="context">An object that provides a format context.</param>
            <param name="culture">The CultureInfo to use as the current culture.</param>
            <param name="value">The object to convert.</param>
            <param name="destinationType">The type to convert the object to.</param>
            <returns>The converted object.</returns>
        </member>
        <member name="T:DlhSoft.Windows.Data.AssignmentItem">
            <summary>
            Represents an assignment item aware of its assigned resource and allocation units that can be used as a source object to be wrapped within an <see cref="T:DlhSoft.Windows.Data.Assignment">Assignment</see> and managed using an <see cref="T:DlhSoft.Windows.Data.AssignmentManager">AssignmentManager</see>.
            It is recommended to set these data properties: <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see>, <see cref="P:DlhSoft.Windows.Data.AssignmentItem.AllocationUnits">AllocationUnits</see>.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see> class.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentItem.#ctor(System.Object,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see> class.
            </summary>
            <param name="resourceItem">Resource item of this <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see>.</param>
            <param name="allocationUnits">Allocation units value of this <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see>.</param>
        </member>
        <member name="F:DlhSoft.Windows.Data.AssignmentItem.ResourceItemProperty">
            <summary>
            Identifies the ResourceItem dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.AssignmentItem.AllocationUnitsProperty">
            <summary>
            Identifies the AllocationUnits dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.AssignmentItem.ResourceItem">
            <summary>
            Gets or sets the resource item of this <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see>.
            You can use a <see cref="P:DlhSoft.Windows.Data.AssignmentItem.ResourceItem">ResourceItem</see> object as the resource item.
            It is recommended to set this property.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.AssignmentItem.DlhSoft#Windows#Data#IAssignmentItem#ResourceItem">
            <summary>
            Gets or sets the resource item of this <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see>.
            When setting this property you must use an <see cref="T:DlhSoft.Windows.Data.IResourceItem">IResourceItem</see> object.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.AssignmentItem.AllocationUnits">
            <summary>
            Gets or sets the allocation units value of this <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see>.
            The allocation units value represents the percent of the resource availability to consider for the assignment, and it can be used when determining the resource availability for a specific time interval.
            It is recommended to set this property.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.Schedule">
            <summary>
            Represents an object that can be used to determine the work time intervals for any specific time interval in a project timeline.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.#ctor(System.Object,DlhSoft.Windows.Data.DayScheduleProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.Schedule">Schedule</see> class.
            </summary>
            <param name="content">An object (usually a name) that identifies the new <see cref="T:DlhSoft.Windows.Data.Schedule">Schedule</see> instance.</param>
            <param name="dayScheduleProvider">A method that returns the work time intervals of a specified day that defines the new <see cref="T:DlhSoft.Windows.Data.Schedule">Schedule</see> instance.</param>
            <exception cref="T:System.ArgumentNullException">The specified day schedule provider is null.</exception>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.ToString">
            <summary>
            Provides a string representation of this <see cref="T:DlhSoft.Windows.Data.Schedule">Schedule</see> object.
            </summary>
            <returns>The string representation of the object.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetNextWorkTimeIntervals(System.DateTime,System.TimeSpan)">
            <summary>
            Gets the work time intervals after a specified date and time and until summing up to a specified required work duration.
            </summary>
            <param name="start">The date and time to start searching at.</param>
            <param name="requiredWorkDuration">The required work duration sum to get.</param>
            <returns>The work time intervals after the specified date and time and until summing up to the specified required work duration.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified required work duration is not positive.</exception>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetNextWorkTimeIntervals(System.DateTime,System.TimeSpan,System.Boolean)">
            <summary>
            Gets the work time intervals after a specified date and time and until summing up to a specified required work duration.
            </summary>
            <param name="start">The date and time to start searching at.</param>
            <param name="requiredWorkDuration">The required work duration sum to get.</param>
            <param name="areIntervalEndsAccepted">Indicates whether or not to accept interval ends as valid times within the returned time interval collection.</param>
            <returns>The work time intervals after the specified date and time and until summing up to the specified required work duration.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified required work duration is not positive.</exception>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetNextWorkTimeIntervals(System.DateTime,System.TimeSpan,DlhSoft.Windows.Data.Schedule[])">
            <summary>
            Gets the work time intervals after a specified date and time and until summing up to a specified required work duration considering a suite of preferred schedules that must be resolved.
            </summary>
            <param name="start">The date and time to start searching at.</param>
            <param name="requiredWorkDuration">The required work duration sum to get.</param>
            <param name="schedules">The preferred work schedules to resolve.</param>
            <returns>The work time intervals after the specified date and time and until summing up to the specified required work duration considering the suite of preferred schedules that must be resolved.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified required work duration is not positive.</exception>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetNextWorkTimeIntervals(System.DateTime,System.TimeSpan,DlhSoft.Windows.Data.Schedule[],System.Boolean)">
            <summary>
            Gets the work time intervals after a specified date and time and until summing up to a specified required work duration considering a suite of preferred schedules that must be resolved.
            </summary>
            <param name="start">The date and time to start searching at.</param>
            <param name="requiredWorkDuration">The required work duration sum to get.</param>
            <param name="schedules">The preferred work schedules to resolve.</param>
            <param name="areIntervalEndsAccepted">Indicates whether or not to accept interval ends as valid times within the returned time interval collection.</param>
            <returns>The work time intervals after the specified date and time and until summing up to the specified required work duration considering the suite of preferred schedules that must be resolved.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified required work duration is not positive.</exception>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetNextWorkTimeIntervals(System.DateTime,System.TimeSpan,DlhSoft.Windows.Data.Schedule[],System.TimeSpan)">
            <summary>
            Gets the work time intervals after a specified date and time and until summing up to a specified required work duration considering a suite of preferred schedules that must be resolved but without exceeding a specified maximum search duration.
            </summary>
            <param name="start">The date and time to start searching at.</param>
            <param name="requiredWorkDuration">The required work duration sum to get.</param>
            <param name="schedules">The preferred work schedules to resolve.</param>
            <param name="maxSearchDuration">The maximum duration to search.</param>
            <returns>The work time intervals after the specified date and time and until summing up to the specified required work duration considering the suite of preferred schedules that must be resolved but without exceeding the specified maximum search duration.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified required work duration is not positive or the specified maximum search duration is not positive.</exception>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetNextWorkTimeIntervals(System.DateTime,System.TimeSpan,DlhSoft.Windows.Data.Schedule[],System.TimeSpan,System.Boolean)">
            <summary>
            Gets the work time intervals after a specified date and time and until summing up to a specified required work duration considering a suite of preferred schedules that must be resolved but without exceeding a specified maximum search duration.
            </summary>
            <param name="start">The date and time to start searching at.</param>
            <param name="requiredWorkDuration">The required work duration sum to get.</param>
            <param name="schedules">The preferred work schedules to resolve.</param>
            <param name="maxSearchDuration">The maximum duration to search.</param>
            <param name="areIntervalEndsAccepted">Indicates whether or not to accept interval ends as valid times within the returned time interval collection.</param>
            <returns>The work time intervals after the specified date and time and until summing up to the specified required work duration considering the suite of preferred schedules that must be resolved but without exceeding the specified maximum search duration.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified required work duration is not positive or the specified maximum search duration is not positive.</exception>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetPreviousWorkTimeIntervals(System.DateTime,System.TimeSpan)">
            <summary>
            Gets the work time intervals before a specified date and time and until summing up to a specified required work duration.
            </summary>
            <param name="start">The date and time to start searching at.</param>
            <param name="requiredWorkDuration">The required work duration sum to get.</param>
            <returns>The work time intervals before the specified date and time and until summing up to the specified required work duration.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified required work duration is not positive.</exception>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetPreviousWorkTimeIntervals(System.DateTime,System.TimeSpan,System.Boolean)">
            <summary>
            Gets the work time intervals before a specified date and time and until summing up to a specified required work duration.
            </summary>
            <param name="start">The date and time to start searching at.</param>
            <param name="requiredWorkDuration">The required work duration sum to get.</param>
            <param name="areIntervalEndsAccepted">Indicates whether or not to accept interval ends as valid times within the returned time interval collection.</param>
            <returns>The work time intervals before the specified date and time and until summing up to the specified required work duration.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified required work duration is not positive.</exception>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetPreviousWorkTimeIntervals(System.DateTime,System.TimeSpan,DlhSoft.Windows.Data.Schedule[])">
            <summary>
            Gets the work time intervals before a specified date and time and until summing up to a specified required work duration considering a suite of preferred schedules that must be resolved.
            </summary>
            <param name="start">The date and time to start searching at.</param>
            <param name="requiredWorkDuration">The required work duration sum to get.</param>
            <param name="schedules">The preferred work schedules to resolve.</param>
            <returns>The work time intervals before the specified date and time and until summing up to the specified required work duration considering the suite of preferred schedules that must be resolved.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified required work duration is not positive.</exception>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetPreviousWorkTimeIntervals(System.DateTime,System.TimeSpan,DlhSoft.Windows.Data.Schedule[],System.Boolean)">
            <summary>
            Gets the work time intervals before a specified date and time and until summing up to a specified required work duration considering a suite of preferred schedules that must be resolved.
            </summary>
            <param name="start">The date and time to start searching at.</param>
            <param name="requiredWorkDuration">The required work duration sum to get.</param>
            <param name="schedules">The preferred work schedules to resolve.</param>
            <param name="areIntervalEndsAccepted">Indicates whether or not to accept interval ends as valid times within the returned time interval collection.</param>
            <returns>The work time intervals before the specified date and time and until summing up to the specified required work duration considering the suite of preferred schedules that must be resolved.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified required work duration is not positive.</exception>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetPreviousWorkTimeIntervals(System.DateTime,System.TimeSpan,DlhSoft.Windows.Data.Schedule[],System.TimeSpan)">
            <summary>
            Gets the work time intervals before a specified date and time and until summing up to a specified required work duration considering a suite of preferred schedules that must be resolved but without exceeding a specified maximum search duration.
            </summary>
            <param name="start">The date and time to start searching at.</param>
            <param name="requiredWorkDuration">The required work duration sum to get.</param>
            <param name="schedules">The preferred work schedules to resolve.</param>
            <param name="maxSearchDuration">The maximum duration to search.</param>
            <returns>The work time intervals before the specified date and time and until summing up to the specified required work duration considering the suite of preferred schedules that must be resolved but without exceeding the specified maximum search duration.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified required work duration is not positive or the specified maximum search duration is not positive.</exception>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetPreviousWorkTimeIntervals(System.DateTime,System.TimeSpan,DlhSoft.Windows.Data.Schedule[],System.TimeSpan,System.Boolean)">
            <summary>
            Gets the work time intervals before a specified date and time and until summing up to a specified required work duration considering a suite of preferred schedules that must be resolved but without exceeding a specified maximum search duration.
            </summary>
            <param name="start">The date and time to start searching at.</param>
            <param name="requiredWorkDuration">The required work duration sum to get.</param>
            <param name="schedules">The preferred work schedules to resolve.</param>
            <param name="maxSearchDuration">The maximum duration to search.</param>
            <param name="areIntervalEndsAccepted">Indicates whether or not to accept interval ends as valid times within the returned time interval collection.</param>
            <returns>The work time intervals before the specified date and time and until summing up to the specified required work duration considering the suite of preferred schedules that must be resolved but without exceeding the specified maximum search duration.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified required work duration is not positive or the specified maximum search duration is not positive.</exception>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetNextWorkTime(System.DateTime)">
            <summary>
            Gets the next valid working time for a specified date and time based on the current schedule object.
            </summary>
            <param name="dateTime">Date and time to get the next valid working time for.</param>
            <returns>The next valid working time based for the specified date and time based on the current schedule object.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetNextWorkTime(System.DateTime,System.Boolean)">
            <summary>
            Gets the next valid working time for a specified date and time based on the current schedule object.
            </summary>
            <param name="dateTime">Date and time to get the next valid working time for.</param>
            <param name="isIntervalEndAccepted">Indicates whether or not to accept an interval end as a valid time to be returned.</param>
            <returns>The next valid working time based for the specified date and time based on the current schedule object.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetNextWorkTime(System.DateTime,DlhSoft.Windows.Data.Schedule[])">
            <summary>
            Gets the next valid working time for a specified date and time based on the current schedule object considering a suite of preferred schedules that must be resolved.
            </summary>
            <param name="dateTime">Date and time to get the next valid working time for.</param>
            <param name="schedules">The preferred work schedules to resolve.</param>
            <returns>The next valid working time based for the specified date and time based on the current schedule object considering the suite of preferred schedules that must be resolved.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetNextWorkTime(System.DateTime,DlhSoft.Windows.Data.Schedule[],System.Boolean)">
            <summary>
            Gets the next valid working time for a specified date and time based on the current schedule object considering a suite of preferred schedules that must be resolved.
            </summary>
            <param name="dateTime">Date and time to get the next valid working time for.</param>
            <param name="schedules">The preferred work schedules to resolve.</param>
            <param name="isIntervalEndAccepted">Indicates whether or not to accept an interval end as a valid time to be returned.</param>
            <returns>The next valid working time based for the specified date and time based on the current schedule object considering the suite of preferred schedules that must be resolved.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetPreviousWorkTime(System.DateTime)">
            <summary>
            Gets the previous valid working time for a specified date and time based on the current schedule object.
            </summary>
            <param name="dateTime">Date and time to get the previous valid working time for.</param>
            <returns>The previous valid working time based for the specified date and time based on the current schedule object.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetPreviousWorkTime(System.DateTime,System.Boolean)">
            <summary>
            Gets the previous valid working time for a specified date and time based on the current schedule object.
            </summary>
            <param name="dateTime">Date and time to get the previous valid working time for.</param>
            <param name="isIntervalEndAccepted">Indicates whether or not to accept an interval end as a valid time to be returned.</param>
            <returns>The previous valid working time based for the specified date and time based on the current schedule object.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetPreviousWorkTime(System.DateTime,DlhSoft.Windows.Data.Schedule[])">
            <summary>
            Gets the previous valid working time for a specified date and time based on the current schedule object considering a suite of preferred schedules that must be resolved.
            </summary>
            <param name="dateTime">Date and time to get the previous valid working time for.</param>
            <param name="schedules">The preferred work schedules to resolve.</param>
            <returns>The previous valid working time based for the specified date and time based on the current schedule object considering the suite of preferred schedules that must be resolved.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetPreviousWorkTime(System.DateTime,DlhSoft.Windows.Data.Schedule[],System.Boolean)">
            <summary>
            Gets the previous valid working time for a specified date and time based on the current schedule object considering a suite of preferred schedules that must be resolved.
            </summary>
            <param name="dateTime">Date and time to get the previous valid working time for.</param>
            <param name="schedules">The preferred work schedules to resolve.</param>
            <param name="isIntervalEndAccepted">Indicates whether or not to accept an interval end as a valid time to be returned.</param>
            <returns>The previous valid working time based for the specified date and time based on the current schedule object considering the suite of preferred schedules that must be resolved.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetFinish(System.DateTime,System.TimeSpan)">
            <summary>
            Gets the finish date and time of a task that would start at a specified date and time and would have a specified effort based on the current schedule.
            </summary>
            <param name="start">The start date and time of the task.</param>
            <param name="effort">The effort of the task.</param>
            <returns>The finish date and time of the task based on the current schedule.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetFinish(System.DateTime,System.TimeSpan,DlhSoft.Windows.Data.Schedule[])">
            <summary>
            Gets the finish date and time of a task that would start at a specified date and time and would have a specified effort based on the current schedule.
            </summary>
            <param name="start">The start date and time of the task.</param>
            <param name="effort">The effort of the task.</param>
            <param name="schedules">An optional set of supplementary schedule constraints.</param>
            <returns>The finish date and time of the task based on the current schedule.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetEffort(System.DateTime,System.DateTime)">
            <summary>
            Gets the effort of a task that would start at a specified date and time and would have a specified finish date and time based on the current schedule.
            </summary>
            <param name="start">The start date and time of the task.</param>
            <param name="finish">The finish date and time of the task.</param>
            <returns>The effort of the task based on the current schedule.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetEffort(System.DateTime,System.DateTime,DlhSoft.Windows.Data.Schedule[])">
            <summary>
            Gets the effort of a task that would start at a specified date and time and would have a specified finish date and time based on the current schedule.
            </summary>
            <param name="start">The start date and time of the task.</param>
            <param name="finish">The finish date and time of the task.</param>
            <param name="schedules">An optional set of supplementary schedule constraints.</param>
            <returns>The effort of the task based on the current schedule.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetStart(System.DateTime,System.TimeSpan)">
            <summary>
            Gets the start date and time of a task that would finish at a specified date and time and would have a specified effort based on the current schedule.
            </summary>
            <param name="finish">The finish date and time of the task.</param>
            <param name="effort">The effort of the task.</param>
            <returns>The start date and time of the task based on the current schedule.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetStart(System.DateTime,System.TimeSpan,DlhSoft.Windows.Data.Schedule[])">
            <summary>
            Gets the start date and time of a task that would finish at a specified date and time and would have a specified effort based on the current schedule.
            </summary>
            <param name="finish">The finish date and time of the task.</param>
            <param name="effort">The effort of the task.</param>
            <param name="schedules">An optional set of supplementary schedule constraints.</param>
            <returns>The start date and time of the task based on the current schedule.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.ClearCache">
            <summary>
            Clears the current value cache used for performance values.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.GetDefaultMaxSearchDuration">
            <summary>
            Gets the default maximum search duration to be used internally by this <see cref="T:DlhSoft.Windows.Data.Schedule">Schedule</see> instance.
            The default value returned by this method is 730.5 days (about 2 years).
            Inheriters should override this method to specify their own maximum search duration, which should be smaller to improve performance when the schedule uses often time intervals, or higher to support the case of a schedule that uses rare time intervals.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.StandardDayScheduleProvider(DlhSoft.Windows.Data.Date)">
            <summary>
            Represents the standard day schedule provider method representing the schedule of Monday - Friday, 8h/day (8 AM - 4 PM).
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Schedule.ContinuousScheduleProvider(DlhSoft.Windows.Data.Date)">
            <summary>
            Represents the continuous day schedule provider method representing the schedule of Sunday - Saturday, 24h/day.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Schedule.Content">
            <summary>
            Gets an object (usually a name) that identifies the <see cref="T:DlhSoft.Windows.Data.Schedule">Schedule</see> instance.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Schedule.DayScheduleProvider">
            <summary>
            Gets method that returns the work time intervals of a specified day that defines the <see cref="T:DlhSoft.Windows.Data.Schedule">Schedule</see> instance.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Schedule.IsCachingEnabled">
            <summary>
            Gets or sets a value indicating whether to use an internal value cache for optimization purposes.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Schedule.Standard">
            <summary>
            Gets the standard instance of the <see cref="T:DlhSoft.Windows.Data.Schedule">Schedule</see> class representing the schedule of Monday - Friday, 8h/day (8 AM - 4 PM).
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Schedule.StandardDayStart">
            <summary>
            Gets the standard time of working day using the <see cref="P:DlhSoft.Windows.Data.Schedule.Standard">Standard</see> schedule.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Schedule.StandardDayFinish">
            <summary>
            Gets the finish time of working day using the <see cref="P:DlhSoft.Windows.Data.Schedule.Standard">Standard</see> schedule.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Schedule.StandardDayDuration">
            <summary>
            Gets the duration of a working day using the <see cref="P:DlhSoft.Windows.Data.Schedule.Standard">Standard</see> schedule.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Schedule.Continuous">
            <summary>
            Gets the continuous instance of the <see cref="T:DlhSoft.Windows.Data.Schedule">Schedule</see> class representing the schedule of Sunday - Saturday, 24h/day.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.Task">
            <summary>
            Represents a task item object wrapper generated and managed by a <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>, aware of its indentation, start date and time, effort, etc. in a task collection.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.#ctor(System.Object,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,DlhSoft.Windows.Data.Entity.Initialization,DlhSoft.Windows.Data.Entity.Initialization,DlhSoft.Windows.Data.Entity.Initialization,DlhSoft.Windows.Data.Entity.Initialization)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.Task">Task</see> class.
            </summary>
            <param name="item">Source task item to be wrapped by the <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.</param>
            <param name="indentationMemberPath">Path to an <see cref="T:System.Int32">Int32</see> value on the source task item to serve as the indentation level in the hierarchical collection, or null to indicate that the indentation level is not provided by the source task item.</param>
            <param name="isExpandedMemberPath">Path to a <see cref="T:System.Boolean">Boolean</see> value on the source task item to serve as the expansion indicator in the hierarchical collection, or null to indicate that the expansion indicator is not provided by the source task item.</param>
            <param name="contentMemberPath">Path to an <see cref="T:System.Object">Object</see> value on the source task item to serve as the task content, or null to indicate that the content is not provided by the source task item.</param>
            <param name="scheduleMemberPath">Path to a <see cref="P:DlhSoft.Windows.Data.Task.Schedule">Schedule</see> value on the source task item to serve as the task schedule, or null to indicate that the schedule is not provided by the source task item.</param>
            <param name="startMemberPath">Path to a <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task start date and time, or null to indicate that the start date and time is not provided by the source task item.</param>
            <param name="effortMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source task item to serve as the task effort, or null to indicate that the effort is not provided by the wrapped object.</param>
            <param name="completedEffortMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source task item to serve as the task completed effort, or null to indicate that the completed effort is not provided by the wrapped object.</param>
            <param name="assignmentsMemberPath">Path to an <see cref="T:System.Collections.IEnumerable">IEnumerable</see> value on the source task item to serve as the task assignment item collection, or null to indicate that the assignment item collection is not provided by the source task item.</param>
            <param name="assignmentResourceItemMemberPath">Path to an <see cref="T:System.Object">Object</see> value on a source task assignment item to serve as the assigned resource item, or null to indicate that the assigned resource item is not provided by the source task assignment item.</param>
            <param name="assignmentAllocationUnitsMemberPath">Path to a <see cref="T:System.Double">Double</see> value on a source task assignment item to serve as the assigned allocation units value, or null to indicate that the allocation units value is not provided by the source task assignment item.</param>
            <param name="predecessorsMemberPath">Path to an <see cref="T:System.Collections.IEnumerable">IEnumerable</see> value on the source task item to serve as the task predecessor item collection, or null to indicate that the predecessor item collection is not provided by the source task item.</param>
            <param name="predecessorTaskItemMemberPath">Path to an <see cref="T:System.Object">Object</see> value on a source task predecessor item to serve as the predecessor task item, or null to indicate that the task item is not provided by the source task predecessor item.</param>
            <param name="predecessorDependencyTypeMemberPath">Path to a <see cref="T:DlhSoft.Windows.Data.DependencyType">DependencyType</see> value on a source task predecessor item to serve as the predecessor dependency type, or null to indicate that the dependency type is not provided by the source task predecessor item.</param>
            <param name="predecessorLagMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on a source task predecessor item to serve as the predecessor lag, or null to indicate that the lag is not provided by the source task predecessor item.</param>
            <param name="durationMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source task item to serve as the task duration, or null to indicate that the duration is not provided by the source task item.</param>
            <param name="finishMemberPath">Path to a <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task finish date and time, or null to indicate that the finish date and time is not provided by the source task item.</param>
            <param name="isMilestoneMemberPath">Path to a <see cref="T:System.Boolean">Boolean</see> value on the source task item to serve as the task milestone indicator, or null to indicate that the milestone indicator is not provided by the source task item.</param>
            <param name="completionMemberPath">Path to a <see cref="T:System.Double">Double</see> value on the source task item to serve as the task completion rate, or null to indicate that the completion rate is not provided by the source task item.</param>
            <param name="isCompletedMemberPath">Path to a <see cref="T:System.Boolean">Boolean</see> value on the source task item to serve as the task completed indicator, or null to indicate that the completed indicator is not provided by the source task item.</param>
            <param name="assignmentsStringMemberPath">Path to a <see cref="T:System.String">String</see> value on the source task item to serve as a string representation of the task assignment item collection, or null to indicate that the string representation of the assignment item collection is not provided by the source task item.</param>
            <param name="indexStringMemberPath">Path to a <see cref="T:System.String">String</see> value on the source task item to serve as a string representation of the index of the task item, or null to indicate that the string representation of the index is not provided by the source task item.</param>
            <param name="predecessorsStringMemberPath">Path to a <see cref="T:System.String">String</see> value on the source task item to serve as a string representation of the task predecessor item collection, or null to indicate that the string representation of the predecessor item collection is not provided by the source task item.</param>
            <param name="costMemberPath">Path to a <see cref="T:System.Double">Double</see> value on the source task item to serve as the task cost, or null to indicate that the cost is not provided by the source task item.</param>
            <param name="minStartMemberPath">Path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task minimum start date and time, or null to indicate that the minimum start date and time is not provided by the source task item.</param>
            <param name="maxStartMemberPath">Path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task maximum start date and time, or null to indicate that the maximum start date and time is not provided by the source task item.</param>
            <param name="minFinishMemberPath">Path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task minimum finish date and time, or null to indicate that the minimum finish date and time is not provided by the source task item.</param>
            <param name="maxFinishMemberPath">Path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task maximum finish date and time, or null to indicate that the maximum finish date and time is not provided by the source task item.</param>
            <param name="completingParentManagerInitialization">A method to be called when the initialization of the parent <see cref="T:DlhSoft.Windows.Data.EntityManager">EntityManager</see> is completed.</param>
            <param name="insertedIntoParentCollectionInitialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.Task">Task</see> is inserted into the parent collection.</param>
            <param name="removingFromParentCollectionInitialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.Task">Task</see> is removed from the parent collection.</param>
            <param name="disposingInitialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.Task">Task</see> is disposed.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.#ctor(System.Object,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.Task">Task</see> class.
            </summary>
            <param name="item">Source task item to be wrapped by the <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.</param>
            <param name="indentationMemberPath">Path to an <see cref="T:System.Int32">Int32</see> value on the source task item to serve as the indentation level in the hierarchical collection, or null to indicate that the indentation level is not provided by the source task item.</param>
            <param name="isExpandedMemberPath">Path to a <see cref="T:System.Boolean">Boolean</see> value on the source task item to serve as the expansion indicator in the hierarchical collection, or null to indicate that the expansion indicator is not provided by the source task item.</param>
            <param name="contentMemberPath">Path to an <see cref="T:System.Object">Object</see> value on the source task item to serve as the task content, or null to indicate that the content is not provided by the source task item.</param>
            <param name="scheduleMemberPath">Path to a <see cref="P:DlhSoft.Windows.Data.Task.Schedule">Schedule</see> value on the source task item to serve as the task schedule, or null to indicate that the schedule is not provided by the source task item.</param>
            <param name="startMemberPath">Path to a <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task start date and time, or null to indicate that the start date and time is not provided by the source task item.</param>
            <param name="effortMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source task item to serve as the task effort, or null to indicate that the effort is not provided by the wrapped object.</param>
            <param name="completedEffortMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source task item to serve as the task completed effort, or null to indicate that the completed effort is not provided by the wrapped object.</param>
            <param name="assignmentsMemberPath">Path to an <see cref="T:System.Collections.IEnumerable">IEnumerable</see> value on the source task item to serve as the task assignment item collection, or null to indicate that the assignment item collection is not provided by the source task item.</param>
            <param name="assignmentResourceItemMemberPath">Path to an <see cref="T:System.Object">Object</see> value on a source task assignment item to serve as the assigned resource item, or null to indicate that the assigned resource item is not provided by the source task assignment item.</param>
            <param name="assignmentAllocationUnitsMemberPath">Path to a <see cref="T:System.Double">Double</see> value on a source task assignment item to serve as the assigned allocation units value, or null to indicate that the allocation units value is not provided by the source task assignment item.</param>
            <param name="predecessorsMemberPath">Path to an <see cref="T:System.Collections.IEnumerable">IEnumerable</see> value on the source task item to serve as the task predecessor item collection, or null to indicate that the predecessor item collection is not provided by the source task item.</param>
            <param name="predecessorTaskItemMemberPath">Path to an <see cref="T:System.Object">Object</see> value on a source task predecessor item to serve as the predecessor task item, or null to indicate that the task item is not provided by the source task predecessor item.</param>
            <param name="predecessorDependencyTypeMemberPath">Path to a <see cref="T:DlhSoft.Windows.Data.DependencyType">DependencyType</see> value on a source task predecessor item to serve as the predecessor dependency type, or null to indicate that the dependency type is not provided by the source task predecessor item.</param>
            <param name="predecessorLagMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on a source task predecessor item to serve as the predecessor lag, or null to indicate that the lag is not provided by the source task predecessor item.</param>
            <param name="durationMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source task item to serve as the task duration, or null to indicate that the duration is not provided by the source task item.</param>
            <param name="finishMemberPath">Path to a <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task finish date and time, or null to indicate that the finish date and time is not provided by the source task item.</param>
            <param name="isMilestoneMemberPath">Path to a <see cref="T:System.Boolean">Boolean</see> value on the source task item to serve as the task milestone indicator, or null to indicate that the milestone indicator is not provided by the source task item.</param>
            <param name="completionMemberPath">Path to a <see cref="T:System.Double">Double</see> value on the source task item to serve as the task completion rate, or null to indicate that the completion rate is not provided by the source task item.</param>
            <param name="isCompletedMemberPath">Path to a <see cref="T:System.Boolean">Boolean</see> value on the source task item to serve as the task completed indicator, or null to indicate that the completed indicator is not provided by the source task item.</param>
            <param name="assignmentsStringMemberPath">Path to a <see cref="T:System.String">String</see> value on the source task item to serve as a string representation of the task assignment item collection, or null to indicate that the string representation of the assignment item collection is not provided by the source task item.</param>
            <param name="indexStringMemberPath">Path to a <see cref="T:System.String">String</see> value on the source task item to serve as a string representation of the index of the task item, or null to indicate that the string representation of the index is not provided by the source task item.</param>
            <param name="predecessorsStringMemberPath">Path to a <see cref="T:System.String">String</see> value on the source task item to serve as a string representation of the task predecessor item collection, or null to indicate that the string representation of the predecessor item collection is not provided by the source task item.</param>
            <param name="costMemberPath">Path to a <see cref="T:System.Double">Double</see> value on the source task item to serve as the task cost, or null to indicate that the cost is not provided by the source task item.</param>
            <param name="minStartMemberPath">Path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task minimum start date and time, or null to indicate that the minimum start date and time is not provided by the source task item.</param>
            <param name="maxStartMemberPath">Path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task maximum start date and time, or null to indicate that the maximum start date and time is not provided by the source task item.</param>
            <param name="minFinishMemberPath">Path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task minimum finish date and time, or null to indicate that the minimum finish date and time is not provided by the source task item.</param>
            <param name="maxFinishMemberPath">Path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task maximum finish date and time, or null to indicate that the maximum finish date and time is not provided by the source task item.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.#ctor(System.Object,DlhSoft.Windows.Data.Entity.Initialization)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.Task">Task</see> class.
            </summary>
            <param name="item">Task item to be wrapped by the <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.</param>
            <param name="initialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.Task">Task</see> is inserted into the parent collection.</param>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.ContentProperty">
            <summary>
            Identifies the Content dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnContentChanged(System.Object,System.Object)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.Content">Content</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.ScheduleProperty">
            <summary>
            Identifies the Schedule dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnScheduleChanged(DlhSoft.Windows.Data.Schedule,DlhSoft.Windows.Data.Schedule)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.Schedule">Schedule</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.StartProperty">
            <summary>
            Identifies the Start dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnStartChanged(System.DateTime,System.DateTime)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.Start">Start</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.MinStartProperty">
            <summary>
            Identifies the MinStart dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnMinStartChanged(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.MinStart">MinStart</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.MaxStartProperty">
            <summary>
            Identifies the MaxStart dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnMaxStartChanged(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.MaxStart">MaxStart</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.EffortProperty">
            <summary>
            Identifies the Effort dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnEffortChanged(System.TimeSpan,System.TimeSpan)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.Effort">Effort</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.CompletedEffortProperty">
            <summary>
            Identifies the CompletedEffort dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnCompletedEffortChanged(System.TimeSpan,System.TimeSpan)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.CompletedEffort">CompletedEffort</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.AssignmentsProperty">
            <summary>
            Identifies the Assignments dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnAssignmentsChanged(DlhSoft.Windows.Data.ReadOnlyAssignmentCollection,DlhSoft.Windows.Data.ReadOnlyAssignmentCollection)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.Assignments">Assignments</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.PredecessorsProperty">
            <summary>
            Identifies the Predecessors dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnPredecessorsChanged(DlhSoft.Windows.Data.ReadOnlyPredecessorCollection,DlhSoft.Windows.Data.ReadOnlyPredecessorCollection)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.Predecessors">Predecessors</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.SuccessorsProperty">
            <summary>
            Identifies the Successors dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnSuccessorsChanged(System.Collections.ObjectModel.ReadOnlyObservableCollection{DlhSoft.Windows.Data.Predecessor},System.Collections.ObjectModel.ReadOnlyObservableCollection{DlhSoft.Windows.Data.Predecessor})">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.Successors">Successors</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.WorkTimeIntervalsProperty">
            <summary>
            Identifies the WorkTimeIntervals dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnWorkTimeIntervalsChanged(DlhSoft.Windows.Data.TimeIntervalCollection,DlhSoft.Windows.Data.TimeIntervalCollection)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.WorkTimeIntervals">WorkTimeIntervals</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.CompletedWorkTimeIntervalsProperty">
            <summary>
            Identifies the CompletedWorkTimeIntervals dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnCompletedWorkTimeIntervalsChanged(DlhSoft.Windows.Data.TimeIntervalCollection,DlhSoft.Windows.Data.TimeIntervalCollection)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.CompletedWorkTimeIntervals">CompletedWorkTimeIntervals</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.DurationProperty">
            <summary>
            Identifies the Duration dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnDurationChanged(System.TimeSpan,System.TimeSpan)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.Duration">Duration</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.FinishProperty">
            <summary>
            Identifies the Finish dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnFinishChanged(System.DateTime,System.DateTime)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.Finish">Finish</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.MinFinishProperty">
            <summary>
            Identifies the MinFinish dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnMinFinishChanged(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.MinFinish">MinFinish</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.MaxFinishProperty">
            <summary>
            Identifies the MaxFinish dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnMaxFinishChanged(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.MaxFinish">MaxFinish</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.CompletedDurationProperty">
            <summary>
            Identifies the CompletedDuration dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnCompletedDurationChanged(System.TimeSpan,System.TimeSpan)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.CompletedDuration">CompletedDuration</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.CompletedFinishProperty">
            <summary>
            Identifies the CompletedFinish dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnCompletedFinishChanged(System.DateTime,System.DateTime)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.CompletedFinish">CompletedFinish</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.IsMilestoneProperty">
            <summary>
            Identifies the IsMilestone dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnIsMilestoneChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.IsMilestone">IsMilestone</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.CompletionProperty">
            <summary>
            Identifies the Completion dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnCompletionChanged(System.Double,System.Double)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.Completion">Completion</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.IsCompletedProperty">
            <summary>
            Identifies the IsCompleted dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnIsCompletedChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.IsCompleted">IsCompleted</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.IsStartedProperty">
            <summary>
            Identifies the IsStarted dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnIsStartedChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.IsStarted">IsStarted</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.AssignmentsStringProperty">
            <summary>
            Identifies the AssignmentsString dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnAssignmentsStringChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.AssignmentsString">AssignmentsString</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.IndexStringProperty">
            <summary>
            Identifies the IndexString dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnIndexStringChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.IndexString">IndexString</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.PredecessorsStringProperty">
            <summary>
            Identifies the PredecessorsString dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnPredecessorsStringChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.PredecessorsString">PredecessorsString</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.ActualScheduleProperty">
            <summary>
            Identifies the ActualSchedule dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.PreferredStartProperty">
            <summary>
            Identifies the PreferredStart dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.PreferredFinishProperty">
            <summary>
            Identifies the PreferredFinish dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.CostProperty">
            <summary>
            Identifies the Cost dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.OnCostChanged(System.Double,System.Double)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Task.Cost">Cost</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Task.PreferredCostProperty">
            <summary>
            Identifies the PreferredCost dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.IsOnBranchOf(DlhSoft.Windows.Data.Task)">
            <summary>
            Gets a value indicating whether the task is on the same branch with a specified task.
            </summary>
            <param name="masterTask">The task to determine whether this task is on the same branch with.</param>
            <returns>A value indicating whether the task is on the same branch with the specified task.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.IsAncestorOf(DlhSoft.Windows.Data.Task)">
            <summary>
            Gets a value indicating whether the task is an ancestor of a specified task.
            </summary>
            <param name="masterTask">The task to determine whether this task is an ancestor of.</param>
            <returns>A value indicating whether the task is an ancestor of the specified task.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.IsDescendantOf(DlhSoft.Windows.Data.Task)">
            <summary>
            Gets a value indicating whether the task is a descendant of a specified task.
            </summary>
            <param name="masterTask">The task to determine whether this task is a descendant of.</param>
            <returns>A value indicating whether the task is a descendant of the specified task.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.IsDirectlyDependentOf(DlhSoft.Windows.Data.Task)">
            <summary>
            Gets a value indicating whether the task is directly dependent of or on the same branch with a specified task.
            </summary>
            <param name="masterPredecessorTask">The task to determine whether this task is directly dependent of.</param>
            <returns>A value indicating whether the task is directly dependent of or on the same branch with the specified task.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.IsDependentOf(DlhSoft.Windows.Data.Task)">
            <summary>
            Gets a value indicating whether the task is dependent of or on the same branch with a specified task.
            </summary>
            <param name="masterPredecessorTask">The task to determine whether this task is dependent of.</param>
            <returns>A value indicating whether the task is dependent of or on the same branch with the specified task, either directly or through other dependencies.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.GetPredecessors">
            <summary>
            Enumerates the predecessors of this task and of all its ancestor tasks.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.IsOnSchedule">
            <summary>
            Gets a value indicating whether the task is currently on schedule, so that its completed effort value reaches the current date and time.
            </summary>
            <returns>A value indicating whether the task is currently on schedule.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.IsOnSchedule(System.DateTime)">
            <summary>
            Gets a value indicating whether the task would be on schedule at the specified date and time, so that its completed effort value reaches the specified date and time.
            </summary>
            <returns>A value indicating whether the task would be on schedule at the specified date and time.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.IsCritical">
            <summary>
            Gets a value indicating whether the task is critical or not. A task is critical if it would generate delays in the project in case that it wouldn't be finished on time.
            </summary>
            <returns>A value indicating whether the task is critical or not.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.IsCritical(System.TimeSpan)">
            <summary>
            Gets a value indicating whether the task is critical or not. A task is critical if it would generate delays in the project in case that it wouldn't be finished on time.
            </summary>
            <param name="criticalDelay">The minimum time interval that needs to exist between dependent tasks to avoid considering the critical state.</param>
            <returns>A value indicating whether the task is critical or not.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.IsCritical(System.DateTime)">
            <summary>
            Gets a value indicating whether the task is critical or not. A task is critical if it would generate delays in the project in case that it wouldn't be finished on time.
            </summary>
            <param name="projectFinishConstraint">The project finish date and time constraint.</param>
            <returns>A value indicating whether the task is critical or not.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.IsCritical(System.TimeSpan,System.DateTime)">
            <summary>
            Gets a value indicating whether the task is critical or not. A task is critical if it would generate delays in the project in case that it wouldn't be finished on time.
            </summary>
            <param name="criticalDelay">The minimum time interval that needs to exist between dependent tasks to avoid considering the critical state.</param>
            <param name="projectFinishConstraint">The project finish date and time constraint.</param>
            <returns>A value indicating whether the task is critical or not.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.IsCritical(System.TimeSpan,System.DateTime,System.Collections.Generic.IDictionary{DlhSoft.Windows.Data.Task,System.DateTime})">
            <summary>
            Gets a value indicating whether the task is critical or not. A task is critical if it would generate delays in the project in case that it wouldn't be finished on time.
            </summary>
            <param name="criticalDelay">The minimum time interval that needs to exist between dependent tasks to avoid considering the critical state.</param>
            <param name="taskFinishConstraints">An optional set of task finish date and time constraint.</param>
            <param name="projectFinishConstraint">The project finish date and time constraint.</param>
            <returns>A value indicating whether the task is critical or not.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.GetNextWorkTimeIntervals(System.DateTime,System.TimeSpan)">
            <summary>
            Gets the work time intervals after a specified date and time and until summing up to a specified required work duration considering the suite of assignment resource schedules to be resolved.
            </summary>
            <param name="start">The date and time to start searching at.</param>
            <param name="requiredWorkDuration">The required work duration sum to get.</param>
            <returns>The work time intervals after the specified date and time and until summing up to the specified required work duration considering the suite of assignment resource schedules to be resolved.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified required work duration is not positive.</exception>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.GetNextWorkTimeIntervals(System.DateTime,System.TimeSpan,System.TimeSpan)">
            <summary>
            Gets the work time intervals after a specified date and time and until summing up to a specified required work duration considering the suite of assigned resource schedules to be resolved but without exceeding a specified maximum search duration.
            </summary>
            <param name="start">The date and time to start searching at.</param>
            <param name="requiredWorkDuration">The required work duration sum to get.</param>
            <param name="maxSearchDuration">The maximum duration to search.</param>
            <returns>The work time intervals after the specified date and time and until summing up to the specified required work duration considering the suite of assigned resource schedules to be resolved but without exceeding the specified maximum search duration.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified required work duration is not positive or the specified maximum search duration is not positive.</exception>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.GetPreviousWorkTimeIntervals(System.DateTime,System.TimeSpan)">
            <summary>
            Gets the work time intervals before a specified date and time and until summing up to a specified required work duration considering the suite of assignment resource schedules to be resolved.
            </summary>
            <param name="start">The date and time to start searching at.</param>
            <param name="requiredWorkDuration">The required work duration sum to get.</param>
            <returns>The work time intervals before the specified date and time and until summing up to the specified required work duration considering the suite of assignment resource schedules to be resolved.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified required work duration is not positive.</exception>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.GetPreviousWorkTimeIntervals(System.DateTime,System.TimeSpan,System.TimeSpan)">
            <summary>
            Gets the work time intervals before a specified date and time and until summing up to a specified required work duration considering the suite of assignment resource schedules to be resolved but without exceeding a specified maximum search duration.
            </summary>
            <param name="start">The date and time to start searching at.</param>
            <param name="requiredWorkDuration">The required work duration sum to get.</param>
            <param name="maxSearchDuration">The maximum duration to search.</param>
            <returns>The work time intervals before the specified date and time and until summing up to the specified required work duration considering the suite of assignment resource schedules to be resolved but without exceeding the specified maximum search duration.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">The specified required work duration is not positive or the specified maximum search duration is not positive.</exception>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.GetNextWorkTime(System.DateTime)">
            <summary>
            Gets the next valid working time for a specified date and time based on the current schedule object considering the suite of assignment resource schedules to be resolved.
            </summary>
            <param name="dateTime">Date and time to get the next valid working time for.</param>
            <returns>The next valid working time based for the specified date and time based on the current schedule object considering the suite of assignment resource schedules to be resolved.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.GetPreviousWorkTime(System.DateTime)">
            <summary>
            Gets the previous valid working time for a specified date and time based on the current schedule object considering the suite of assignment resource schedules to be resolved.
            </summary>
            <param name="dateTime">Date and time to get the previous valid working time for.</param>
            <returns>The previous valid working time based for the specified date and time based on the current schedule object considering the suite of assignment resource schedules to be resolved.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Task.ToString">
            <summary>
            Provides a string representation of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see> object.
            </summary>
            <returns>The string representation of the object.</returns>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.ParentCollection">
            <summary>
            Gets the parent collection that owns this <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.HasParent">
            <summary>
            Gets a value indicating whether this <see cref="T:DlhSoft.Windows.Data.Task">Task</see> has a parent task in the collection based on indentation.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.Parent">
            <summary>
            Gets the parent task of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see> in the collection based on indentation.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.HasChildren">
            <summary>
            Gets a value indicating whether this <see cref="T:DlhSoft.Windows.Data.Task">Task</see> has any child tasks in the collection based on indentation.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.Children">
            <summary>
            Enumerates the child tasks of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see> in the collection based on indentation.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.ParentManager">
            <summary>
            Gets the parent manager that owns this <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.Content">
            <summary>
            Gets or sets the content of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.Schedule">
            <summary>
            Gets or sets the schedule of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.Start">
            <summary>
            Gets or sets the start date and time of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.MinStart">
            <summary>
            Gets or sets the minimum start date and time of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.MaxStart">
            <summary>
            Gets or sets the maximum start date and time of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.Effort">
            <summary>
            Gets or sets the effort of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.CompletedEffort">
            <summary>
            Gets or sets the completed effort of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.Assignments">
            <summary>
            Gets the assignment collection of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.Predecessors">
            <summary>
            Gets the predecessor collection of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.Successors">
            <summary>
            Gets the successor collection of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.WorkTimeIntervals">
            <summary>
            Gets a collection of time intervals that this <see cref="T:DlhSoft.Windows.Data.Task">Task</see> uses as work effort.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.CompletedWorkTimeIntervals">
            <summary>
            Gets a collection of time intervals that this <see cref="T:DlhSoft.Windows.Data.Task">Task</see> uses as work completed effort.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.Duration">
            <summary>
            Gets or sets the duration of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.Finish">
            <summary>
            Gets or sets the finish date and time of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.MinFinish">
            <summary>
            Gets or sets the minimum finish date and time of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.MaxFinish">
            <summary>
            Gets or sets the maximum finish date and time of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.CompletedDuration">
            <summary>
            Gets or sets the completed duration of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.CompletedFinish">
            <summary>
            Gets or sets the completed finish date and time of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.IsMilestone">
            <summary>
            Gets or sets a value indicating whether or not this <see cref="T:DlhSoft.Windows.Data.Task">Task</see> is a milestone.
            A milestone task has its <see cref="P:DlhSoft.Windows.Data.Task.Effort">Effort</see> value set to zero.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.Completion">
            <summary>
            Gets or sets the completion rate of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.IsCompleted">
            <summary>
            Gets or sets a value indicating whether or not this <see cref="T:DlhSoft.Windows.Data.Task">Task</see> is completed.
            A completed task has its <see cref="P:DlhSoft.Windows.Data.Task.CompletedEffort">CompletedEffort</see> value equal to <see cref="P:DlhSoft.Windows.Data.Task.Effort">Effort</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.IsStarted">
            <summary>
            Gets a value indicating whether or not this <see cref="T:DlhSoft.Windows.Data.Task">Task</see> is started.
            A start task has its <see cref="P:DlhSoft.Windows.Data.Task.CompletedEffort">CompletedEffort</see> value greater than zero.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.AssignmentsString">
            <summary>
            Gets or sets a string representation of the predecessor collection of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            The assignments string is of this form: John, Diane [80%].
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.IndexString">
            <summary>
            Gets a string representation of the index of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            The value of this property is automatically computed based on the position of the task in the task collection.
            The index string is of this form: 1, 2.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.PredecessorsString">
            <summary>
            Gets or sets a string representation of the predecessor collection of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            The predecessors string is of this form: 1, 2SS, 3FF+2.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.ActualSchedule">
            <summary>
            Gets the actual schedule used by this <see cref="T:DlhSoft.Windows.Data.Task">Task</see> representing either the task schedule if it was set, or the parent task or task manager schedule otherwise.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.PreferredStart">
            <summary>
            Gets the preferred start date and time of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see> representing the last start date and time value set by an external call and not altered by applying any constraints such as those based on the task predecessors).
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.PreferredFinish">
            <summary>
            Gets the preferred finish date and time of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see> representing the last finish date and time value set by an external call and not altered by applying any constraints such as those based on the task predecessors.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.Cost">
            <summary>
            Gets or sets the cost of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            The minimum value of this property is the total task assignment cost, computed using the assigned resource per usage and per hour costs and the assigned allocation units.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Task.PreferredCost">
            <summary>
            Gets the preferred cost of this <see cref="T:DlhSoft.Windows.Data.Task">Task</see> representing the last cost value set by an external call and not altered by applying any constraints such as those based on the task assignments).
            This is a dependency property.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.TaskManager">
            <summary>
            Object collection management engine that uses a task collection to wrap the objects internally.
            Provides automatic management of indentation (task hierarchy), expansion (task visibility), start date and times, effort, etc. for the collection items.
            Use <see cref="P:DlhSoft.Windows.Data.EntityManager.Items">Items</see> property to set your own task data item collection to manage and use <see cref="P:DlhSoft.Windows.Data.TaskManager.Tasks">Tasks</see> property to access the managed task collection mapping your items.
            It is recommended to set at least these data member properties: <see cref="P:DlhSoft.Windows.Data.NodeManager.IndentationMemberPath">IndentationMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.ContentMemberPath">ContentMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.StartMemberPath">StartMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.EffortMemberPath">EffortMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.CompletedEffortMemberPath">CompletedEffortMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.AssignmentsMemberPath">AssignmentsMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.AssignmentResourceItemMemberPath">AssignmentResourceItemMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.AssignmentAllocationUnitsMemberPath">AssignmentAllocationUnitsMemberPath</see>.
            These data member properties can also be set: <see cref="P:DlhSoft.Windows.Data.NodeManager.IsExpandedMemberPath">IsExpandedMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.ScheduleMemberPath">ScheduleMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.PredecessorsMemberPath">PredecessorsMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.PredecessorTaskItemMemberPath">PredecessorTaskItemMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.PredecessorDependencyTypeMemberPath">PredecessorDependencyTypeMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.PredecessorLagMemberPath">PredecessorLagMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.DurationMemberPath">DurationMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.FinishMemberPath">FinishMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.IsMilestoneMemberPath">IsMilestoneMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.CompletionMemberPath">CompletionMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.IsCompletedMemberPath">IsCompletedMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.AssignmentsStringMemberPath">AssignmentsStringMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.IndexStringMemberPath">IndexStringMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.PredecessorsStringMemberPath">PredecessorsStringMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.CostMemberPath">CostMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.MinStartMemberPath">MinStartMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.MaxStartMemberPath">MaxStartMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.MinFinishMemberPath">MaxFinishMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.TaskManager.MinFinishMemberPath">MaxFinishMemberPath</see>.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>, <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see>, and <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see> objects.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.#ctor(DlhSoft.Windows.Data.DataManagementMode)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>, <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see>, and <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see> objects.
            </summary>
            <param name="dataManagementMode">Data management mode to use.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.#ctor(DlhSoft.Windows.Data.Entity,DlhSoft.Windows.Data.DataManagementMode)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>, <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see>, and <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see> objects.
            </summary>
            <param name="parentEntity">Parent entity that owns the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> or null if the manager has no parent entity.</param>
            <param name="dataManagementMode">Data management mode to use.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.#ctor(DlhSoft.Windows.Data.Entity,System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>, <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see>, and <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see> objects.
            </summary>
            <param name="parentEntity">Parent entity that owns the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> or null if the manager has no parent entity.</param>
            <param name="items">Collection of task items to be managed.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.#ctor(System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>, <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see>, and <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see> objects.
            </summary>
            <param name="items">Collection of task items to be managed.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.#ctor(DlhSoft.Windows.Data.Entity,System.Collections.IEnumerable,DlhSoft.Windows.Data.Schedule)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>, <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see>, and <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see> objects.
            </summary>
            <param name="parentEntity">Parent entity that owns the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> or null if the manager has no parent entity.</param>
            <param name="items">Collection of task items to be managed.</param>
            <param name="schedule">The schedule to be used as default schedule for the tasks.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.#ctor(DlhSoft.Windows.Data.Schedule,DlhSoft.Windows.Data.DataManagementMode)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>, <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see>, and <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see> objects.
            </summary>
            <param name="schedule">The schedule to be used as default schedule for the tasks.</param>
            <param name="dataManagementMode">Data management mode to use.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.#ctor(System.Collections.IEnumerable,DlhSoft.Windows.Data.Schedule)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>, <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see>, and <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see> objects.
            </summary>
            <param name="items">Collection of task items to be managed.</param>
            <param name="schedule">The schedule to be used as default schedule for the tasks.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.#ctor(DlhSoft.Windows.Data.Entity,DlhSoft.Windows.Data.ResourceManager,DlhSoft.Windows.Data.DataManagementMode)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>, <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see>, and <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see> objects.
            </summary>
            <param name="parentEntity">Parent entity that owns the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> or null if the manager has no parent entity.</param>
            <param name="assignableResourceManager">The <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> object to be used internally for managing assignable resources used by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.</param>
            <param name="dataManagementMode">Data management mode to use.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.#ctor(DlhSoft.Windows.Data.Entity,System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.SimpleTaskItem},DlhSoft.Windows.Data.ResourceManager)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> class using simple data management mode.
            </summary>
            <param name="parentEntity">Parent entity that owns the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> or null if the manager has no parent entity.</param>
            <param name="simpleTaskItems">Item definitions representing tasks to be initially added to the collection.</param>
            <param name="assignableResourceManager">The <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> object to be used internally for managing assignable resources used by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.#ctor(DlhSoft.Windows.Data.ResourceManager,DlhSoft.Windows.Data.DataManagementMode)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>, <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see>, and <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see> objects.
            </summary>
            <param name="assignableResourceManager">The <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> object to be used internally for managing assignable resources used by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.</param>
            <param name="dataManagementMode">Data management mode to use.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.#ctor(System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.SimpleTaskItem},DlhSoft.Windows.Data.ResourceManager)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> class using simple data management mode.
            </summary>
            <param name="simpleTaskItems">Item definitions representing tasks to be initially added to the collection.</param>
            <param name="assignableResourceManager">The <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> object to be used internally for managing assignable resources used by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.#ctor(DlhSoft.Windows.Data.Entity,System.Collections.IEnumerable,DlhSoft.Windows.Data.ResourceManager,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>, <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see>, and <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see> objects.
            </summary>
            <param name="parentEntity">Parent entity that owns the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> or null if the manager has no parent entity.</param>
            <param name="items">Collection of task items to be managed.</param>
            <param name="assignableResourceManager">The <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> object to be used internally for managing assignable resources used by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.</param>
            <param name="areEffortValueConstraintsEnabled">Indicates whether the effort value constaints are enabled.</param>
            <param name="areDependencyConstraintsEnabled">Indicates whether the dependency constaints are enabled.</param>
            <param name="areSummaryValueConstraintsEnabled">Indicates whether the summary value constaints are enabled.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.#ctor(System.Collections.IEnumerable,DlhSoft.Windows.Data.ResourceManager,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>, <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see>, and <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see> objects.
            </summary>
            <param name="items">Collection of task items to be managed.</param>
            <param name="assignableResourceManager">The <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> object to be used internally for managing assignable resources used by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.</param>
            <param name="areEffortValueConstraintsEnabled">Indicates whether the effort value constaints are enabled.</param>
            <param name="areDependencyConstraintsEnabled">Indicates whether the dependency constaints are enabled.</param>
            <param name="areSummaryValueConstraintsEnabled">Indicates whether the summary value constaints are enabled.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.#ctor(DlhSoft.Windows.Data.Entity,DlhSoft.Windows.Data.ResourceManager,DlhSoft.Windows.Data.Schedule,DlhSoft.Windows.Data.DataManagementMode)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>, <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see>, and <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see> objects.
            </summary>
            <param name="parentEntity">Parent entity that owns the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> or null if the manager has no parent entity.</param>
            <param name="assignableResourceManager">The <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> object to be used internally for managing assignable resources used by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.</param>
            <param name="schedule">The schedule to be used as default schedule for the tasks.</param>
            <param name="dataManagementMode">Data management mode to use.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.#ctor(DlhSoft.Windows.Data.Entity,System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.SimpleTaskItem},DlhSoft.Windows.Data.ResourceManager,DlhSoft.Windows.Data.Schedule)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> class using simple data management mode.
            </summary>
            <param name="parentEntity">Parent entity that owns the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> or null if the manager has no parent entity.</param>
            <param name="simpleTaskItems">Item definitions representing tasks to be initially added to the collection.</param>
            <param name="assignableResourceManager">The <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> object to be used internally for managing assignable resources used by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.</param>
            <param name="schedule">The schedule to be used as default schedule for the tasks.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.#ctor(DlhSoft.Windows.Data.ResourceManager,DlhSoft.Windows.Data.Schedule,DlhSoft.Windows.Data.DataManagementMode)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>, <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see>, and <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see> objects.
            </summary>
            <param name="assignableResourceManager">The <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> object to be used internally for managing assignable resources used by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.</param>
            <param name="schedule">The schedule to be used as default schedule for the tasks.</param>
            <param name="dataManagementMode">Data management mode to use.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.#ctor(System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.SimpleTaskItem},DlhSoft.Windows.Data.ResourceManager,DlhSoft.Windows.Data.Schedule)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> class using simple data management mode.
            </summary>
            <param name="assignableResourceManager">The <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> object to be used internally for managing assignable resources used by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.</param>
            <param name="schedule">The schedule to be used as default schedule for the tasks.</param>
            <param name="simpleTaskItems">Item definitions representing tasks to be initially added to the collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.#ctor(DlhSoft.Windows.Data.Entity,System.Collections.IEnumerable,DlhSoft.Windows.Data.ResourceManager,DlhSoft.Windows.Data.Schedule,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>, <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see>, and <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see> objects.
            </summary>
            <param name="parentEntity">Parent entity that owns the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> or null if the manager has no parent entity.</param>
            <param name="items">Collection of task items to be managed.</param>
            <param name="assignableResourceManager">The <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> object to be used internally for managing assignable resources used by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.</param>
            <param name="schedule">The schedule to be used as default schedule for the tasks.</param>
            <param name="areEffortValueConstraintsEnabled">Indicates whether the effort value constaints are enabled.</param>
            <param name="areDependencyConstraintsEnabled">Indicates whether the dependency constaints are enabled.</param>
            <param name="areSummaryValueConstraintsEnabled">Indicates whether the summary value constaints are enabled.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.#ctor(System.Collections.IEnumerable,DlhSoft.Windows.Data.ResourceManager,DlhSoft.Windows.Data.Schedule,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see>, <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see>, and <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see> objects.
            </summary>
            <param name="items">Collection of task items to be managed.</param>
            <param name="assignableResourceManager">The <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> object to be used internally for managing assignable resources used by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.</param>
            <param name="schedule">The schedule to be used as default schedule for the tasks.</param>
            <param name="areEffortValueConstraintsEnabled">Indicates whether the effort value constaints are enabled.</param>
            <param name="areDependencyConstraintsEnabled">Indicates whether the dependency constaints are enabled.</param>
            <param name="areSummaryValueConstraintsEnabled">Indicates whether the summary value constaints are enabled.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.#ctor(DlhSoft.Windows.Data.Entity,System.Collections.IEnumerable,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,DlhSoft.Windows.Data.ResourceManager,DlhSoft.Windows.Data.Schedule,DlhSoft.Windows.Data.EntityManager.Initialization,DlhSoft.Windows.Data.EntityManager.Initialization)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> class.
            </summary>
            <param name="parentEntity">Parent entity that owns the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> or null if the manager has no parent entity.</param>
            <param name="items">Collection of task items to be managed.</param>
            <param name="indentationMemberPath">Path to an <see cref="T:System.Int32">Int32</see> value on the source task item to serve as the indentation level in the hierarchical collection, or null to indicate that the indentation level is not provided by the source task item.</param>
            <param name="isExpandedMemberPath">Path to a <see cref="T:System.Boolean">Boolean</see> value on the source task item to serve as the expansion indicator in the hierarchical collection, or null to indicate that the expansion indicator is not provided by the source task item.</param>
            <param name="contentMemberPath">Path to an <see cref="T:System.Object">Object</see> value on the source task item to serve as the task content, or null to indicate that the content is not provided by the source task item.</param>
            <param name="scheduleMemberPath">Path to a <see cref="P:DlhSoft.Windows.Data.TaskManager.Schedule">Schedule</see> value on the source task item to serve as the task schedule, or null to indicate that the schedule is not provided by the source task item.</param>
            <param name="startMemberPath">Path to a <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task start date and time, or null to indicate that the start date and time is not provided by the source task item.</param>
            <param name="effortMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source task item to serve as the task effort, or null to indicate that the effort is not provided by the wrapped object.</param>
            <param name="completedEffortMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source task item to serve as the task completed effort, or null to indicate that the completed effort is not provided by the wrapped object.</param>
            <param name="assignmentsMemberPath">Path to an <see cref="T:System.Collections.IEnumerable">IEnumerable</see> value on the source task item to serve as the task assignment item collection, or null to indicate that the assignment item collection is not provided by the source task item.</param>
            <param name="assignmentResourceItemMemberPath">Path to an <see cref="T:System.Object">Object</see> value on a source task assignment item to serve as the assigned resource item, or null to indicate that the assigned resource item is not provided by the source task assignment item.</param>
            <param name="assignmentAllocationUnitsMemberPath">Path to a <see cref="T:System.Double">Double</see> value on a source task assignment item to serve as the assigned allocation units value, or null to indicate that the allocation units value is not provided by the source task assignment item.</param>
            <param name="predecessorsMemberPath">Path to an <see cref="T:System.Collections.IEnumerable">IEnumerable</see> value on the source task item to serve as the task predecessor item collection, or null to indicate that the predecessor item collection is not provided by the source task item.</param>
            <param name="predecessorTaskItemMemberPath">Path to an <see cref="T:System.Object">Object</see> value on a source task predecessor item to serve as the predecessor task item, or null to indicate that the task item is not provided by the source task predecessor item.</param>
            <param name="predecessorDependencyTypeMemberPath">Path to a <see cref="T:DlhSoft.Windows.Data.DependencyType">DependencyType</see> value on a source task predecessor item to serve as the predecessor dependency type, or null to indicate that the dependency type is not provided by the source task predecessor item.</param>
            <param name="predecessorLagMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on a source task predecessor item to serve as the predecessor lag, or null to indicate that the lag is not provided by the source task predecessor item.</param>
            <param name="durationMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source task item to serve as the task duration, or null to indicate that the duration is not provided by the source task item.</param>
            <param name="finishMemberPath">Path to a <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task finish date and time, or null to indicate that the finish date and time is not provided by the source task item.</param>
            <param name="isMilestoneMemberPath">Path to a <see cref="T:System.Boolean">Boolean</see> value on the source task item to serve as the task milestone indicator, or null to indicate that the milestone indicator is not provided by the source task item.</param>
            <param name="completionMemberPath">Path to a <see cref="T:System.Double">Double</see> value on the source task item to serve as the task completion rate, or null to indicate that the completion rate is not provided by the source task item.</param>
            <param name="isCompletedMemberPath">Path to a <see cref="T:System.Boolean">Boolean</see> value on the source task item to serve as the task completed indicator, or null to indicate that the completed indicator is not provided by the source task item.</param>
            <param name="assignmentsStringMemberPath">Path to a <see cref="T:System.String">String</see> value on the source task item to serve as a string representation of the task assignment item collection, or null to indicate that the string representation of the assignment item collection is not provided by the source task item.</param>
            <param name="indexStringMemberPath">Path to a <see cref="T:System.String">String</see> value on the source task item to serve as a string representation of the index of the task item, or null to indicate that the string representation of the index is not provided by the source task item.</param>
            <param name="predecessorsStringMemberPath">Path to a <see cref="T:System.String">String</see> value on the source task item to serve as a string representation of the task predecessor item collection, or null to indicate that the string representation of the predecessor item collection is not provided by the source task item.</param>
            <param name="costMemberPath">Path to a <see cref="T:System.Double">Double</see> value on the source task item to serve as the task cost, or null to indicate that the cost is not provided by the source task item.</param>
            <param name="minStartMemberPath">Path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task minimum start date and time, or null to indicate that the minimum start date and time is not provided by the source task item.</param>
            <param name="maxStartMemberPath">Path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task maximum start date and time, or null to indicate that the maximum start date and time is not provided by the source task item.</param>
            <param name="minFinishMemberPath">Path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task minimum finish date and time, or null to indicate that the minimum finish date and time is not provided by the source task item.</param>
            <param name="maxFinishMemberPath">Path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task maximum finish date and time, or null to indicate that the maximum finish date and time is not provided by the source task item.</param>
            <param name="assignableResourceManager">The <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> object to be used internally for managing assignable resources used by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.</param>
            <param name="schedule">The schedule to be used as default schedule for the tasks.</param>
            <param name="initialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> initializes.</param>
            <param name="disposingInitialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> is disposed.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.#ctor(DlhSoft.Windows.Data.Entity,System.Collections.IEnumerable,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,DlhSoft.Windows.Data.ResourceManager,DlhSoft.Windows.Data.Schedule,System.Boolean,System.Boolean,System.Boolean,DlhSoft.Windows.Data.EntityManager.Initialization,DlhSoft.Windows.Data.EntityManager.Initialization)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> class.
            </summary>
            <param name="parentEntity">Parent entity that owns the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> or null if the manager has no parent entity.</param>
            <param name="items">Collection of task items to be managed.</param>
            <param name="indentationMemberPath">Path to an <see cref="T:System.Int32">Int32</see> value on the source task item to serve as the indentation level in the hierarchical collection, or null to indicate that the indentation level is not provided by the source task item.</param>
            <param name="isExpandedMemberPath">Path to a <see cref="T:System.Boolean">Boolean</see> value on the source task item to serve as the expansion indicator in the hierarchical collection, or null to indicate that the expansion indicator is not provided by the source task item.</param>
            <param name="contentMemberPath">Path to an <see cref="T:System.Object">Object</see> value on the source task item to serve as the task content, or null to indicate that the content is not provided by the source task item.</param>
            <param name="scheduleMemberPath">Path to a <see cref="P:DlhSoft.Windows.Data.TaskManager.Schedule">Schedule</see> value on the source task item to serve as the task schedule, or null to indicate that the schedule is not provided by the source task item.</param>
            <param name="startMemberPath">Path to a <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task start date and time, or null to indicate that the start date and time is not provided by the source task item.</param>
            <param name="effortMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source task item to serve as the task effort, or null to indicate that the effort is not provided by the wrapped object.</param>
            <param name="completedEffortMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source task item to serve as the task completed effort, or null to indicate that the completed effort is not provided by the wrapped object.</param>
            <param name="assignmentsMemberPath">Path to an <see cref="T:System.Collections.IEnumerable">IEnumerable</see> value on the source task item to serve as the task assignment item collection, or null to indicate that the assignment item collection is not provided by the source task item.</param>
            <param name="assignmentResourceItemMemberPath">Path to an <see cref="T:System.Object">Object</see> value on a source task assignment item to serve as the assigned resource item, or null to indicate that the assigned resource item is not provided by the source task assignment item.</param>
            <param name="assignmentAllocationUnitsMemberPath">Path to a <see cref="T:System.Double">Double</see> value on a source task assignment item to serve as the assigned allocation units value, or null to indicate that the allocation units value is not provided by the source task assignment item.</param>
            <param name="predecessorsMemberPath">Path to an <see cref="T:System.Collections.IEnumerable">IEnumerable</see> value on the source task item to serve as the task predecessor item collection, or null to indicate that the predecessor item collection is not provided by the source task item.</param>
            <param name="predecessorTaskItemMemberPath">Path to an <see cref="T:System.Object">Object</see> value on a source task predecessor item to serve as the predecessor task item, or null to indicate that the task item is not provided by the source task predecessor item.</param>
            <param name="predecessorDependencyTypeMemberPath">Path to a <see cref="T:DlhSoft.Windows.Data.DependencyType">DependencyType</see> value on a source task predecessor item to serve as the predecessor dependency type, or null to indicate that the dependency type is not provided by the source task predecessor item.</param>
            <param name="predecessorLagMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on a source task predecessor item to serve as the predecessor lag, or null to indicate that the lag is not provided by the source task predecessor item.</param>
            <param name="durationMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source task item to serve as the task duration, or null to indicate that the duration is not provided by the source task item.</param>
            <param name="finishMemberPath">Path to a <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task finish date and time, or null to indicate that the finish date and time is not provided by the source task item.</param>
            <param name="isMilestoneMemberPath">Path to a <see cref="T:System.Boolean">Boolean</see> value on the source task item to serve as the task milestone indicator, or null to indicate that the milestone indicator is not provided by the source task item.</param>
            <param name="completionMemberPath">Path to a <see cref="T:System.Double">Double</see> value on the source task item to serve as the task completion rate, or null to indicate that the completion rate is not provided by the source task item.</param>
            <param name="isCompletedMemberPath">Path to a <see cref="T:System.Boolean">Boolean</see> value on the source task item to serve as the task completed indicator, or null to indicate that the completed indicator is not provided by the source task item.</param>
            <param name="assignmentsStringMemberPath">Path to a <see cref="T:System.String">String</see> value on the source task item to serve as a string representation of the task assignment item collection, or null to indicate that the string representation of the assignment item collection is not provided by the source task item.</param>
            <param name="indexStringMemberPath">Path to a <see cref="T:System.String">String</see> value on the source task item to serve as a string representation of the index of the task item, or null to indicate that the string representation of the index is not provided by the source task item.</param>
            <param name="predecessorsStringMemberPath">Path to a <see cref="T:System.String">String</see> value on the source task item to serve as a string representation of the task predecessor item collection, or null to indicate that the string representation of the predecessor item collection is not provided by the source task item.</param>
            <param name="costMemberPath">Path to a <see cref="T:System.Double">Double</see> value on the source task item to serve as the task cost, or null to indicate that the cost is not provided by the source task item.</param>
            <param name="minStartMemberPath">Path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task minimum start date and time, or null to indicate that the minimum start date and time is not provided by the source task item.</param>
            <param name="maxStartMemberPath">Path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task maximum start date and time, or null to indicate that the maximum start date and time is not provided by the source task item.</param>
            <param name="minFinishMemberPath">Path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task minimum finish date and time, or null to indicate that the minimum finish date and time is not provided by the source task item.</param>
            <param name="maxFinishMemberPath">Path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task maximum finish date and time, or null to indicate that the maximum finish date and time is not provided by the source task item.</param>
            <param name="assignableResourceManager">The <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> object to be used internally for managing assignable resources used by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.</param>
            <param name="schedule">The schedule to be used as default schedule for the tasks.</param>
            <param name="areEffortValueConstraintsEnabled">Indicates whether the effort value constaints are enabled.</param>
            <param name="areDependencyConstraintsEnabled">Indicates whether the dependency constaints are enabled.</param>
            <param name="areSummaryValueConstraintsEnabled">Indicates whether the summary value constaints are enabled.</param>
            <param name="initialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> initializes.</param>
            <param name="disposingInitialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> is disposed.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,DlhSoft.Windows.Data.ResourceManager,DlhSoft.Windows.Data.Schedule,DlhSoft.Windows.Data.EntityManager.Initialization,DlhSoft.Windows.Data.EntityManager.Initialization)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> class.
            </summary>
            <param name="items">Collection of task items to be managed.</param>
            <param name="indentationMemberPath">Path to an <see cref="T:System.Int32">Int32</see> value on the source task item to serve as the indentation level in the hierarchical collection, or null to indicate that the indentation level is not provided by the source task item.</param>
            <param name="isExpandedMemberPath">Path to a <see cref="T:System.Boolean">Boolean</see> value on the source task item to serve as the expansion indicator in the hierarchical collection, or null to indicate that the expansion indicator is not provided by the source task item.</param>
            <param name="contentMemberPath">Path to an <see cref="T:System.Object">Object</see> value on the source task item to serve as the task content, or null to indicate that the content is not provided by the source task item.</param>
            <param name="scheduleMemberPath">Path to a <see cref="P:DlhSoft.Windows.Data.TaskManager.Schedule">Schedule</see> value on the source task item to serve as the task schedule, or null to indicate that the schedule is not provided by the source task item.</param>
            <param name="startMemberPath">Path to a <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task start date and time, or null to indicate that the start date and time is not provided by the source task item.</param>
            <param name="effortMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source task item to serve as the task effort, or null to indicate that the effort is not provided by the wrapped object.</param>
            <param name="completedEffortMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source task item to serve as the task completed effort, or null to indicate that the completed effort is not provided by the wrapped object.</param>
            <param name="assignmentsMemberPath">Path to an <see cref="T:System.Collections.IEnumerable">IEnumerable</see> value on the source task item to serve as the task assignment item collection, or null to indicate that the assignment item collection is not provided by the source task item.</param>
            <param name="assignmentResourceItemMemberPath">Path to an <see cref="T:System.Object">Object</see> value on a source task assignment item to serve as the assigned resource item, or null to indicate that the assigned resource item is not provided by the source task assignment item.</param>
            <param name="assignmentAllocationUnitsMemberPath">Path to a <see cref="T:System.Double">Double</see> value on a source task assignment item to serve as the assigned allocation units value, or null to indicate that the allocation units value is not provided by the source task assignment item.</param>
            <param name="predecessorsMemberPath">Path to an <see cref="T:System.Collections.IEnumerable">IEnumerable</see> value on the source task item to serve as the task predecessor item collection, or null to indicate that the predecessor item collection is not provided by the source task item.</param>
            <param name="predecessorTaskItemMemberPath">Path to an <see cref="T:System.Object">Object</see> value on a source task predecessor item to serve as the predecessor task item, or null to indicate that the task item is not provided by the source task predecessor item.</param>
            <param name="predecessorDependencyTypeMemberPath">Path to a <see cref="T:DlhSoft.Windows.Data.DependencyType">DependencyType</see> value on a source task predecessor item to serve as the predecessor dependency type, or null to indicate that the dependency type is not provided by the source task predecessor item.</param>
            <param name="predecessorLagMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on a source task predecessor item to serve as the predecessor lag, or null to indicate that the lag is not provided by the source task predecessor item.</param>
            <param name="durationMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source task item to serve as the task duration, or null to indicate that the duration is not provided by the source task item.</param>
            <param name="finishMemberPath">Path to a <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task finish date and time, or null to indicate that the finish date and time is not provided by the source task item.</param>
            <param name="isMilestoneMemberPath">Path to a <see cref="T:System.Boolean">Boolean</see> value on the source task item to serve as the task milestone indicator, or null to indicate that the milestone indicator is not provided by the source task item.</param>
            <param name="completionMemberPath">Path to a <see cref="T:System.Double">Double</see> value on the source task item to serve as the task completion rate, or null to indicate that the completion rate is not provided by the source task item.</param>
            <param name="isCompletedMemberPath">Path to a <see cref="T:System.Boolean">Boolean</see> value on the source task item to serve as the task completed indicator, or null to indicate that the completed indicator is not provided by the source task item.</param>
            <param name="assignmentsStringMemberPath">Path to a <see cref="T:System.String">String</see> value on the source task item to serve as a string representation of the task assignment item collection, or null to indicate that the string representation of the assignment item collection is not provided by the source task item.</param>
            <param name="indexStringMemberPath">Path to a <see cref="T:System.String">String</see> value on the source task item to serve as a string representation of the index of the task item, or null to indicate that the string representation of the index is not provided by the source task item.</param>
            <param name="predecessorsStringMemberPath">Path to a <see cref="T:System.String">String</see> value on the source task item to serve as a string representation of the task predecessor item collection, or null to indicate that the string representation of the predecessor item collection is not provided by the source task item.</param>
            <param name="costMemberPath">Path to a <see cref="T:System.Double">Double</see> value on the source task item to serve as the task cost, or null to indicate that the cost is not provided by the source task item.</param>
            <param name="minStartMemberPath">Path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task minimum start date and time, or null to indicate that the minimum start date and time is not provided by the source task item.</param>
            <param name="maxStartMemberPath">Path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task maximum start date and time, or null to indicate that the maximum start date and time is not provided by the source task item.</param>
            <param name="minFinishMemberPath">Path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task minimum finish date and time, or null to indicate that the minimum finish date and time is not provided by the source task item.</param>
            <param name="maxFinishMemberPath">Path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task maximum finish date and time, or null to indicate that the maximum finish date and time is not provided by the source task item.</param>
            <param name="assignableResourceManager">The <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> object to be used internally for managing assignable resources used by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.</param>
            <param name="schedule">The schedule to be used as default schedule for the tasks.</param>
            <param name="initialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> initializes.</param>
            <param name="disposingInitialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> is disposed.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,DlhSoft.Windows.Data.ResourceManager,DlhSoft.Windows.Data.Schedule,System.Boolean,System.Boolean,System.Boolean,DlhSoft.Windows.Data.EntityManager.Initialization,DlhSoft.Windows.Data.EntityManager.Initialization)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> class.
            </summary>
            <param name="items">Collection of task items to be managed.</param>
            <param name="indentationMemberPath">Path to an <see cref="T:System.Int32">Int32</see> value on the source task item to serve as the indentation level in the hierarchical collection, or null to indicate that the indentation level is not provided by the source task item.</param>
            <param name="isExpandedMemberPath">Path to a <see cref="T:System.Boolean">Boolean</see> value on the source task item to serve as the expansion indicator in the hierarchical collection, or null to indicate that the expansion indicator is not provided by the source task item.</param>
            <param name="contentMemberPath">Path to an <see cref="T:System.Object">Object</see> value on the source task item to serve as the task content, or null to indicate that the content is not provided by the source task item.</param>
            <param name="scheduleMemberPath">Path to a <see cref="P:DlhSoft.Windows.Data.TaskManager.Schedule">Schedule</see> value on the source task item to serve as the task schedule, or null to indicate that the schedule is not provided by the source task item.</param>
            <param name="startMemberPath">Path to a <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task start date and time, or null to indicate that the start date and time is not provided by the source task item.</param>
            <param name="effortMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source task item to serve as the task effort, or null to indicate that the effort is not provided by the wrapped object.</param>
            <param name="completedEffortMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source task item to serve as the task completed effort, or null to indicate that the completed effort is not provided by the wrapped object.</param>
            <param name="assignmentsMemberPath">Path to an <see cref="T:System.Collections.IEnumerable">IEnumerable</see> value on the source task item to serve as the task assignment item collection, or null to indicate that the assignment item collection is not provided by the source task item.</param>
            <param name="assignmentResourceItemMemberPath">Path to an <see cref="T:System.Object">Object</see> value on a source task assignment item to serve as the assigned resource item, or null to indicate that the assigned resource item is not provided by the source task assignment item.</param>
            <param name="assignmentAllocationUnitsMemberPath">Path to a <see cref="T:System.Double">Double</see> value on a source task assignment item to serve as the assigned allocation units value, or null to indicate that the allocation units value is not provided by the source task assignment item.</param>
            <param name="predecessorsMemberPath">Path to an <see cref="T:System.Collections.IEnumerable">IEnumerable</see> value on the source task item to serve as the task predecessor item collection, or null to indicate that the predecessor item collection is not provided by the source task item.</param>
            <param name="predecessorTaskItemMemberPath">Path to an <see cref="T:System.Object">Object</see> value on a source task predecessor item to serve as the predecessor task item, or null to indicate that the task item is not provided by the source task predecessor item.</param>
            <param name="predecessorDependencyTypeMemberPath">Path to a <see cref="T:DlhSoft.Windows.Data.DependencyType">DependencyType</see> value on a source task predecessor item to serve as the predecessor dependency type, or null to indicate that the dependency type is not provided by the source task predecessor item.</param>
            <param name="predecessorLagMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on a source task predecessor item to serve as the predecessor lag, or null to indicate that the lag is not provided by the source task predecessor item.</param>
            <param name="durationMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source task item to serve as the task duration, or null to indicate that the duration is not provided by the source task item.</param>
            <param name="finishMemberPath">Path to a <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task finish date and time, or null to indicate that the finish date and time is not provided by the source task item.</param>
            <param name="isMilestoneMemberPath">Path to a <see cref="T:System.Boolean">Boolean</see> value on the source task item to serve as the task milestone indicator, or null to indicate that the milestone indicator is not provided by the source task item.</param>
            <param name="completionMemberPath">Path to a <see cref="T:System.Double">Double</see> value on the source task item to serve as the task completion rate, or null to indicate that the completion rate is not provided by the source task item.</param>
            <param name="isCompletedMemberPath">Path to a <see cref="T:System.Boolean">Boolean</see> value on the source task item to serve as the task completed indicator, or null to indicate that the completed indicator is not provided by the source task item.</param>
            <param name="assignmentsStringMemberPath">Path to a <see cref="T:System.String">String</see> value on the source task item to serve as a string representation of the task assignment item collection, or null to indicate that the string representation of the assignment item collection is not provided by the source task item.</param>
            <param name="indexStringMemberPath">Path to a <see cref="T:System.String">String</see> value on the source task item to serve as a string representation of the index of the task item, or null to indicate that the string representation of the index is not provided by the source task item.</param>
            <param name="predecessorsStringMemberPath">Path to a <see cref="T:System.String">String</see> value on the source task item to serve as a string representation of the task predecessor item collection, or null to indicate that the string representation of the predecessor item collection is not provided by the source task item.</param>
            <param name="costMemberPath">Path to a <see cref="T:System.Double">Double</see> value on the source task item to serve as the task cost, or null to indicate that the cost is not provided by the source task item.</param>
            <param name="minStartMemberPath">Path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task minimum start date and time, or null to indicate that the minimum start date and time is not provided by the source task item.</param>
            <param name="maxStartMemberPath">Path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task maximum start date and time, or null to indicate that the maximum start date and time is not provided by the source task item.</param>
            <param name="minFinishMemberPath">Path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task minimum finish date and time, or null to indicate that the minimum finish date and time is not provided by the source task item.</param>
            <param name="maxFinishMemberPath">Path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task maximum finish date and time, or null to indicate that the maximum finish date and time is not provided by the source task item.</param>
            <param name="assignableResourceManager">The <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> object to be used internally for managing assignable resources used by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.</param>
            <param name="schedule">The schedule to be used as default schedule for the tasks.</param>
            <param name="areEffortValueConstraintsEnabled">Indicates whether the effort value constaints are enabled.</param>
            <param name="areDependencyConstraintsEnabled">Indicates whether the dependency constaints are enabled.</param>
            <param name="areSummaryValueConstraintsEnabled">Indicates whether the summary value constaints are enabled.</param>
            <param name="initialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> initializes.</param>
            <param name="disposingInitialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> is disposed.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.CreateEntityCollection">
            <summary>
            Creates the internal task collection to be used as the task host of this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.
            </summary>
            <returns>The internal task collection to be used as the task host of this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.CreateReadOnlyEntityCollection(DlhSoft.Windows.Data.EntityCollection)">
            <summary>
            Creates the internal read-only task collection to be provided by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.
            </summary>
            <returns>The internal read-only task collection to be provided by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.InitializeEntityCollection(DlhSoft.Windows.Data.EntityCollection)">
            <summary>
            Sets up the read only task collection to be used for viewing tasks externally.
            </summary>
            <param name="entities">Internal task collection to be used as the source for the read only task collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.CreateEntity(System.Object)">
            <summary>
            Creates a new task wrapping the specified object.
            </summary>
            <param name="item">Task item to be wrapped by the new task.</param>
            <returns>The new task that wraps the specified object.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.CreateEntityFromSimpleItem(DlhSoft.Windows.Data.SimpleEntityItem)">
            <summary>
            Creates a new task for simple data management mode.
            </summary>
            <param name="entityItem">The entity item definition to use.</param>
            <returns>The new task.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.CreateAssignableResourceManager">
            <summary>
            Establishes the assignable resource manager to be used internally by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.
            </summary>
            <returns>The assignable resource manager to be used internally by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.SimpleTaskItem})">
            <summary>
            Inserts a set of tasks into the managed collection.
            </summary>
            <param name="index">The zero-based index at which the tasks should be inserted.</param>
            <param name="simpleTaskItems">Item definitions representing the tasks to insert.</param>
            <returns>The new tasks.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.Insert(System.Int32,DlhSoft.Windows.Data.SimpleTaskItem)">
            <summary>
            Inserts a task into the managed collection.
            </summary>
            <param name="index">The zero-based index at which the task should be inserted.</param>
            <param name="simpleTaskItem">Item definition representing the task to insert.</param>
            <returns>The new task.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.AddRange(System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.SimpleTaskItem})">
            <summary>
            Adds a set of tasks to the end of the managed collection.
            </summary>
            <param name="simpleTaskItems">Item definitions representing the tasks to be added at the end of the collection.</param>
            <returns>The new tasks.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.Add(DlhSoft.Windows.Data.SimpleTaskItem)">
            <summary>
            Adds a task to the end of the managed collection.
            </summary>
            <param name="simpleTaskItem">Item definition representing the task to be added at the end of the collection.</param>
            <returns>The new task.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.RemoveRange(System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.Task})">
            <summary>
            Removes specific tasks from the managed collection.
            </summary>
            <param name="tasks">The tasks to remove from the collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.Remove(DlhSoft.Windows.Data.Task)">
            <summary>
            Removes a specific task from the managed collection.
            </summary>
            <param name="task">The task to remove from the collection.</param>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.TasksProperty">
            <summary>
            Identifies the Tasks dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.ContentMemberPathProperty">
            <summary>
            Identifies the ContentMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnContentMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.ContentMemberPath">ContentMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.ScheduleMemberPathProperty">
            <summary>
            Identifies the ScheduleMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnScheduleMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.ScheduleMemberPath">ScheduleMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.StartMemberPathProperty">
            <summary>
            Identifies the StartMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnStartMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.StartMemberPath">StartMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.MinStartMemberPathProperty">
            <summary>
            Identifies the MinStartMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnMinStartMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.MinStartMemberPath">MinStartMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.MaxStartMemberPathProperty">
            <summary>
            Identifies the MaxStartMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnMaxStartMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.MaxStartMemberPath">MaxStartMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.EffortMemberPathProperty">
            <summary>
            Identifies the EffortMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnEffortMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.EffortMemberPath">EffortMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.CompletedEffortMemberPathProperty">
            <summary>
            Identifies the CompletedEffortMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnCompletedEffortMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.CompletedEffortMemberPath">CompletedEffortMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.AssignmentsMemberPathProperty">
            <summary>
            Identifies the AssignmentsMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnAssignmentsMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.AssignmentsMemberPath">AssignmentsMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.AssignmentResourceItemMemberPathProperty">
            <summary>
            Identifies the AssignmentResourceItemMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnAssignmentResourceItemMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.AssignmentResourceItemMemberPath">AssignmentResourceItemMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.AssignmentAllocationUnitsMemberPathProperty">
            <summary>
            Identifies the AssignmentAllocationUnitsMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnAssignmentAllocationUnitsMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.AssignmentAllocationUnitsMemberPath">AssignmentAllocationUnitsMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.PredecessorsMemberPathProperty">
            <summary>
            Identifies the PredecessorsMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnPredecessorsMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.PredecessorsMemberPath">PredecessorsMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.PredecessorTaskItemMemberPathProperty">
            <summary>
            Identifies the PredecessorTaskItemMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnPredecessorTaskItemMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.PredecessorTaskItemMemberPath">PredecessorTaskItemMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.PredecessorDependencyTypeMemberPathProperty">
            <summary>
            Identifies the PredecessorDependencyTypeMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnPredecessorDependencyTypeMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.PredecessorDependencyTypeMemberPath">PredecessorDependencyTypeMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.PredecessorLagMemberPathProperty">
            <summary>
            Identifies the PredecessorLagMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnPredecessorLagMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.PredecessorLagMemberPath">PredecessorLagMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.DurationMemberPathProperty">
            <summary>
            Identifies the DurationMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnDurationMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.DurationMemberPath">DurationMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.FinishMemberPathProperty">
            <summary>
            Identifies the FinishMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnFinishMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.FinishMemberPath">FinishMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.MinFinishMemberPathProperty">
            <summary>
            Identifies the MinFinishMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnMinFinishMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.MinFinishMemberPath">MinFinishMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.MaxFinishMemberPathProperty">
            <summary>
            Identifies the MaxFinishMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnMaxFinishMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.MaxFinishMemberPath">MaxFinishMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.IsMilestoneMemberPathProperty">
            <summary>
            Identifies the IsMilestoneMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnIsMilestoneMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.IsMilestoneMemberPath">IsMilestoneMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.CompletionMemberPathProperty">
            <summary>
            Identifies the CompletionMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnCompletionMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.CompletionMemberPath">CompletionMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.IsCompletedMemberPathProperty">
            <summary>
            Identifies the IsCompletedMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnIsCompletedMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.IsCompletedMemberPath">IsCompletedMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.AssignmentsStringMemberPathProperty">
            <summary>
            Identifies the AssignmentsStringMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnAssignmentsStringMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.AssignmentsStringMemberPath">AssignmentsStringMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.IndexStringMemberPathProperty">
            <summary>
            Identifies the IndexStringMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnIndexStringMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.IndexStringMemberPath">IndexStringMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.PredecessorsStringMemberPathProperty">
            <summary>
            Identifies the PredecessorsStringMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnPredecessorsStringMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.PredecessorsStringMemberPath">PredecessorsStringMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.CostMemberPathProperty">
            <summary>
            Identifies the CostMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnCostMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.CostMemberPath">CostMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.AssignableResourceManagerProperty">
            <summary>
            Identifies the AssignableResourceManager dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnAssignableResourceManagerChanged(DlhSoft.Windows.Data.ResourceManager,DlhSoft.Windows.Data.ResourceManager)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.AssignableResourceManager">AssignableResourceManager</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.OverallStartProperty">
            <summary>
            Identifies the OverallStart dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnOverallStartChanged(System.DateTime,System.DateTime)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.OverallStart">OverallStart</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.OverallEffortProperty">
            <summary>
            Identifies the OverallEffort dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnOverallEffortChanged(System.TimeSpan,System.TimeSpan)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.OverallEffort">OverallEffort</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.OverallCompletedEffortProperty">
            <summary>
            Identifies the OverallCompletedEffort dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnOverallCompletedEffortChanged(System.TimeSpan,System.TimeSpan)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.OverallCompletedEffort">OverallCompletedEffort</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.OverallCompletionProperty">
            <summary>
            Identifies the OverallCompletion dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnOverallCompletionChanged(System.Double,System.Double)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.OverallCompletion">OverallCompletion</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.OverallIsCompletedProperty">
            <summary>
            Identifies the OverallIsCompleted dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnOverallIsCompletedChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.OverallIsCompleted">OverallIsCompleted</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.OverallFinishProperty">
            <summary>
            Identifies the OverallFinish dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnOverallFinishChanged(System.DateTime,System.DateTime)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.OverallFinish">OverallFinish</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.OverallCostProperty">
            <summary>
            Identifies the OverallCost dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnOverallCostChanged(System.Double,System.Double)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.OverallCost">OverallCost</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.AreEffortValueConstraintsEnabledProperty">
            <summary>
            Identifies the AreEffortValueConstraintsEnabled dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnAreEffortValueConstraintsEnabledChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.AreEffortValueConstraintsEnabled">AreEffortValueConstraintsEnabled</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.AreDependencyConstraintsEnabledProperty">
            <summary>
            Identifies the AreDependencyConstraintsEnabled dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnAreDependencyConstraintsEnabledChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.AreDependencyConstraintsEnabled">AreDependencyConstraintsEnabled</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.AreSummaryValueConstraintsEnabledProperty">
            <summary>
            Identifies the AreSummaryValueConstraintsEnabled dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnAreSummaryValueConstraintsEnabledChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.TaskManager.AreSummaryValueConstraintsEnabled">AreSummaryValueConstraintsEnabled</see> property changes.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.GetTask(System.Object)">
            <summary>
            Gets the task that wraps the specified object from the internal task collection, or null if such task doesn't exist.
            </summary>
            <param name="item">Wrapped object to search for.</param>
            <returns>The task that wraps the specified object from the internal task collection, or null if such task doesn't exist.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.GetTaskAt(System.Int32)">
            <summary>
            Gets the task at the specified index from the internal task collection.
            </summary>
            <param name="index">The zero-based index of the task to be get.</param>
            <returns>The task at the specified index from the internal task collection.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.GetCriticalTasks">
            <summary>
            Gets the list of critical tasks. A task is critical if it would generate delays in the project in case that it wouldn't be finished on time.
            </summary>
            <returns>The list of critical tasks.</returns>
        </member>
        <member name="F:DlhSoft.Windows.Data.TaskManager.ScheduleProperty">
            <summary>
            Identifies the Schedule dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnInitializeEntitiesCompleting(System.Int32,System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.Entity})">
            <summary>
            Executed when the managed tasks are initialized.
            <param name="index">The initial index of the tasks.</param>
            <param name="entities">The initialized tasks.</param>
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnInitializeEntitiesCompleted">
            <summary>
            Executed after the managed tasks are initialized.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnNewAssignableResourceItem(System.Boolean@,System.Object[])">
            <summary>
            Raises the NewAssignableResourceItem event when a new item is created in the assignable resources collection to allow the event handlers to create their own resource item type.
            </summary>
            <param name="cancel">Returns a value indicating whether the creation of the new item should be cancelled.</param>
            <param name="parameters">List of parameters used for actually creating the new resource item.</param>
            <returns>The newly created resource item.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnNewAssignmentItem(System.Boolean@,DlhSoft.Windows.Data.Task,System.Object[])">
            <summary>
            Raises the NewAssignmentItem event when a new assignment item is created in the assignment collection of a task to allow the event handlers to create their own assignment item type.
            </summary>
            <param name="cancel">Returns a value indicating whether the creation of the new item should be cancelled.</param>
            <param name="parentTask">Parent task of the new assignment.</param>
            <param name="parameters">List of parameters used for actually creating the new assignment item.</param>
            <returns>The newly created assignment item.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.OnNewPredecessorItem(System.Boolean@,DlhSoft.Windows.Data.Task,System.Object[])">
            <summary>
            Raises the NewPredecessorItem event when a new predecessor item is created in the predecessor collection of a task to allow the event handlers to create their own predecessor item type.
            </summary>
            <param name="cancel">Returns a value indicating whether the creation of the new item should be cancelled.</param>
            <param name="parentTask">Parent task of the new predecessor.</param>
            <param name="parameters">List of parameters used for actually creating the new predecessor item.</param>
            <returns>The newly created predecessor item.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.LevelResources">
            <summary>
            Levels the task resources.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.LevelResources(System.Boolean)">
            <summary>
            Levels the task resources.
            </summary>
            <param name="includeStartedTasks">A value indicating whether to level resources for started tasks also.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.LevelResources(System.Boolean,System.DateTime)">
            <summary>
            Levels the task resources.
            </summary>
            <param name="includeStartedTasks">A value indicating whether to level resources for started tasks also.</param>
            <param name="start">The start date and time to use as the earlier task start during resource leveling.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.GetProjectXml">
            <summary>
            Retreives managed data as a Project XML string.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.Tasks">
            <summary>
            Gets the read-only task collection wrapping the objects that are currently managed.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.ContentMemberPath">
            <summary>
            Gets or sets the path to an <see cref="T:System.Object">Object</see> value on the source task item to serve as the task content, or null to indicate that the content is not provided by the source task item.
            It is recommended to set this property.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.ScheduleMemberPath">
            <summary>
            Gets or sets the path to a <see cref="P:DlhSoft.Windows.Data.TaskManager.Schedule">Schedule</see> value on the source task item to serve as the task schedule, or null to indicate that the schedule is not provided by the source task item.
            The task schedule indicates the time intervals of a day that can be used as work time for achieving completion of the task. If a child task schedule is not set, the parent task schedule is used. If a root task schedule is not set the <see cref="P:DlhSoft.Windows.Data.Schedule.Continuous">Continuous</see> schedule is used.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.StartMemberPath">
            <summary>
            Gets or sets the path to a <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task start date and time, or null to indicate that the start date and time is not provided by the source task item. 
            The start date and time of a parent task will be based on the start date and time values of its children.
            It is recommended to set this property.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.MinStartMemberPath">
            <summary>
            Gets or sets the path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task minimum start date and time, or null to indicate that the minimum date and time is not provided by the source task item. 
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.MaxStartMemberPath">
            <summary>
            Gets or sets the path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task maximum start date and time, or null to indicate that the maximum date and time is not provided by the source task item. 
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.EffortMemberPath">
            <summary>
            Gets or sets the path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source task item to serve as the task effort, or null to indicate that the effort is not provided by the wrapped object. 
            The effort of a parent task will be based on the effort values of its children.
            It is recommended to set this property.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.CompletedEffortMemberPath">
            <summary>
            Gets or sets the path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source task item to serve as the task completed effort, or null to indicate that the completed effort is not provided by the wrapped object. 
            The completed effort of a parent task will be based on the completed effort values of its children.
            It is recommended to set this property.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.AssignmentsMemberPath">
            <summary>
            Gets or sets the path to an <see cref="T:System.Collections.IEnumerable">IEnumerable</see> value on the source task item to serve as the task assignment item collection, or null to indicate that the assignment item collection is not provided by the source task item. 
            You can use a collection of <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see> objects as the task assignment item collection. Note that the assignment item collection is ignored for parent tasks.
            It is recommended to set this property.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.AssignmentResourceItemMemberPath">
            <summary>
            Gets or sets the path to an <see cref="T:System.Object">Object</see> value on a source task assignment item to serve as the assigned resource item, or null to indicate that the assigned resource item is not provided by the source task assignment item. 
            You can use a <see cref="T:DlhSoft.Windows.Data.ResourceItem">ResourceItem</see> object as the assigned resource item.
            It is recommended to set this property.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.AssignmentAllocationUnitsMemberPath">
            <summary>
            Gets or sets the path to a <see cref="T:System.Double">Double</see> value on a source task assignment item to serve as the task assigned allocation units value, or null to indicate that the allocation units value is not provided by the source task assignment item. 
            The assigned allocation units value represents the percent of the resource availability to consider for the assignment, and is used when computing the task cost or can be used when determining the resource availability for a specific time interval.
            It is recommended to set this property.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.PredecessorsMemberPath">
            <summary>
            Gets or sets the path to to an <see cref="T:System.Collections.IEnumerable">IEnumerable</see> value on the source task item to serve as the task predecessor item collection, or null to indicate that the predecessor item collection is not provided by the source task item. 
            The predecessor item collection is used to indicate dependencies between tasks. You can use a collection of <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see> objects as the task predecessor item collection.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.PredecessorTaskItemMemberPath">
            <summary>
            Gets or sets the path to an <see cref="T:System.Object">Object</see> value on a source task predecessor item to serve as the predecessor task item, or null to indicate that the task item is not provided by the source task predecessor item. 
            You can use a <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see> object as the predecessor task item.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.PredecessorDependencyTypeMemberPath">
            <summary>
            Gets or sets the path to a <see cref="T:DlhSoft.Windows.Data.DependencyType">DependencyType</see> value on a source task predecessor item to serve as the predecessor dependency type, or null to indicate that the dependency type is not provided by the source task predecessor item. 
            Predecessor dependency type indicates how the current task depends on the predecessor task.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.PredecessorLagMemberPath">
            <summary>
            Gets or sets the path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on a source task predecessor item to serve as the predecessor lag, or null to indicate that the lag is not provided by the source task predecessor item. 
            Predecessor lag indicates when the current task depends on the predecessor task. If lag is zero the dependency is applied at the appropriate time. If lag is positive the dependency is applied so that there will be an exclusion interval between the tasks. If lag is negative the dependency is applied so that there will be an intersection interval between the tasks.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.DurationMemberPath">
            <summary>
            Gets or sets the path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source task item to serve as the task duration, or null to indicate that the duration is not provided by the source task item.
            Task duration is computed automatically based on schedule, start date and time, effort, and assignments. The duration of a parent task will be based on the duration values of its children.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.FinishMemberPath">
            <summary>
            Gets or sets the path to a <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task finish date and time, or null to indicate that the finish date and time is not provided by the source task item.
            Task finish date and time is computed automatically based on schedule, start date and time, effort, and assignments. The finish date and time of a parent task will be based on the finish date and time values of its children.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.MinFinishMemberPath">
            <summary>
            Gets or sets the path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task minimum finish date and time, or null to indicate that the minimum date and time is not provided by the source task item. 
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.MaxFinishMemberPath">
            <summary>
            Gets or sets the path to a nullable <see cref="T:System.DateTime">DateTime</see> value on the source task item to serve as the task maximum finish date and time, or null to indicate that the maximum date and time is not provided by the source task item. 
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.IsMilestoneMemberPath">
            <summary>
            Gets or sets the path to a <see cref="T:System.Boolean">Boolean</see> value on the source task item to serve as the task milestone indicator, or null to indicate that the milestone indicator is not provided by the source task item.
            A milestone task has its effort value set to zero.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.CompletionMemberPath">
            <summary>
            Gets or sets the path to a <see cref="T:System.Double">Double</see> value on the source task item to serve as the task completion rate, or null to indicate that the completion rate is not provided by the source task item.
            Task completion rate is computed automatically based on effort and completed effort.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.IsCompletedMemberPath">
            <summary>
            Gets or sets the path to a <see cref="T:System.Boolean">Boolean</see> value on the source task item to serve as the task milestone indicator, or null to indicate that the milestone indicator is not provided by the source task item.
            A completed task has its completed effort value equal to effort.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.AssignmentsStringMemberPath">
            <summary>
            Gets or sets the path to a <see cref="T:System.String">String</see> value on the source task item to serve as a string representation of the task assignment item collection, or null to indicate that the string representation of the assignment item collection is not provided by the source task item.
            The assignments string is of this form: John, Diane [80%].
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.IndexStringMemberPath">
            <summary>
            Gets or sets the path to a <see cref="T:System.String">String</see> value on the source task item to serve as a string representation of the index of the task, or null to indicate that the string representation of the index is not provided by the source task item.
            The index string is automatically computed based on the position of the task in the task collection and is of this form: 1, 2.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.PredecessorsStringMemberPath">
            <summary>
            Gets or sets the path to a <see cref="T:System.String">String</see> value on the source task item to serve as a string representation of the task predecessor item collection, or null to indicate that the string representation of the predecessor item collection is not provided by the source task item.
            The predecessors string is of this form: 1, 2SS, 3FF+2.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.CostMemberPath">
            <summary>
            Gets or sets the path to a <see cref="T:System.Double">Double</see> value on the source task item to serve as the task cost, or null to indicate that the cost is not provided by the source task item.
            Task cost can be computed automatically based on duration and assignments. The cost of a parent task will be based on the cost values of its children. However a specific task cost can be set and will be used instead if it is higher than the automatically computed cost.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.AssignableResourceManager">
            <summary>
            Gets or sets the <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> object that is used internally for managing assignable resources used by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.RootTasks">
            <summary>
            Enumerates the root tasks managed by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.
            The dependency property is <see cref="P:DlhSoft.Windows.Data.NodeManager.RootNodes">RootNodes</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.LeafTasks">
            <summary>
            Enumerates the leaf tasks managed by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.
            The dependency property is <see cref="P:DlhSoft.Windows.Data.NodeManager.LeafNodes">LeafNodes</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.OverallStart">
            <summary>
            Gets the overall start date ands time of the tasks managed by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.OverallEffort">
            <summary>
            Gets the overall effort of the tasks managed by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.OverallCompletedEffort">
            <summary>
            Gets the overall completed effort of the tasks managed by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.OverallCompletion">
            <summary>
            Gets the overall completion percent of the tasks managed by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.OverallIsCompleted">
            <summary>
            Gets a value indicating whether all the tasks managed by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> are completed.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.OverallFinish">
            <summary>
            Gets the overall finish date and time of the tasks managed by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.OverallCost">
            <summary>
            Gets the overall cost of the tasks managed by this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.AreEffortValueConstraintsEnabled">
            <summary>
            Gets or sets a value indicating whether the task effort values are constrained so that task duration updates are interpreted as assignment allocation units updates when assignments are available.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.AreDependencyConstraintsEnabled">
            <summary>
            Gets or sets a value indicating whether the dependent task values are constrained and automatically computed.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.AreSummaryValueConstraintsEnabled">
            <summary>
            Gets or sets a value indicating whether the summary task values are constained and automatically computed.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.Item(System.Object)">
            <summary>
            Gets the task that wraps the specified object from the internal task collection, or null if such task doesn't exist.
            </summary>
            <param name="item">Wrapped object to search for.</param>
            <returns>The task that wraps the specified object from the internal task collection, or null if such task doesn't exist.</returns>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.Schedule">
            <summary>
            Gets or sets the schedule of this <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> to be used as default schedule for the tasks in the internal collection.
            This is a dependency property.
            </summary>
        </member>
        <member name="E:DlhSoft.Windows.Data.TaskManager.NewAssignableResourceItem">
            <summary>
            Occurs when a new item is created in the assignable resources collection to allow the event handlers to create their own resource item type.
            </summary>
        </member>
        <member name="E:DlhSoft.Windows.Data.TaskManager.NewAssignmentItem">
            <summary>
            Occurs when a new assignment item is created in the assignment collection of a task to allow the event handlers to create their own assignment item type.
            </summary>
        </member>
        <member name="E:DlhSoft.Windows.Data.TaskManager.NewPredecessorItem">
            <summary>
            Occurs when a new predecessor item is created in the predecessor collection of a task to allow the event handlers to create their own predecessor item type.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer">
            <summary>
            Represents a data serializer used to export the contents of a <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> component to a Project XML file.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.#ctor(DlhSoft.Windows.Data.TaskManager)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer">ProjectXmlSerializer</see> class.
            </summary>
            <param name="component">The <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> component instance to export contents of.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GetXml">
            <summary>
            Retreives data as a Project XML string.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.Component">
            <summary>
            Gets <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> component instance to export contents of.
            </summary>
        </member>
        <member name="E:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GettingProjectInfoXml">
            <summary>
            Occurs when a project XML element is generated based on source data during <see cref="M:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GetXml">GetXml</see> method execution.
            </summary>
        </member>
        <member name="E:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GettingTaskXml">
            <summary>
            Occurs when a task XML element is generated based on a source Task object during <see cref="M:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GetXml">GetXml</see> method execution.
            </summary>
        </member>
        <member name="E:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GettingPredecessorXml">
            <summary>
            Occurs when a predecessor link XML element is generated based on source Predecessor object during <see cref="M:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GetXml">GetXml</see> method execution.
            </summary>
        </member>
        <member name="E:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GettingResourceXml">
            <summary>
            Occurs when a resource XML element is generated based on a source Resource object during <see cref="M:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GetXml">GetXml</see> method execution.
            </summary>
        </member>
        <member name="E:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GettingAssignmentXml">
            <summary>
            Occurs when an assignment XML element is generated based on a source Assignment object during <see cref="M:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GetXml">GetXml</see> method execution.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.ProjectXmlTemplate">
            <summary>
            Specifies the default XML template to use for generating the project XML element during <see cref="M:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GetXml">GetXml</see> method execution.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.ScheduleWeekDayXmlTemplate">
            <summary>
            Specifies the default XML template to use for generating week day XML elements (within calendar definition) during <see cref="M:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GetXml">GetXml</see> method execution.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.ScheduleDayWorkingTimesXmlTemplate">
            <summary>
            Specifies the default XML template to use for generating the day working times XML element (within calendar definition) during <see cref="M:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GetXml">GetXml</see> method execution.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.TaskXmlTemplate">
            <summary>
            Specifies the default XML template to use for generating task XML elements during <see cref="M:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GetXml">GetXml</see> method execution.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.PredecessorXmlTemplate">
            <summary>
            Specifies the default XML template to use for generating predecessor link XML elements during <see cref="M:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GetXml">GetXml</see> method execution.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.ResourceXmlTemplate">
            <summary>
            Specifies the default XML template to use for generating resource XML elements during <see cref="M:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GetXml">GetXml</see> method execution.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.AssignmentXmlTemplate">
            <summary>
            Specifies the default XML template to use for generating assignment XML elements during <see cref="M:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GetXml">GetXml</see> method execution.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GettingXmlElementEventArgs">
            <summary>
            Represents base event arguments for element generation events.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GettingXmlElementEventArgs.OutputXml">
            <summary>
            Gets or sets the XML content that will be used as output data within the Save operation.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GettingTaskXmlEventArgs">
            <summary>
            Represents event arguments for <see cref="E:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GettingTaskXml">GettingTaskXml</see> event.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GettingTaskXmlEventArgs.Task">
            <summary>
            Indicates the source Task object.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GettingPredecessorXmlEventArgs">
            <summary>
            Represents event arguments for <see cref="E:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GettingPredecessorXml">GettingPredecessorXml</see> event.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GettingPredecessorXmlEventArgs.Predecessor">
            <summary>
            Indicates the source Predecessor object.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GettingResourceXmlEventArgs">
            <summary>
            Represents event arguments for <see cref="E:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GettingResourceXml">GettingResourceXml</see> event.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GettingResourceXmlEventArgs.Resource">
            <summary>
            Indicates the source Resource object.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GettingAssignmentXmlEventArgs">
            <summary>
            Represents event arguments for <see cref="E:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GettingAssignmentXml">GettingAssignmentXml</see> event.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskManager.ProjectXmlSerializer.GettingAssignmentXmlEventArgs.Assignment">
            <summary>
            Indicates the source Assignment object.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.Resource">
            <summary>
            Represents a resource item object wrapper generated and managed by a <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see>, aware of its schedule and costs or hosted within a resource data management control.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Resource.#ctor(DlhSoft.Windows.Data.Assignment,System.Object,System.String,System.String,System.String,System.String,DlhSoft.Windows.Data.Entity.Initialization,DlhSoft.Windows.Data.Entity.Initialization)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see> class.
            </summary>
            <param name="parentAssignment">The parent assignment that owns this <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see>.</param>
            <param name="item">Resource item to be wrapped by the <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see>.</param>
            <param name="contentMemberPath">Path to an <see cref="T:System.Object">Object</see> value on the source resource item to serve as the resource content, or null to indicate that the content is not provided by the source resource item.</param>
            <param name="scheduleMemberPath">Path to a <see cref="P:DlhSoft.Windows.Data.Resource.Schedule">Schedule</see> value on the source resource item to serve as the resource schedule, or null to indicate that the schedule is not provided by the source resource item.</param>
            <param name="costPerUsageMemberPath">Path to a <see cref="T:System.Double">Double</see> value on the source resource item to serve as the resource cost pe usage, or null to indicate that the cost per usage is not provided by the source resource item.</param>
            <param name="costPerHourMemberPath">Path to a <see cref="T:System.Double">Double</see> value on the source resource item to serve as the resource cost pe hour, or null to indicate that the cost per hour is not provided by the source resource item.</param>
            <param name="parentEntitySetInitialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see> is set as owned by a parent entity.</param>
            <param name="disposingInitialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see> is disposed.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.Resource.#ctor(DlhSoft.Windows.Data.Assignment,System.Object,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see> class.
            </summary>
            <param name="parentAssignment">The parent assignment that owns this <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see>.</param>
            <param name="item">Resource item to be wrapped by the <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see>.</param>
            <param name="contentMemberPath">Path to an <see cref="T:System.Object">Object</see> value on the source resource item to serve as the resource content, or null to indicate that the content is not provided by the source resource item.</param>
            <param name="scheduleMemberPath">Path to a <see cref="P:DlhSoft.Windows.Data.Resource.Schedule">Schedule</see> value on the source resource item to serve as the resource schedule, or null to indicate that the schedule is not provided by the source resource item.</param>
            <param name="costPerUsageMemberPath">Path to a <see cref="T:System.Double">Double</see> value on the source resource item to serve as the resource cost pe usage, or null to indicate that the cost per usage is not provided by the source resource item.</param>
            <param name="costPerHourMemberPath">Path to a <see cref="T:System.Double">Double</see> value on the source resource item to serve as the resource cost pe hour, or null to indicate that the cost per hour is not provided by the source resource item.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.Resource.#ctor(System.Object,System.String,System.String,System.String,System.String,DlhSoft.Windows.Data.Entity.Initialization,DlhSoft.Windows.Data.Entity.Initialization,DlhSoft.Windows.Data.Entity.Initialization,DlhSoft.Windows.Data.Entity.Initialization)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see> class.
            </summary>
            <param name="item">Resource item to be wrapped by the <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see>.</param>
            <param name="contentMemberPath">Path to an <see cref="T:System.Object">Object</see> value on the source resource item to serve as the resource content, or null to indicate that the content is not provided by the source resource item.</param>
            <param name="scheduleMemberPath">Path to a <see cref="P:DlhSoft.Windows.Data.Resource.Schedule">Schedule</see> value on the source resource item to serve as the resource schedule, or null to indicate that the schedule is not provided by the source resource item.</param>
            <param name="costPerUsageMemberPath">Path to a <see cref="T:System.Double">Double</see> value on the source resource item to serve as the resource cost pe usage, or null to indicate that the cost per usage is not provided by the source resource item.</param>
            <param name="costPerHourMemberPath">Path to a <see cref="T:System.Double">Double</see> value on the source resource item to serve as the resource cost pe hour, or null to indicate that the cost per hour is not provided by the source resource item.</param>
            <param name="completingParentManagerInitialization">A method to be called when the initialization of the parent <see cref="T:DlhSoft.Windows.Data.EntityManager">EntityManager</see> is completed.</param>
            <param name="insertedIntoParentCollectionInitialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.Predecessor">Predecessor</see> is inserted into the parent collection.</param>
            <param name="removingFromParentCollectionInitialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.Predecessor">Predecessor</see> is removed from the parent collection.</param>
            <param name="disposingInitialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see> is disposed.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.Resource.#ctor(System.Object,System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see> class.
            </summary>
            <param name="item">Resource item to be wrapped by the <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see>.</param>
            <param name="contentMemberPath">Path to an <see cref="T:System.Object">Object</see> value on the source resource item to serve as the resource content, or null to indicate that the content is not provided by the source resource item.</param>
            <param name="scheduleMemberPath">Path to a <see cref="P:DlhSoft.Windows.Data.Resource.Schedule">Schedule</see> value on the source resource item to serve as the resource schedule, or null to indicate that the schedule is not provided by the source resource item.</param>
            <param name="costPerUsageMemberPath">Path to a <see cref="T:System.Double">Double</see> value on the source resource item to serve as the resource cost pe usage, or null to indicate that the cost per usage is not provided by the source resource item.</param>
            <param name="costPerHourMemberPath">Path to a <see cref="T:System.Double">Double</see> value on the source resource item to serve as the resource cost pe hour, or null to indicate that the cost per hour is not provided by the source resource item.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.Resource.#ctor(System.Object,DlhSoft.Windows.Data.Entity.Initialization)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see> class.
            </summary>
            <param name="item">Resource item to be wrapped by the <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see>.</param>
            <param name="initialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see> is inserted into the parent collection.</param>
        </member>
        <member name="F:DlhSoft.Windows.Data.Resource.ContentProperty">
            <summary>
            Identifies the Content dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Resource.OnContentChanged(System.Object,System.Object)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Resource.Content">Content</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Resource.ScheduleProperty">
            <summary>
            Identifies the Schedule dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Resource.OnScheduleChanged(DlhSoft.Windows.Data.Schedule,DlhSoft.Windows.Data.Schedule)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Resource.Schedule">Schedule</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Resource.CostPerUsageProperty">
            <summary>
            Identifies the CostPerUsage dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Resource.OnCostPerUsageChanged(System.Double,System.Double)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Resource.CostPerUsage">CostPerUsage</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Resource.CostPerHourProperty">
            <summary>
            Identifies the CostPerHour dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Resource.OnCostPerHourChanged(System.Double,System.Double)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Resource.CostPerHour">CostPerHour</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Resource.AssignmentsProperty">
            <summary>
            Identifies the Assignments dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Resource.OnAssignmentsChanged(System.Collections.ObjectModel.ReadOnlyObservableCollection{DlhSoft.Windows.Data.Assignment},System.Collections.ObjectModel.ReadOnlyObservableCollection{DlhSoft.Windows.Data.Assignment})">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Resource.Assignments">Assignments</see> property changes.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Resource.OnRelatedEntityAdded(DlhSoft.Windows.Data.Entity)">
            <summary>
            Called when an entity is added to the related entities collection.
            </summary>
            <param name="relatedEntity">The added related entity.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.Resource.OnRelatedEntityRemoved(DlhSoft.Windows.Data.Entity)">
            <summary>
            Called when an entity is removed from the related entities collection.
            </summary>
            <param name="relatedEntity">The removed related entity.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.Resource.GetAllocations(System.DateTime,System.DateTime)">
            <summary>
            Enumerates the time intervals and allocations of the resource within a specified timeline page considering the resource schedule if specified, or the continuous schedule (Sunday - Saturday, 24h/day) otherwise.
            </summary>
            <param name="start">The date and time to start the enumeration at.</param>
            <param name="finish">The date and time to finish the enumeration at.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.Resource.GetAllocations(System.DateTime,System.DateTime,DlhSoft.Windows.Data.Schedule)">
            <summary>
            Enumerates the time intervals and allocations of the resource within a specified timeline page considering the resource schedule if specified, or the specified default schedule otherwise.
            </summary>
            <param name="start">The date and time to start the enumeration at.</param>
            <param name="finish">The date and time to finish the enumeration at.</param>
            <param name="defaultSchedule">The default schedule to use if the resource schedule is not specified.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.Resource.ToString">
            <summary>
            Provides a string representation of this <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see> object.
            </summary>
            <returns>The string representation of the object.</returns>
        </member>
        <member name="P:DlhSoft.Windows.Data.Resource.ParentCollection">
            <summary>
            Gets the parent collection that owns this <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Resource.ParentAssignment">
            <summary>
            Gets the parent assignment that owns this <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Resource.Content">
            <summary>
            Gets or sets the content of this <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Resource.Schedule">
            <summary>
            Gets or sets the schedule of this <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Resource.CostPerUsage">
            <summary>
            Gets or sets the cost per usage of this <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Resource.CostPerHour">
            <summary>
            Gets or sets the cost per hour of this <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Resource.Assignments">
            <summary>
            Gets the assignment collection of this <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.IPredecessorItem">
            <summary>
            Represents the interface of a predecessor item aware of its task, dependency type, and lag that can be used as a source object to be wrapped within a <see cref="T:DlhSoft.Windows.Data.Predecessor">Predecessor</see> and managed using a <see cref="T:DlhSoft.Windows.Data.PredecessorManager">PredecessorManager</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.IPredecessorItem.TaskItem">
            <summary>
            Gets or sets the task item of this <see cref="T:DlhSoft.Windows.Data.IPredecessorItem">IPredecessorItem</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.IPredecessorItem.DependencyType">
            <summary>
            Gets or sets the dependency type of this <see cref="T:DlhSoft.Windows.Data.IPredecessorItem">IPredecessorItem</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.IPredecessorItem.Lag">
            <summary>
            Gets or sets the lag of this <see cref="T:DlhSoft.Windows.Data.IPredecessorItem">IPredecessorItem</see>.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.DayScheduleProvider">
            <summary>
            Represents a method that returns the work time intervals of a specified day to define a <see cref="T:DlhSoft.Windows.Data.Schedule">Schedule</see>.
            </summary>
            <param name="date">The date to return work time intervals for.</param>
            <returns>The work time intervals of a specified day to define a <see cref="T:DlhSoft.Windows.Data.Schedule">Schedule</see>.</returns>
        </member>
        <member name="T:DlhSoft.Windows.Data.AssignmentManager">
            <summary>
            Object collection management engine that uses an assignment collection to wrap the objects internally.
            Provides automatic management for the collection items.
            Use <see cref="P:DlhSoft.Windows.Data.EntityManager.Items">Items</see> property to set your own assignment data item collection to manage and use <see cref="P:DlhSoft.Windows.Data.AssignmentManager.Assignments">Assignments</see> property to access the managed assignment collection mapping your items.
            It is recommended to set the data member properties: <see cref="P:DlhSoft.Windows.Data.AssignmentManager.ResourceItemMemberPath">ResourceItemMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.AssignmentManager.AllocationUnitsMemberPath">AllocationUnitsMemberPath</see>.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.AssignmentManager">AssignmentManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see> object.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentManager.#ctor(DlhSoft.Windows.Data.Task,DlhSoft.Windows.Data.DataManagementMode)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.AssignmentManager">AssignmentManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see> object.
            </summary>
            <param name="parentTask">Parent task that owns the <see cref="T:DlhSoft.Windows.Data.AssignmentManager">AssignmentManager</see> or null if the manager has no parent task.</param>
            <param name="dataManagementMode">Data management mode to use.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentManager.#ctor(DlhSoft.Windows.Data.Task,System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.SimpleAssignmentItem})">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.AssignmentManager">AssignmentManager</see> class using simple data management mode.
            </summary>
            <param name="parentTask">Parent task that owns the <see cref="T:DlhSoft.Windows.Data.AssignmentManager">AssignmentManager</see> or null if the manager has no parent task.</param>
            <param name="simpleAssignmentItems">Item definitions representing assignments to be initially added to the collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentManager.#ctor(DlhSoft.Windows.Data.Task,System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.AssignmentManager">AssignmentManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.AssignmentItem">AssignmentItem</see> object.
            </summary>
            <param name="parentTask">Parent task that owns the <see cref="T:DlhSoft.Windows.Data.AssignmentManager">AssignmentManager</see> or null if the manager has no parent task.</param>
            <param name="items">Collection of assignment items to be managed.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentManager.#ctor(DlhSoft.Windows.Data.Task,System.Collections.IEnumerable,System.String,System.String,DlhSoft.Windows.Data.EntityManager.Initialization,DlhSoft.Windows.Data.EntityManager.Initialization)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.AssignmentManager">AssignmentManager</see> class.
            </summary>
            <param name="parentTask">Parent task that owns the <see cref="T:DlhSoft.Windows.Data.AssignmentManager">AssignmentManager</see> or null if the manager has no parent task.</param>
            <param name="items">Collection of assignment items to be managed.</param>
            <param name="resourceItemMemberPath">Path to an <see cref="T:System.Object">Object</see> value on the source assignment item to serve as the assigned resource item, or null to indicate that the resource item is not provided by the source assignment item.</param>
            <param name="allocationUnitsMemberPath">Path to a <see cref="T:System.Double">Double</see> value on the source assignment item to serve as the assigned allocation units value, or null to indicate that the allocation units value is not provided by the source assignment item.</param>
            <param name="initialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.AssignmentManager">AssignmentManager</see> initializes.</param>
            <param name="disposingInitialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.AssignmentManager">AssignmentManager</see> is disposed.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentManager.CreateEntityCollection">
            <summary>
            Creates the internal assignment collection to be used as the assignment host of this <see cref="T:DlhSoft.Windows.Data.AssignmentManager">AssignmentManager</see>.
            </summary>
            <returns>The internal assignment collection to be used as the assignment host of this <see cref="T:DlhSoft.Windows.Data.AssignmentManager">AssignmentManager</see>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentManager.CreateReadOnlyEntityCollection(DlhSoft.Windows.Data.EntityCollection)">
            <summary>
            Creates the internal read-only assignment collection to be provided by this <see cref="T:DlhSoft.Windows.Data.AssignmentManager">AssignmentManager</see>.
            </summary>
            <returns>The internal read-only assignment collection to be provided by this <see cref="T:DlhSoft.Windows.Data.AssignmentManager">AssignmentManager</see>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentManager.InitializeEntityCollection(DlhSoft.Windows.Data.EntityCollection)">
            <summary>
            Sets up the read only assignment collection to be used for viewing assignment externally.
            </summary>
            <param name="entities">Internal assignment collection to be used as the source for the read only assignment collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentManager.CreateEntity(System.Object)">
            <summary>
            Creates a new assignment wrapping the specified object.
            </summary>
            <param name="item">Assignment item to be wrapped by the new assignment.</param>
            <returns>The new assignment that wraps the specified object.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentManager.CreateEntityFromSimpleItem(DlhSoft.Windows.Data.SimpleEntityItem)">
            <summary>
            Creates a new assignment for simple data management mode.
            </summary>
            <param name="entityItem">The entity item definition to use.</param>
            <returns>The new assignment.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentManager.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.SimpleAssignmentItem})">
            <summary>
            Inserts a set of assignments into the managed collection.
            </summary>
            <param name="index">The zero-based index at which the assignments should be inserted.</param>
            <param name="simpleAssignmentItems">Item definitions representing the assignments to insert.</param>
            <returns>The new assignments.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentManager.Insert(System.Int32,DlhSoft.Windows.Data.SimpleAssignmentItem)">
            <summary>
            Inserts an assignment into the managed collection.
            </summary>
            <param name="index">The zero-based index at which the assignment should be inserted.</param>
            <param name="simpleAssignmentItem">Item definition representing the assignment to insert.</param>
            <returns>The new assignment.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentManager.AddRange(System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.SimpleAssignmentItem})">
            <summary>
            Adds a set of assignments to the end of the managed collection.
            </summary>
            <param name="simpleAssignmentItems">Item definitions representing the assignments to be added at the end of the collection.</param>
            <returns>The new assignments.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentManager.Add(DlhSoft.Windows.Data.SimpleAssignmentItem)">
            <summary>
            Adds an assignment to the end of the managed collection.
            </summary>
            <param name="simpleAssignmentItem">Item definition representing the assignment to be added at the end of the collection.</param>
            <returns>The new assignment.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentManager.RemoveRange(System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.Assignment})">
            <summary>
            Removes specific assignments from the managed collection.
            </summary>
            <param name="assignments">The assignments to remove from the collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentManager.Remove(DlhSoft.Windows.Data.Assignment)">
            <summary>
            Removes a specific assignment from the managed collection.
            </summary>
            <param name="assignment">The assignment to remove from the collection.</param>
        </member>
        <member name="F:DlhSoft.Windows.Data.AssignmentManager.AssignmentsProperty">
            <summary>
            Identifies the Assignments dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.AssignmentManager.ResourceItemMemberPathProperty">
            <summary>
            Identifies the ResourceItemMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentManager.OnResourceItemMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.AssignmentManager.ResourceItemMemberPath">ResourceItemMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.AssignmentManager.AllocationUnitsMemberPathProperty">
            <summary>
            Identifies the AllocationUnitsMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentManager.OnAllocationUnitsMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.AssignmentManager.AllocationUnitsMemberPath">AllocationUnitsMemberPath</see> property changes.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentManager.GetAssignment(System.Object)">
            <summary>
            Gets the assignment that wraps the specified object from the internal assignment collection, or null if such assignment doesn't exist.
            </summary>
            <param name="item">Wrapped object to search for.</param>
            <returns>The assignment that wraps the specified object from the internal assignment collection, or null if such assignment doesn't exist.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentManager.GetAssignmentAt(System.Int32)">
            <summary>
            Gets the assignment at the specified index from the internal assignment collection.
            </summary>
            <param name="index">The zero-based index of the assignment to be get.</param>
            <returns>The assignment at the specified index from the internal assignment collection.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentManager.OnInitializeEntitiesCompleting(System.Int32,System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.Entity})">
            <summary>
            Executed when the managed assignments are initialized.
            <param name="index">The initial index of the assignments.</param>
            <param name="entities">The initialized assignments.</param>
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.AssignmentManager.OnInitializeEntitiesCompleted">
            <summary>
            Executed after the managed assignments are initialized.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.AssignmentManager.ParentTask">
            <summary>
            Gets the parent <see cref="T:DlhSoft.Windows.Data.Task">Task</see> that owns this <see cref="T:DlhSoft.Windows.Data.AssignmentManager">AssignmentManager</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.AssignmentManager.Assignments">
            <summary>
            Gets the read-only assignment collection wrapping the objects that are currently managed.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.AssignmentManager.ResourceItemMemberPath">
            <summary>
            Gets or sets the path to an <see cref="T:System.Object">Object</see> value on the source assignment item to serve as the assigned resource item, or null to indicate that the resource item is not provided by the source assignment item.
            You can use a <see cref="T:DlhSoft.Windows.Data.ResourceItem">ResourceItem</see> object as the assigned resource item.
            It is recommended to set this property.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.AssignmentManager.AllocationUnitsMemberPath">
            <summary>
            Gets or sets the path to a <see cref="T:System.Double">Double</see> value on the source assignment item to serve as the assigned allocation units value, or null to indicate that the allocation units value is not provided by the source assignment item.
            The assigned allocation units value represents the percent of the resource availability to consider for the assignment, and it can be used when determining the resource availability for a specific time interval.
            It is recommended to set this property.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.AssignmentManager.Item(System.Object)">
            <summary>
            Gets the assignment that wraps the specified object from the internal assignment collection, or null if such assignment doesn't exist.
            </summary>
            <param name="item">Wrapped object to search for.</param>
            <returns>The assignment that wraps the specified object from the internal assignment collection, or null if such assignment doesn't exist.</returns>
        </member>
        <member name="T:DlhSoft.Windows.Data.DependencyType">
            <summary>
            Represents the dependency type of a task predecessor.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.DependencyType.FinishStart">
            <summary>
            Indicates that the current task starts when the predecessor task finishes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.DependencyType.StartStart">
            <summary>
            Indicates that the current task starts when the predecessor task starts.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.DependencyType.FinishFinish">
            <summary>
            Indicates that the current task finishes when the predecessor task finishes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.DependencyType.StartFinish">
            <summary>
            Indicates that the current task finishes when the predecessor task starts.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.DependencyType.None">
            <summary>
            Indicates that the current task start and finish do not depend on the predecessor task start or finish.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.PredecessorItem">
            <summary>
            Represents a predecessor item aware of its task, dependency type, and lag that can be used as a source object to be wrapped within a <see cref="T:DlhSoft.Windows.Data.Predecessor">Predecessor</see> and managed using a <see cref="T:DlhSoft.Windows.Data.PredecessorManager">PredecessorManager</see>.
            It is recommended to set at least these data properties: <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            These data properties can also be set: <see cref="P:DlhSoft.Windows.Data.PredecessorItem.DependencyType">DependencyType</see>, <see cref="P:DlhSoft.Windows.Data.PredecessorItem.Lag">Lag</see>.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see> class.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorItem.#ctor(System.Object,DlhSoft.Windows.Data.DependencyType)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see> class.
            </summary>
            <param name="taskItem">Task item of this <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see>.</param>
            <param name="dependencyType">Dependency type of this <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see>.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorItem.#ctor(System.Object,DlhSoft.Windows.Data.DependencyType,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see> class.
            </summary>
            <param name="taskItem">Task item of this <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see>.</param>
            <param name="dependencyType">Dependency type of this <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see>.</param>
            <param name="lag">Lag of this <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see>.</param>
        </member>
        <member name="F:DlhSoft.Windows.Data.PredecessorItem.TaskItemProperty">
            <summary>
            Identifies the TaskItem dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.PredecessorItem.DependencyTypeProperty">
            <summary>
            Identifies the DependencyType dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.PredecessorItem.LagProperty">
            <summary>
            Identifies the Lag dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.PredecessorItem.TaskItem">
            <summary>
            Gets or sets the task item of this <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see>.
            Predecessor task item indicates the task that the current task depends on. You can use a <see cref="P:DlhSoft.Windows.Data.PredecessorItem.TaskItem">TaskItem</see> object as the task item.
            It is recommended to set this property.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.PredecessorItem.DlhSoft#Windows#Data#IPredecessorItem#TaskItem">
            <summary>
            Gets or sets the task item of this <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see>.
            When setting this property you must use an <see cref="T:DlhSoft.Windows.Data.ITaskItem">ITaskItem</see> object.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.PredecessorItem.DependencyType">
            <summary>
            Gets or sets the dependency type of this <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see>.
            Predecessor dependency type indicates how the current task depends on the predecessor task.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.PredecessorItem.Lag">
            <summary>
            Gets or sets the lag of this <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see>.
            Predecessor lag indicates when the current task depends on the predecessor task. If lag is zero the dependency is applied at the appropriate time. If lag is positive the dependency is applied so that there will be an exclusion interval between the tasks. If lag is negative the dependency is applied so that there will be an intersection interval between the tasks.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.TimeOfDayScheduleDefinitionInfo">
            <summary>
            Represents structured time of day schedule definition information computed based on the definition string within a <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see>.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDayScheduleDefinitionInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TimeOfDayScheduleDefinitionInfo">TimeOfDayScheduleDefinitionInfo</see> class.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDayScheduleDefinitionInfo.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TimeOfDayScheduleDefinitionInfo.OnChanged">
            <summary>
            Raises the Changed event.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TimeOfDayScheduleDefinitionInfo.Start">
            <summary>
            Gets the start time of day of the scheduled time interval.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TimeOfDayScheduleDefinitionInfo.Finish">
            <summary>
            Gets the finish time of day of the scheduled time interval.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.TimeOfDayScheduleDefinitionInfo.Duration">
            <summary>
            Gets the duration of the current time of day interval.
            </summary>
        </member>
        <member name="E:DlhSoft.Windows.Data.TimeOfDayScheduleDefinitionInfo.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:DlhSoft.Windows.Data.TimeOfDayScheduleDefinitionInfo.Changed">
            <summary>
            Occurs when a property value of this object or of a contained object changes.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.SimpleAssignmentItem">
            <summary>
            Represents a simple assignment item that can be used as a data definition object when inserting or adding an <see cref="T:DlhSoft.Windows.Data.Assignment">Assignment</see> using an <see cref="T:DlhSoft.Windows.Data.AssignmentManager">AssignmentManager</see> with simple data management mode.
            It is recommended to set these data properties: <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see>, <see cref="P:DlhSoft.Windows.Data.SimpleAssignmentItem.AllocationUnits">AllocationUnits</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.SimpleAssignmentItem.ResourceItem">
            <summary>
            Gets or sets the resource item of this <see cref="T:DlhSoft.Windows.Data.SimpleAssignmentItem">SimpleAssignmentItem</see>.
            You can use a <see cref="T:DlhSoft.Windows.Data.SimpleResourceItem">SimpleResourceItem</see> object as the resource item.
            It is recommended to set this property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.SimpleAssignmentItem.DlhSoft#Windows#Data#IAssignmentItem#ResourceItem">
            <summary>
            Gets or sets the resource item of this <see cref="T:DlhSoft.Windows.Data.SimpleAssignmentItem">SimpleAssignmentItem</see>.
            When setting this property you must use an <see cref="T:DlhSoft.Windows.Data.IResourceItem">IResourceItem</see> object.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.SimpleAssignmentItem.AllocationUnits">
            <summary>
            Gets or sets the allocation units value of this <see cref="T:DlhSoft.Windows.Data.SimpleAssignmentItem">SimpleAssignmentItem</see>.
            The allocation units value represents the percent of the resource availability to consider for the assignment, and it can be used when determining the resource availability for a specific time interval.
            It is recommended to set this property.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.ScheduleDefinitionStrings">
            <summary>
            Schedule definition string provider.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionStrings.GetDefinitionString(DlhSoft.Windows.Data.Schedule)">
            <summary>
            Returns the definition string for a built in schedule object.
            </summary>
            <param name="schedule">Built in schedule object to return the definition string for. Can be <see cref="P:DlhSoft.Windows.Data.Schedule.Standard">Schedule.Standard</see> or <see cref="P:DlhSoft.Windows.Data.Schedule.Continuous">Schedule.Continuous</see>.</param>
            <returns>The definition string for the specified built in schedule object.</returns>
        </member>
        <member name="T:DlhSoft.Windows.Data.ResourceItem">
            <summary>
            Represents a resource item aware of its schedule and costs that can be used as a source object to be wrapped within an <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see> and managed using a <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see>.
            It is recommended to set at least these data properties: <see cref="P:DlhSoft.Windows.Data.EntityItem.Content">Content</see>.
            These data properties can also be set: <see cref="P:DlhSoft.Windows.Data.ResourceItem.Schedule">Schedule</see>, <see cref="P:DlhSoft.Windows.Data.ResourceItem.CostPerUsage">CostPerUsage</see>, <see cref="P:DlhSoft.Windows.Data.ResourceItem.CostPerHour">CostPerHour</see>.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ResourceItem">ResourceItem</see> class.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceItem.#ctor(System.Object,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ResourceItem">ResourceItem</see> class.
            </summary>
            <param name="content">Content of this <see cref="T:DlhSoft.Windows.Data.ResourceItem">ResourceItem</see>.</param>
            <param name="costPerHour">Cost per hour of this <see cref="T:DlhSoft.Windows.Data.ResourceItem">ResourceItem</see>.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceItem.#ctor(System.Object,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ResourceItem">ResourceItem</see> class.
            </summary>
            <param name="content">Content of this <see cref="T:DlhSoft.Windows.Data.ResourceItem">ResourceItem</see>.</param>
            <param name="costPerUsage">Cost per usage of this <see cref="T:DlhSoft.Windows.Data.ResourceItem">ResourceItem</see>.</param>
            <param name="costPerHour">Cost per hour of this <see cref="T:DlhSoft.Windows.Data.ResourceItem">ResourceItem</see>.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceItem.#ctor(System.Object,DlhSoft.Windows.Data.Schedule,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ResourceItem">ResourceItem</see> class.
            </summary>
            <param name="content">Content of this <see cref="T:DlhSoft.Windows.Data.ResourceItem">ResourceItem</see>.</param>
            <param name="schedule">Schedule of this <see cref="T:DlhSoft.Windows.Data.ResourceItem">ResourceItem</see>.</param>
            <param name="costPerUsage">Cost per usage of this <see cref="T:DlhSoft.Windows.Data.ResourceItem">ResourceItem</see>.</param>
            <param name="costPerHour">Cost per hour of this <see cref="T:DlhSoft.Windows.Data.ResourceItem">ResourceItem</see>.</param>
        </member>
        <member name="F:DlhSoft.Windows.Data.ResourceItem.ScheduleProperty">
            <summary>
            Identifies the Schedule dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.ResourceItem.CostPerUsageProperty">
            <summary>
            Identifies the CostPerUsage dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.ResourceItem.CostPerHourProperty">
            <summary>
            Identifies the CostPerHour dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ResourceItem.Schedule">
            <summary>
            Gets or sets the schedule of this <see cref="T:DlhSoft.Windows.Data.ResourceItem">ResourceItem</see>.
            The resource schedule indicates the time intervals of a day that the resource can use as work time for achieving completion of a task, restricting the task schedule further. If the resource schedule is not set it means that the resource can use any time interval as work time, and the task schedule is not restricted.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ResourceItem.CostPerUsage">
            <summary>
            Gets or sets the cost per usage of this <see cref="T:DlhSoft.Windows.Data.ResourceItem">ResourceItem</see>.
            The resource cost per usage is applied when computing a task cost, one time for each assignment, without considering the task duration or the assigned allocation units.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ResourceItem.CostPerHour">
            <summary>
            Gets or sets the cost per hour of this <see cref="T:DlhSoft.Windows.Data.ResourceItem">ResourceItem</see>.
            The resource cost per hour is applied when computing a task cost, proportionally for each assignment, considering the task duration and the assigned allocation units.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.ScheduleDefinitionCollection">
            <summary>
            Observable collection that owns <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see> objects used internally by a <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionManager">ScheduleDefinitionManager</see>.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionCollection.#ctor(DlhSoft.Windows.Data.ScheduleDefinitionManager)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionCollection">ScheduleDefinitionCollection</see> class.
            </summary>
            <param name="parentManager">The parent manager of the collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionCollection.InsertItem(System.Int32,DlhSoft.Windows.Data.Entity)">
            <summary>
            Inserts a schedule definition to the collection at the specified index and sets it as owned by this <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionCollection">ScheduleDefinitionCollection</see>.
            </summary>
            <param name="index">The zero-based index at which the schedule definition should be inserted.</param>
            <param name="entity">The schedule definition to insert.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the schedule definition at the specified index of the collection and sets it as not owned by this <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionCollection">ScheduleDefinitionCollection</see>.
            </summary>
            <param name="index">The zero-based index of the schedule definition to remove.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionCollection.GetScheduleDefinition(System.Object)">
            <summary>
            Gets the schedule definition that wraps the specified object, or null if such schedule definition doesn't exist.
            </summary>
            <param name="item">Wrapped object to search for.</param>
            <returns>The schedule definition that wraps the specified object, or null if such schedule definition doesn't exist.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionCollection.GetScheduleDefinitionAt(System.Int32)">
            <summary>
            Gets the schedule definition at the specified index.
            </summary>
            <param name="index">The zero-based index of the schedule definition to be get.</param>
            <returns>The schedule definition at the specified index.</returns>
        </member>
        <member name="P:DlhSoft.Windows.Data.ScheduleDefinitionCollection.Item(System.Int32)">
            <summary>
            Gets the schedule definition at the specified index.
            </summary>
            <param name="index">The zero-based index of the schedule definition to be get.</param>
            <returns>The schedule definition at the specified index.</returns>
        </member>
        <member name="P:DlhSoft.Windows.Data.ScheduleDefinitionCollection.ParentManager">
            <summary>
            Gets the parent manager of this collection.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.Allocation">
            <summary>
            Represents a resource allocation, defined by a specified time interval, units value, and by a value that indicates whether the resource is available for the assignments.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Allocation.#ctor(DlhSoft.Windows.Data.Resource,DlhSoft.Windows.Data.TimeInterval,System.Double,System.Double,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.Allocation">Allocation</see> class.
            </summary>
            <param name="resource">The allocated resource.</param>
            <param name="timeInterval">Time interval of the allocation.</param>
            <param name="units">Units value of the allocation.</param>
            <param name="completedEffortUnits">Completed effort units value of the allocation.</param>
            <param name="isAvailable">A value that indicates whether the resource is available for the assignments.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.Allocation.Equals(DlhSoft.Windows.Data.Allocation)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified <see cref="T:DlhSoft.Windows.Data.Allocation">Allocation</see> instance.
            </summary>
            <param name="other">An <see cref="T:DlhSoft.Windows.Data.Allocation">Allocation</see> to compare to this instance.</param>
            <returns>True if the current object is equal to the other parameter; otherwise, false.</returns>
        </member>
        <member name="P:DlhSoft.Windows.Data.Allocation.Resource">
            <summary>
            Gets the allocated resource.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Allocation.TimeInterval">
            <summary>
            Gets or sets the time interval of the <see cref="T:DlhSoft.Windows.Data.Allocation">Allocation</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Allocation.Units">
            <summary>
            Gets or sets the units value of the <see cref="T:DlhSoft.Windows.Data.Allocation">Allocation</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Allocation.CompletedEffortUnits">
            <summary>
            Gets or sets the completed effort units value of the <see cref="T:DlhSoft.Windows.Data.Allocation">Allocation</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Allocation.IsAvailable">
            <summary>
            Gets or sets a value that indicates whether the resource is available for the assignments of the <see cref="T:DlhSoft.Windows.Data.Allocation">Allocation</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Allocation.IsNormalAllocation">
            <summary>
            Gets a value indicating whether this is a normal allocation.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Allocation.IsOverAllocation">
            <summary>
            Gets a value indicating whether this is an over allocation.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Allocation.IsUnderAllocation">
            <summary>
            Gets a value indicating whether this is an under allocation.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Allocation.IsEmptyAllocation">
            <summary>
            Gets a value indicating whether this is an empty allocation.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Allocation.ExcessUnits">
            <summary>
            Gets the excess units value when this is an over allocation.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.Date">
            <summary>
            Represents a day, typically expressed as a date.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.Date">Date</see> structure.
            </summary>
            <param name="date">The date to use expressed as a date and time value. The time information from the date and time value is ignored.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.ToDateTime">
            <summary>
            Returns a date time value based on the current date value, having no time information.
            </summary>
            <returns>A date time value based on the current date value, having no time information.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.op_Implicit(DlhSoft.Windows.Data.Date)~System.DateTime">
            <summary>
            Casts a date value to a date and time value.
            </summary>
            <param name="date">Date value to cast.</param>
            <returns>Casted date and time value.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.op_Implicit(System.DateTime)~DlhSoft.Windows.Data.Date">
            <summary>
            Casts a date and time value to a date value.
            </summary>
            <param name="date">Date and time value to cast.</param>
            <returns>Casted date value.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.Date">Date</see> structure to the specified year, month, and day.
            </summary>
            <param name="year">The year (1 through 9999).</param>
            <param name="month">The month (1 through 12).</param>
            <param name="day">The day (1 through the number of days in <paramref name="month"/>).</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.#ctor(System.Int32,System.Int32,System.Int32,System.Globalization.Calendar)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.Date">Date</see> structure to the specified year, month, and day for the specified calendar.
            </summary>
            <param name="year">The year (1 through the number of years in <paramref name="calendar"/>).</param>
            <param name="month">The month (1 through the number of months in <paramref name="calendar"/>).</param>
            <param name="day">The day (1 through the number of days in <paramref name="month"/>).</param>
            <param name="calendar">The <see cref="T:System.Globalization.Calendar">Calendar</see> that applies to this <see cref="T:DlhSoft.Windows.Data.Date">Date</see>.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.Add(System.TimeSpan)">
            <summary>
            Adds the value of the specified <see cref="T:System.TimeSpan">TimeSpan</see> to the value of this instance.
            </summary>
            <param name="value">A <see cref="T:System.TimeSpan">TimeSpan</see> that contains the interval to add.</param>
            <returns>A <see cref="T:System.DateTime">DateTime</see> whose value is the sum of the date represented by this instance and the time interval represented by <paramref name="value"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.AddDays(System.Double)">
            <summary>
            Adds the specified number of days to the value of this instance.
            </summary>
            <param name="value">A number of whole and fractional days. The <paramref name="value"/> parameter can be negative or positive.</param>
            <returns>A <see cref="T:System.DateTime">DateTime</see> whose value is the sum of the date represented by this instance and the number of days represented by <paramref name="value"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.AddHours(System.Double)">
            <summary>
            Adds the specified number of hours to the value of this instance.
            </summary>
            <param name="value">A number of whole and fractional hours. The <paramref name="value"/> parameter can be negative or positive.</param>
            <returns>A <see cref="T:System.DateTime">DateTime</see> whose value is the sum of the date represented by this instance and the number of hours represented by <paramref name="value"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.AddMilliseconds(System.Double)">
            <summary>
            Adds the specified number of milliseconds to the value of this instance.
            </summary>
            <param name="value">A number of whole and fractional milliseconds. The <paramref name="value"/> parameter can be negative or positive. Note that this value is rounded to the nearest integer.</param>
            <returns>A <see cref="T:System.DateTime">DateTime</see> whose value is the sum of the date represented by this instance and the number of milliseconds represented by <paramref name="value"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.AddMinutes(System.Double)">
            <summary>
            Adds the specified number of minutes to the value of this instance.
            </summary>
            <param name="value">A number of whole and fractional minutes. The <paramref name="value"/> parameter can be negative or positive.</param>
            <returns>A <see cref="T:System.DateTime">DateTime</see> whose value is the sum of the date represented by this instance and the number of minutes represented by <paramref name="value"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.AddMonths(System.Int32)">
            <summary>
            Adds the specified number of months to the value of this instance.
            </summary>
            <param name="value">A number of months. The <paramref name="value"/> parameter can be negative or positive.</param>
            <returns>A <see cref="T:System.DateTime">DateTime</see> whose value is the sum of the date represented by this instance and the number of months represented by <paramref name="value"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.AddSeconds(System.Double)">
            <summary>
            Adds the specified number of seconds to the value of this instance.
            </summary>
            <param name="value">A number of whole and fractional seconds. The <paramref name="value"/> parameter can be negative or positive.</param>
            <returns>A <see cref="T:System.DateTime">DateTime</see> whose value is the sum of the date represented by this instance and the number of seconds represented by <paramref name="value"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.AddTicks(System.Int64)">
            <summary>
            Adds the specified number of ticks to the value of this instance.
            </summary>
            <param name="value">A number of 100-nanosecond ticks. The value parameter can be positive or negative.</param>
            <returns>A <see cref="T:System.DateTime">DateTime</see> whose value is the sum of the date represented by this instance and the time represented by <paramref name="value"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.AddYears(System.Int32)">
            <summary>
            Adds the specified number of years to the value of this instance.
            </summary>
            <param name="value">A number of years. The <paramref name="value"/> parameter can be negative or positive.</param>
            <returns>A <see cref="T:System.DateTime">DateTime</see> whose value is the sum of the date represented by this instance and the number of years represented by <paramref name="value"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.Compare(DlhSoft.Windows.Data.Date,DlhSoft.Windows.Data.Date)">
            <summary>
            Compares two instances of <see cref="T:DlhSoft.Windows.Data.Date">Date</see> and returns an indication of their relative values.
            </summary>
            <param name="d1">The first <see cref="T:DlhSoft.Windows.Data.Date">Date</see> instance.</param>
            <param name="d2">The second <see cref="T:DlhSoft.Windows.Data.Date">Date</see> instance.</param>
            <returns>A signed number indicating the relative values of <paramref name="d1"/> and <paramref name="d2"/>: less than zero indicates that <paramref name="d1"/> is less than <paramref name="d2"/>, zero indicates that <paramref name="d1"/> equals <paramref name="d2"/>, greater than zero indicates that <paramref name="d1"/> is greater than <paramref name="d2"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.CompareTo(DlhSoft.Windows.Data.Date)">
            <summary>
            Compares the value of this instance to a specified <see cref="T:DlhSoft.Windows.Data.Date">Date</see> value and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:DlhSoft.Windows.Data.Date">Date</see> value.
            </summary>
            <param name="value">A <see cref="T:DlhSoft.Windows.Data.Date">Date</see> object to compare.</param>
            <returns>A signed number indicating the relative values of this instance and the value parameter: : less than zero indicates that this instance is earlier than <paramref name="value"/>, zero indicates that this instance is the same as <paramref name="value"/>, greater than zero indicates that this instance is later than <paramref name="value"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.CompareTo(System.Object)">
            <summary>
            Compares the value of this instance to a specified object that contains a specified <see cref="T:DlhSoft.Windows.Data.Date">Date</see> or <see cref="T:System.DateTime">DateTime</see> value, and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <see cref="T:DlhSoft.Windows.Data.Date">Date</see> or <see cref="T:System.DateTime">DateTime</see> value.
            </summary>
            <param name="value">A boxed <see cref="T:DlhSoft.Windows.Data.Date">Date</see> or <see cref="T:System.DateTime">DateTime</see> object to compare, or <c>null</c> reference (<c>Nothing</c> in Visual Basic).</param>
            <returns>A signed number indicating the relative values of this instance and the value parameter: less than zero indicates that this instance is earlier than <paramref name="value"/>, zero indicates that this instance is the same as <paramref name="value"/>, greater than zero indicates that this instance is later than <paramref name="value"/>, or <paramref name="value"/> is a <c>null</c> reference (<c>Nothing</c> in Visual Basic).</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.DaysInMonth(System.Int32,System.Int32)">
            <summary>
            Returns the number of days in the specified month and year.
            </summary>
            <param name="year">The year.</param>
            <param name="month">The month (a number ranging from 1 to 12).</param>
            <returns>The number of days in <paramref name="month"/> for the specified <paramref name="year"/>. For example, if <paramref name="month"/> equals 2 for February, the return value is 28 or 29 depending upon whether <paramref name="year"/> is a leap year.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.Equals(DlhSoft.Windows.Data.Date)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified <see cref="T:DlhSoft.Windows.Data.Date">Date</see> instance.
            </summary>
            <param name="value">A <see cref="T:DlhSoft.Windows.Data.Date">Date</see> instance to compare to this instance.</param>
            <returns><c>true</c> if the value parameter equals the value of this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="value">An object to compare to this instance.</param>
            <returns><c>true</c> if the value parameter is an instance of <see cref="T:DlhSoft.Windows.Data.Date">Date</see> or <see cref="T:System.DateTime">DateTime</see> and equals the value of this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.Equals(DlhSoft.Windows.Data.Date,DlhSoft.Windows.Data.Date)">
            <summary>
            Returns a value indicating whether two instances of <see cref="T:DlhSoft.Windows.Data.Date">Date</see> are equal.
            </summary>
            <param name="d1">The first <see cref="T:DlhSoft.Windows.Data.Date">Date</see> instance.</param>
            <param name="d2">The second <see cref="T:DlhSoft.Windows.Data.Date">Date</see> instance.</param>
            <returns><c>true</c> if the two <see cref="T:DlhSoft.Windows.Data.Date">Date</see> values are equal; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A hash code for the current <see cref="T:DlhSoft.Windows.Data.Date">Date</see>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.IsLeapYear(System.Int32)">
            <summary>
            Returns an indication whether the specified year is a leap year.
            </summary>
            <param name="year">A 4-digit year.</param>
            <returns><c>true</c> if year is a leap year; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.Parse(System.String)">
            <summary>
            Converts the specified string representation of a date to its <see cref="T:DlhSoft.Windows.Data.Date">Date</see> equivalent.
            </summary>
            <param name="s">A string containing a date to convert.</param>
            <returns>A <see cref="T:DlhSoft.Windows.Data.Date">Date</see> equivalent to the date contained in <paramref name="s"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.Parse(System.String,System.IFormatProvider)">
            <summary>
            Converts the specified string representation of a date to its <see cref="T:DlhSoft.Windows.Data.Date">Date</see> equivalent using the specified culture-specific format information.
            </summary>
            <param name="s">A string containing a date to convert.</param>
            <param name="provider">An <see cref="T:System.IFormatProvider">IFormatProvider</see> that supplies culture-specific format information about <paramref name="s"/>s.</param>
            <returns>A <see cref="T:DlhSoft.Windows.Data.Date">Date</see> equivalent to the date contained in <paramref name="s"/> as specified by <paramref name="provider"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
            <summary>
            Converts the specified string representation of a date to its <see cref="T:DlhSoft.Windows.Data.Date">Date</see> equivalent using the specified culture-specific format information and formatting style.
            </summary>
            <param name="s">A string containing a date to convert.</param>
            <param name="provider">An <see cref="T:System.IFormatProvider">IFormatProvider</see> that supplies culture-specific format information about <paramref name="s"/>s.</param>
            <param name="styles">A bitwise combination of <see cref="T:System.Globalization.DateTimeStyles">DateTimeStyles</see> values that indicates the permitted format of <paramref name="s"/>. A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None">None</see>.</param>
            <returns>A <see cref="T:DlhSoft.Windows.Data.Date">Date</see> equivalent to the date contained in <paramref name="s"/> as specified by <paramref name="provider"/> and <paramref name="styles"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.ParseExact(System.String,System.String,System.IFormatProvider)">
            <summary>
            Converts the specified string representation of a date to its <see cref="T:DlhSoft.Windows.Data.Date">Date</see> equivalent using the specified format and culture-specific format information. The format of the string representation must match the specified format exactly.
            </summary>
            <param name="s">A string containing a date to convert.</param>
            <param name="format">The expected format of <paramref name="s"/>.</param>
            <param name="provider">An <see cref="T:System.IFormatProvider">IFormatProvider</see> that supplies culture-specific format information about <paramref name="s"/>s.</param>
            <returns>A <see cref="T:DlhSoft.Windows.Data.Date">Date</see> equivalent to the date contained in <paramref name="s"/> as specified by <paramref name="format"/> and <paramref name="provider"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)">
            <summary>
            Converts the specified string representation of a date to its <see cref="T:DlhSoft.Windows.Data.Date">Date</see> equivalent using the specified format, culture-specific format information, and formatting style. The format of the string representation must match the specified format exactly.
            </summary>
            <param name="s">A string containing a date to convert.</param>
            <param name="format">The expected format of <paramref name="s"/>.</param>
            <param name="provider">An <see cref="T:System.IFormatProvider">IFormatProvider</see> that supplies culture-specific format information about <paramref name="s"/>s.</param>
            <param name="styles">A bitwise combination of <see cref="T:System.Globalization.DateTimeStyles">DateTimeStyles</see> values that indicates the permitted format of <paramref name="s"/>. A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None">None</see>.</param>
            <returns>A <see cref="T:DlhSoft.Windows.Data.Date">Date</see> equivalent to the date contained in <paramref name="s"/> as specified by <paramref name="format"/>, <paramref name="provider"/>, and <paramref name="styles"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)">
            <summary>
            Converts the specified string representation of a date to its <see cref="T:DlhSoft.Windows.Data.Date">Date</see> equivalent using the specified array of formats, culture-specific format information, and formatting style. The format of the string representation must match at least one of the specified formats exactly.
            </summary>
            <param name="s">A string containing a date to convert.</param>
            <param name="formats">An array of expected formats of <paramref name="s"/>.</param>
            <param name="provider">An <see cref="T:System.IFormatProvider">IFormatProvider</see> that supplies culture-specific format information about <paramref name="s"/>s.</param>
            <param name="styles">A bitwise combination of <see cref="T:System.Globalization.DateTimeStyles">DateTimeStyles</see> values that indicates the permitted format of <paramref name="s"/>. A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None">None</see>.</param>
            <returns>A <see cref="T:DlhSoft.Windows.Data.Date">Date</see> equivalent to the date contained in <paramref name="s"/> as specified by <paramref name="formats"/>, <paramref name="provider"/>, and <paramref name="styles"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.Subtract(System.TimeSpan)">
            <summary>
            Subtracts the specified duration from this instance.
            </summary>
            <param name="value">An instance of <see cref="T:System.TimeSpan">TimeSpan</see>.</param>
            <returns>A <see cref="T:System.DateTime">DateTime</see> equal to the date represented by this instance minus the time interval represented by <paramref name="value"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.Subtract(System.DateTime)">
            <summary>
            Subtracts the specified date and time from this instance.
            </summary>
            <param name="value">An instance of <see cref="T:System.DateTime">DateTime</see>.</param>
            <returns>A <see cref="T:System.TimeSpan">TimeSpan</see> interval equal to the date represented by this instance minus the date and time represented by <paramref name="value"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.ToLongDateString">
            <summary>
            Converts the value of the current <see cref="T:DlhSoft.Windows.Data.Date">Date</see> object to its equivalent long date string representation.
            </summary>
            <returns>A string that contains the long date string representation of the current <see cref="T:DlhSoft.Windows.Data.Date">Date</see> object.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.ToShortDateString">
            <summary>
            Converts the value of the current <see cref="T:DlhSoft.Windows.Data.Date">Date</see> object to its equivalent short date string representation.
            </summary>
            <returns>A string that contains the short date string representation of the current <see cref="T:DlhSoft.Windows.Data.Date">Date</see> object.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.ToString">
            <summary>
            Converts the value of the current <see cref="T:DlhSoft.Windows.Data.Date">Date</see> object to its equivalent string representation.
            </summary>
            <returns>A string representation of the value of the current <see cref="T:DlhSoft.Windows.Data.Date">Date</see> object.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.ToString(System.IFormatProvider)">
            <summary>
            Converts the value of the current <see cref="T:DlhSoft.Windows.Data.Date">Date</see> object to its equivalent string representation using the specified culture-specific format information.
            </summary>
            <param name="provider">An <see cref="T:System.IFormatProvider">IFormatProvider</see> that supplies culture-specific formatting information.</param>
            <returns>A string representation of value of the current <see cref="T:DlhSoft.Windows.Data.Date">Date</see> object as specified by <paramref name="provider"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.ToString(System.String)">
            <summary>
            Converts the value of the current <see cref="T:DlhSoft.Windows.Data.Date">Date</see> object to its equivalent string representation using the specified format.
            </summary>
            <param name="format">A DateTime format string.</param>
            <returns>A string representation of value of the current <see cref="T:DlhSoft.Windows.Data.Date">Date</see> object as specified by <paramref name="format"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts the value of the current <see cref="T:DlhSoft.Windows.Data.Date">Date</see> object to its equivalent string representation using the specified format and culture-specific format information.
            </summary>
            <param name="format">A DateTime format string.</param>
            <param name="provider">An <see cref="T:System.IFormatProvider">IFormatProvider</see> that supplies culture-specific formatting information.</param>
            <returns>A string representation of value of the current <see cref="T:DlhSoft.Windows.Data.Date">Date</see> object as specified by <paramref name="format"/> and <paramref name="provider"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.TryParse(System.String,DlhSoft.Windows.Data.Date@)">
            <summary>
            Converts the specified string representation of a date to its <see cref="T:DlhSoft.Windows.Data.Date">Date</see> equivalent.
            </summary>
            <param name="s">A string containing a date to convert.</param>
            <param name="result">When this method returns, contains the <see cref="T:DlhSoft.Windows.Data.Date">Date</see> value equivalent to the date contained in <paramref name="s"/>, if the conversion succeeded, or <see cref="F:DlhSoft.Windows.Data.Date.MinValue">MinValue</see> if the conversion failed. The conversion fails if the <paramref name="s"/> parameter is a <c>null</c> reference (<c>Nothing</c> in Visual Basic), or does not contain a valid string representation of a date. This parameter is passed uninitialized.</param>
            <returns><c>true</c> if the <paramref name="s"/> parameter was converted successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,DlhSoft.Windows.Data.Date@)">
            <summary>
            Converts the specified string representation of a date to its <see cref="T:DlhSoft.Windows.Data.Date">Date</see> equivalent using the specified culture-specific format information and formatting style.
            </summary>
            <param name="s">A string containing a date to convert.</param>
            <param name="provider">An <see cref="T:System.IFormatProvider">IFormatProvider</see> that supplies culture-specific format information about <paramref name="s"/>s.</param>
            <param name="styles">A bitwise combination of <see cref="T:System.Globalization.DateTimeStyles">DateTimeStyles</see> values that indicates the permitted format of <paramref name="s"/>. A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None">None</see>.</param>
            <param name="result">When this method returns, contains the <see cref="T:DlhSoft.Windows.Data.Date">Date</see> value equivalent to the date contained in <paramref name="s"/>, if the conversion succeeded, or <see cref="F:DlhSoft.Windows.Data.Date.MinValue">MinValue</see> if the conversion failed. The conversion fails if the <paramref name="s"/> parameter is a <c>null</c> reference (<c>Nothing</c> in Visual Basic), or does not contain a valid string representation of a date. This parameter is passed uninitialized.</param>
            <returns><c>true</c> if the <paramref name="s"/> parameter was converted successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,DlhSoft.Windows.Data.Date@)">
            <summary>
            Converts the specified string representation of a date to its <see cref="T:DlhSoft.Windows.Data.Date">Date</see> equivalent using the specified format, culture-specific format information, and formatting style. The format of the string representation must match the specified format exactly.
            </summary>
            <param name="s">A string containing a date to convert.</param>
            <param name="format">The expected format of <paramref name="s"/>.</param>
            <param name="provider">An <see cref="T:System.IFormatProvider">IFormatProvider</see> that supplies culture-specific format information about <paramref name="s"/>s.</param>
            <param name="styles">A bitwise combination of <see cref="T:System.Globalization.DateTimeStyles">DateTimeStyles</see> values that indicates the permitted format of <paramref name="s"/>. A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None">None</see>.</param>
            <param name="result">When this method returns, contains the <see cref="T:DlhSoft.Windows.Data.Date">Date</see> value equivalent to the date contained in <paramref name="s"/>, if the conversion succeeded, or <see cref="F:DlhSoft.Windows.Data.Date.MinValue">MinValue</see> if the conversion failed. The conversion fails if either the <paramref name="s"/> or <paramref name="format"/> is a <c>null</c> reference (<c>Nothing</c> in Visual Basic), <paramref name="s"/> or <paramref name="format"/> is an empty string, or the format of <paramref name="s"/> is not exactly as specified by the format pattern in <paramref name="format"/>. This parameter is passed uninitialized.</param>
            <returns><c>true</c> if the <paramref name="s"/> parameter was converted successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,DlhSoft.Windows.Data.Date@)">
            <summary>
            Converts the specified string representation of a date to its <see cref="T:DlhSoft.Windows.Data.Date">Date</see> equivalent using the specified array of formats, culture-specific format information, and formatting style. The format of the string representation must match at least one of the specified formats exactly.
            </summary>
            <param name="s">A string containing a date to convert.</param>
            <param name="formats">An array of expected formats of <paramref name="s"/>.</param>
            <param name="provider">An <see cref="T:System.IFormatProvider">IFormatProvider</see> that supplies culture-specific format information about <paramref name="s"/>s.</param>
            <param name="styles">A bitwise combination of <see cref="T:System.Globalization.DateTimeStyles">DateTimeStyles</see> values that indicates the permitted format of <paramref name="s"/>. A typical value to specify is <see cref="F:System.Globalization.DateTimeStyles.None">None</see>.</param>
            <param name="result">When this method returns, contains the <see cref="T:DlhSoft.Windows.Data.Date">Date</see> value equivalent to the date contained in <paramref name="s"/>, if the conversion succeeded, or <see cref="F:DlhSoft.Windows.Data.Date.MinValue">MinValue</see> if the conversion failed. The conversion fails if either the <paramref name="s"/> or <paramref name="formats"/> is a <c>null</c> reference (<c>Nothing</c> in Visual Basic), <paramref name="s"/> or an element contained by <paramref name="formats"/> is an empty string, or the format of <paramref name="s"/> is not exactly as specified by an element of the format patterns in <paramref name="formats"/>. This parameter is passed uninitialized.</param>
            <returns><c>true</c> if the <paramref name="s"/> parameter was converted successfully; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.op_Addition(DlhSoft.Windows.Data.Date,System.TimeSpan)">
            <summary>
            Adds a specified time interval to a specified date, yielding a new date and time.
            </summary>
            <param name="d">A <see cref="T:DlhSoft.Windows.Data.Date">Date</see>.</param>
            <param name="t">A <see cref="T:System.TimeSpan">TimeSpan</see>.</param>
            <returns>A <see cref="T:System.DateTime">DateTime</see> that is the sum of the values of <paramref name="d"/> and <paramref name="t"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.op_Equality(DlhSoft.Windows.Data.Date,System.DateTime)">
            <summary>
            Determines whether a specified instance of <see cref="T:DlhSoft.Windows.Data.Date">Date</see> is equal to a specified <see cref="T:System.DateTime">DateTime</see>.
            </summary>
            <param name="d1">A <see cref="T:DlhSoft.Windows.Data.Date">Date</see>.</param>
            <param name="d2">A <see cref="T:System.DateTime">DateTime</see>.</param>
            <returns><c>true</c> if <paramref name="d1"/> and <paramref name="d2"/> represent the same date; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.op_Inequality(DlhSoft.Windows.Data.Date,System.DateTime)">
            <summary>
            Determines whether a specified instance of <see cref="T:DlhSoft.Windows.Data.Date">Date</see> is not equal to a specified <see cref="T:System.DateTime">DateTime</see>.
            </summary>
            <param name="d1">A <see cref="T:DlhSoft.Windows.Data.Date">Date</see>.</param>
            <param name="d2">A <see cref="T:System.DateTime">DateTime</see>.</param>
            <returns><c>true</c> if <paramref name="d1"/> and <paramref name="d2"/> do not represent the same date; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.op_GreaterThan(DlhSoft.Windows.Data.Date,System.DateTime)">
            <summary>
            Determines whether one specified <see cref="T:DlhSoft.Windows.Data.Date">Date</see> is greater than a specified <see cref="T:System.DateTime">DateTime</see>.
            </summary>
            <param name="d1">A <see cref="T:DlhSoft.Windows.Data.Date">Date</see>.</param>
            <param name="d2">A <see cref="T:System.DateTime">DateTime</see>.</param>
            <returns><c>true</c> if <paramref name="d1"/> is greater than <paramref name="d2"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.op_GreaterThanOrEqual(DlhSoft.Windows.Data.Date,System.DateTime)">
            <summary>
            Determines whether one specified <see cref="T:DlhSoft.Windows.Data.Date">Date</see> is greater than or equal to a specified <see cref="T:System.DateTime">DateTime</see>.
            </summary>
            <param name="d1">A <see cref="T:DlhSoft.Windows.Data.Date">Date</see>.</param>
            <param name="d2">A <see cref="T:System.DateTime">DateTime</see>.</param>
            <returns><c>true</c> if <paramref name="d1"/> is greater than or equal to <paramref name="d2"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.op_LessThan(DlhSoft.Windows.Data.Date,System.DateTime)">
            <summary>
            Determines whether one specified <see cref="T:DlhSoft.Windows.Data.Date">Date</see> is less than a specified <see cref="T:System.DateTime">DateTime</see>.
            </summary>
            <param name="d1">A <see cref="T:DlhSoft.Windows.Data.Date">Date</see>.</param>
            <param name="d2">A <see cref="T:System.DateTime">DateTime</see>.</param>
            <returns><c>true</c> if <paramref name="d1"/> is less than <paramref name="d2"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.op_LessThanOrEqual(DlhSoft.Windows.Data.Date,System.DateTime)">
            <summary>
            Determines whether one specified <see cref="T:DlhSoft.Windows.Data.Date">Date</see> is less than or equal to a specified <see cref="T:System.DateTime">DateTime</see>.
            </summary>
            <param name="d1">A <see cref="T:DlhSoft.Windows.Data.Date">Date</see>.</param>
            <param name="d2">A <see cref="T:System.DateTime">DateTime</see>.</param>
            <returns><c>true</c> if <paramref name="d1"/> is less than or equal to <paramref name="d2"/>; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.op_Subtraction(DlhSoft.Windows.Data.Date,System.DateTime)">
            <summary>
            Subtracts a specified date and time from a specified date, yielding a time interval.
            </summary>
            <param name="d1">A <see cref="T:DlhSoft.Windows.Data.Date">Date</see>.</param>
            <param name="d2">A <see cref="T:System.DateTime">DateTime</see>.</param>
            <returns>A <see cref="T:System.TimeSpan">TimeSpan</see> that is the time interval between <paramref name="d1"/> and <paramref name="d2"/>; that is, <paramref name="d1"/> minus <paramref name="d2"/>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.Date.op_Subtraction(DlhSoft.Windows.Data.Date,System.TimeSpan)">
            <summary>
            Subtracts a specified date and time from a specified date, yielding a time interval.
            </summary>
            <param name="d">A <see cref="T:DlhSoft.Windows.Data.Date">Date</see>.</param>
            <param name="t">A <see cref="T:System.TimeSpan">TimeSpan</see>.</param>
            <returns>A <see cref="T:System.DateTime">DateTime</see> whose value is the value of <paramref name="d"/> minus the value of <paramref name="t"/>.</returns>
        </member>
        <member name="F:DlhSoft.Windows.Data.Date.MaxValue">
            <summary>
            Represents the largest possible value of <see cref="T:DlhSoft.Windows.Data.Date">Date</see>. This field is read-only.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Date.MinValue">
            <summary>
            Represents the smallest possible value of <see cref="T:DlhSoft.Windows.Data.Date">Date</see>. This field is read-only.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Date.Day">
            <summary>
            Gets the day of the month represented by this instance.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Date.DayOfWeek">
            <summary>
            Gets the day of the week represented by this instance.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Date.DayOfYear">
            <summary>
            Gets the day of the year represented by this instance.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Date.Month">
            <summary>
            Gets the month component of the date represented by this instance.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Date.Today">
            <summary>
            Gets the current date.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Date.Year">
            <summary>
            Gets the year component of the date represented by this instance.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.TaskCollection">
            <summary>
            Observable collection that owns <see cref="T:DlhSoft.Windows.Data.Task">Task</see> objects used internally by a <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see>.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskCollection.#ctor(DlhSoft.Windows.Data.TaskManager)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.TaskCollection">TaskCollection</see> class.
            </summary>
            <param name="parentManager">The parent manager of the collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskCollection.InsertItem(System.Int32,DlhSoft.Windows.Data.Entity)">
            <summary>
            Inserts a task to the collection at the specified index and sets it as owned by this <see cref="T:DlhSoft.Windows.Data.TaskCollection">TaskCollection</see>.
            </summary>
            <param name="index">The zero-based index at which the task should be inserted.</param>
            <param name="entity">The task to insert.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the task at the specified index of the collection and sets it as not owned by this <see cref="T:DlhSoft.Windows.Data.TaskCollection">TaskCollection</see>.
            </summary>
            <param name="index">The zero-based index of the task to remove.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskCollection.GetTask(System.Object)">
            <summary>
            Gets the task that wraps the specified object, or null if such task doesn't exist.
            </summary>
            <param name="item">Wrapped object to search for.</param>
            <returns>The task that wraps the specified object, or null if such task doesn't exist.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.TaskCollection.GetTaskAt(System.Int32)">
            <summary>
            Gets the task at the specified index.
            </summary>
            <param name="index">The zero-based index of the task to be get.</param>
            <returns>The task at the specified index.</returns>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskCollection.Item(System.Int32)">
            <summary>
            Gets the task at the specified index.
            </summary>
            <param name="index">The zero-based index of the task to be get.</param>
            <returns>The task at the specified index.</returns>
        </member>
        <member name="P:DlhSoft.Windows.Data.TaskCollection.ParentManager">
            <summary>
            Gets the parent manager of this collection.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.ScheduleDefinition">
            <summary>
            Represents a schedule item object wrapper generated and managed by a <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionManager">ScheduleDefinitionManager</see>, aware of its definition string.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinition.#ctor(System.Object,System.String,System.String,DlhSoft.Windows.Data.Entity.Initialization,DlhSoft.Windows.Data.Entity.Initialization,DlhSoft.Windows.Data.Entity.Initialization,DlhSoft.Windows.Data.Entity.Initialization)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see> class.
            </summary>
            <param name="item">Schedule definition item to be wrapped by the <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see>.</param>
            <param name="contentMemberPath">Path to an <see cref="T:System.Object">Object</see> value on the source schedule definition item to serve as the schedule definition content, or null to indicate that the content is not provided by the source schedule definition item.</param>
            <param name="definitionStringMemberPath">Path to a <see cref="T:System.String">String</see> value on the source schedule definition item to serve as the schedule definition string value, or null to indicate that the definition string value is not provided by the source schedule definition item.</param>
            <param name="completingParentManagerInitialization">A method to be called when the initialization of the parent <see cref="T:DlhSoft.Windows.Data.EntityManager">EntityManager</see> is completed.</param>
            <param name="insertedIntoParentCollectionInitialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see> is inserted into the parent collection.</param>
            <param name="removingFromParentCollectionInitialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see> is removed from the parent collection.</param>
            <param name="disposingInitialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see> is disposed.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinition.#ctor(System.Object,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see> class.
            </summary>
            <param name="item">Schedule definition item to be wrapped by the <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see>.</param>
            <param name="contentMemberPath">Path to an <see cref="T:System.Object">Object</see> value on the source schedule definition item to serve as the schedule definition content, or null to indicate that the content is not provided by the source schedule definition item.</param>
            <param name="definitionStringMemberPath">Path to a <see cref="T:System.String">String</see> value on the source schedule definition item to serve as the definition string value, or null to indicate that the schedule definition value is not provided by the source schedule definition item.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinition.#ctor(System.Object,DlhSoft.Windows.Data.Entity.Initialization)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see> class.
            </summary>
            <param name="item">Schedule definition item to be wrapped by the <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see>.</param>
            <param name="initialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see> is inserted into the parent collection.</param>
        </member>
        <member name="F:DlhSoft.Windows.Data.ScheduleDefinition.ContentProperty">
            <summary>
            Identifies the Content dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinition.OnContentChanged(System.Object,System.Object)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.ScheduleDefinition.Content">Content</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.ScheduleDefinition.DefinitionStringProperty">
            <summary>
            Identifies the DefinitionString dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinition.OnDefinitionStringChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.ScheduleDefinition.DefinitionString">DefinitionString</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.ScheduleDefinition.DefinitionInfoProperty">
            <summary>
            Identifies the DefinitionInfo dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinition.OnDefinitionInfoChanged(DlhSoft.Windows.Data.ScheduleDefinitionInfo,DlhSoft.Windows.Data.ScheduleDefinitionInfo)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.ScheduleDefinition.DefinitionInfo">DefinitionInfo</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.ScheduleDefinition.IsValidProperty">
            <summary>
            Identifies the IsValid dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinition.OnIsValidChanged(System.Boolean,System.Boolean)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.ScheduleDefinition.IsValid">IsValid</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.ScheduleDefinition.ScheduleProperty">
            <summary>
            Identifies the Schedule dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinition.OnScheduleChanged(DlhSoft.Windows.Data.Schedule,DlhSoft.Windows.Data.Schedule)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.ScheduleDefinition.Schedule">Schedule</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.ScheduleDefinition.StandardString">
            <summary>
            Gets the standard schedule definition string representing the schedule of Monday - Friday, 8h/day (8 AM - 4 PM).
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.ScheduleDefinition.ContinuousString">
            <summary>
            Gets the continuous schedule definition string representing the schedule of Sunday - Saturday, 24h/day.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ScheduleDefinition.ParentCollection">
            <summary>
            Gets the parent collection that owns this <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ScheduleDefinition.Content">
            <summary>
            Gets or sets the content of this <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ScheduleDefinition.DefinitionString">
            <summary>
            Gets or sets the definition string value of this <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ScheduleDefinition.DefinitionInfo">
            <summary>
            Gets the input/output <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionInfo">ScheduleDefinitionInfo</see> computed based on the definition string of this <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ScheduleDefinition.IsValid">
            <summary>
            Gets a value indicating whether the definition string would generate a valid <see cref="P:DlhSoft.Windows.Data.ScheduleDefinition.Schedule">Schedule</see> within this <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ScheduleDefinition.Schedule">
            <summary>
            Gets the output <see cref="P:DlhSoft.Windows.Data.ScheduleDefinition.Schedule">Schedule</see> computed based on the definition string of this <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.DateScheduleDefinitionInfo">
            <summary>
            Represents structured date schedule definition information computed based on the definition string within a <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see>.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.DateScheduleDefinitionInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.DateScheduleDefinitionInfo">DateScheduleDefinitionInfo</see> class.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.DateScheduleDefinitionInfo.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.DateScheduleDefinitionInfo.OnChanged">
            <summary>
            Raises the Changed event.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.DateScheduleDefinitionInfo.Start">
            <summary>
            Gets the start date of the scheduled time interval.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.DateScheduleDefinitionInfo.Finish">
            <summary>
            Gets the finish date of the scheduled time interval.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.DateScheduleDefinitionInfo.Duration">
            <summary>
            Gets the duration of the current date interval in days.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.DateScheduleDefinitionInfo.TimeOfDayInfo">
            <summary>
            Gets the time of day based schedule definition information of the scheduled time.
            </summary>
        </member>
        <member name="E:DlhSoft.Windows.Data.DateScheduleDefinitionInfo.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:DlhSoft.Windows.Data.DateScheduleDefinitionInfo.Changed">
            <summary>
            Occurs when a property value of this object or of a contained object changes.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.Licensing.TaskManager">
            <summary>
            Provides licensing utilities for TaskManager control.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Licensing.TaskManager.SetLicense(System.String)">
            <summary>
            Predefines the license content to be considered for TaskManager component instances, at initialization time.
            </summary>
            <param name="licenseContent">The XML content string of the license to be defined for this component type.</param>
        </member>
        <member name="T:DlhSoft.Windows.Data.Licensing.ResourceManager">
            <summary>
            Provides licensing utilities for ResourceManager control.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Licensing.ResourceManager.SetLicense(System.String)">
            <summary>
            Predefines the license content to be considered for ResourceManager component instances, at initialization time.
            </summary>
            <param name="licenseContent">The XML content string of the license to be defined for this component type.</param>
        </member>
        <member name="T:DlhSoft.Windows.Data.Licensing.PredecessorManager">
            <summary>
            Provides licensing utilities for PredecessorManager control.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Licensing.PredecessorManager.SetLicense(System.String)">
            <summary>
            Predefines the license content to be considered for PredecessorManager component instances, at initialization time.
            </summary>
            <param name="licenseContent">The XML content string of the license to be defined for this component type.</param>
        </member>
        <member name="T:DlhSoft.Windows.Data.Licensing.AssignmentManager">
            <summary>
            Provides licensing utilities for AssignmentManager control.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Licensing.AssignmentManager.SetLicense(System.String)">
            <summary>
            Predefines the license content to be considered for AssignmentManager component instances, at initialization time.
            </summary>
            <param name="licenseContent">The XML content string of the license to be defined for this component type.</param>
        </member>
        <member name="T:DlhSoft.Windows.Data.Licensing.ScheduleDefinitionManager">
            <summary>
            Provides licensing utilities for ScheduleDefinitionManager control.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Licensing.ScheduleDefinitionManager.SetLicense(System.String)">
            <summary>
            Predefines the license content to be considered for ScheduleDefinitionManager component instances, at initialization time.
            </summary>
            <param name="licenseContent">The XML content string of the license to be defined for this component type.</param>
        </member>
        <member name="T:DlhSoft.Windows.Data.ScheduleDefinitionItem">
            <summary>
            Represents a schedule definition item aware of its schedule and costs that can be used as a source object to be wrapped within an <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see> and managed using a <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionManager">ScheduleDefinitionManager</see> or hosted within a schedule definition data management control.
            It is recommended to set at least these data properties: <see cref="P:DlhSoft.Windows.Data.ScheduleDefinitionItem.DefinitionString">DefinitionString</see>.
            These data properties can also be set: <see cref="P:DlhSoft.Windows.Data.EntityItem.Content">Content</see>.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.IScheduleDefinitionItem">
            <summary>
            Represents the interface of a schedule definition item aware of its definition string that can be used as a source object to be wrapped within an <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see> and managed using a <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionManager">ScheduleDefinitionManager</see> or hosted within a schedule definition data management control.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.IScheduleDefinitionItem.DefinitionString">
            <summary>
            Gets or sets the definition string of this <see cref="T:DlhSoft.Windows.Data.IScheduleDefinitionItem">IScheduleDefinitionItem</see>.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionItem">ScheduleDefinitionItem</see> class.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ScheduleDefinitionItem.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionItem">ScheduleDefinitionItem</see> class.
            </summary>
            <param name="content">Content of this <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionItem">ScheduleDefinitionItem</see>.</param>
            <param name="definitionString">Definition string of this <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionItem">ScheduleDefinitionItem</see>.</param>
        </member>
        <member name="F:DlhSoft.Windows.Data.ScheduleDefinitionItem.DefinitionStringProperty">
            <summary>
            Identifies the DefinitionString dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.ScheduleDefinitionItem.DefinitionString">
            <summary>
            Gets or sets the definition string of this <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionItem">ScheduleDefinitionItem</see>.
            The definition string value is of this form: Monday-Friday 08:00-12:00 12:30-16:30, Saturday 08:00-12:00, 01/01/2010 -, 01/02/2010-01/05/2010 11:00-14:00.
            It is recommended to set this property.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.SimpleScheduleDefinitionItem">
            <summary>
            Represents a simple schedule definition item that can be used as a data definition object when inserting or adding a <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see> using a <see cref="T:DlhSoft.Windows.Data.ScheduleDefinitionManager">ScheduleDefinitionManager</see> with simple data management mode.
            It is recommended to set at least these data properties: <see cref="P:DlhSoft.Windows.Data.SimpleScheduleDefinitionItem.DefinitionString">DefinitionString</see>.
            These data properties can also be set: <see cref="P:DlhSoft.Windows.Data.SimpleEntityItem.Content">Content</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.SimpleScheduleDefinitionItem.DefinitionString">
            <summary>
            Gets or sets the definition string of this <see cref="T:DlhSoft.Windows.Data.SimpleScheduleDefinitionItem">SimpleScheduleDefinitionItem</see>.
            The definition string value is of this form: Monday-Friday 08:00-12:00 12:30-16:30, Saturday 08:00-12:00, 01/01/2010 -, 01/02/2010-01/05/2010 11:00-14:00.
            It is recommended to set this property.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.SimpleResourceItem">
            <summary>
            Represents a simple resource item that can be used as a data definition object when inserting or adding a <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see> using a <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see> with simple data management mode.
            It is recommended to set at least these data properties: <see cref="P:DlhSoft.Windows.Data.SimpleEntityItem.Content">Content</see>.
            These data properties can also be set: <see cref="P:DlhSoft.Windows.Data.SimpleResourceItem.Schedule">Schedule</see>, <see cref="P:DlhSoft.Windows.Data.SimpleResourceItem.CostPerUsage">CostPerUsage</see>, <see cref="P:DlhSoft.Windows.Data.SimpleResourceItem.CostPerHour">CostPerHour</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.SimpleResourceItem.Schedule">
            <summary>
            Gets or sets the schedule of this <see cref="T:DlhSoft.Windows.Data.SimpleResourceItem">SimpleResourceItem</see>.
            The resource schedule indicates the time intervals of a day that the resource can use as work time for achieving completion of a task, restricting the task schedule further. If the resource schedule is not set it means that the resource can use any time interval as work time, and the task schedule is not restricted.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.SimpleResourceItem.CostPerUsage">
            <summary>
            Gets or sets the cost per usage of this <see cref="T:DlhSoft.Windows.Data.SimpleResourceItem">SimpleResourceItem</see>.
            The resource cost per usage is applied when computing a task cost, one time for each assignment, without considering the task duration or the assigned allocation units.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.SimpleResourceItem.CostPerHour">
            <summary>
            Gets or sets the cost per hour of this <see cref="T:DlhSoft.Windows.Data.SimpleResourceItem">SimpleResourceItem</see>.
            The resource cost per hour is applied when computing a task cost, proportionally for each assignment, considering the task duration and the assigned allocation units.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Converters.AssignmentResourceConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Converters.AssignmentResourceConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts a value.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.Predecessor">
            <summary>
            Represents a predecessor item object wrapper generated and managed by a <see cref="T:DlhSoft.Windows.Data.PredecessorManager">PredecessorManager</see>, aware of its task, dependency type, and lag.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Predecessor.#ctor(System.Object,System.String,System.String,System.String,DlhSoft.Windows.Data.Entity.Initialization,DlhSoft.Windows.Data.Entity.Initialization,DlhSoft.Windows.Data.Entity.Initialization,DlhSoft.Windows.Data.Entity.Initialization)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.Predecessor">Predecessor</see> class.
            </summary>
            <param name="item">Predecessor item to be wrapped by the <see cref="T:DlhSoft.Windows.Data.Predecessor">Predecessor</see>.</param>
            <param name="taskItemMemberPath">Path to an <see cref="T:System.Object">Object</see> value on the source predecessor item to serve as the task item, or null to indicate that the task item is not provided by the source predecessor item.</param>
            <param name="dependencyTypeMemberPath">Path to a <see cref="P:DlhSoft.Windows.Data.Predecessor.DependencyType">DependencyType</see> value on the source predecessor item to serve as the dependency type, or null to indicate that the dependency value is not provided by the source predecessor item.</param>
            <param name="lagMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source predecessor item to serve as the lag, or null to indicate that the lag is not provided by the source predecessor item.</param>
            <param name="completingParentManagerInitialization">A method to be called when the initialization of the parent <see cref="T:DlhSoft.Windows.Data.EntityManager">EntityManager</see> is completed.</param>
            <param name="insertedIntoParentCollectionInitialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.Predecessor">Predecessor</see> is inserted into the parent collection.</param>
            <param name="removingFromParentCollectionInitialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.Predecessor">Predecessor</see> is removed from the parent collection.</param>
            <param name="disposingInitialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.Predecessor">Predecessor</see> is disposed.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.Predecessor.#ctor(System.Object,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.Predecessor">Predecessor</see> class.
            </summary>
            <param name="item">Predecessor item to be wrapped by the <see cref="T:DlhSoft.Windows.Data.Predecessor">Predecessor</see>.</param>
            <param name="taskItemMemberPath">Path to an <see cref="T:System.Object">Object</see> value on the source predecessor item to serve as the task item, or null to indicate that the task item is not provided by the source predecessor item.</param>
            <param name="dependencyTypeMemberPath">Path to a <see cref="P:DlhSoft.Windows.Data.Predecessor.DependencyType">DependencyType</see> value on the source predecessor item to serve as the dependency type, or null to indicate that the dependency value is not provided by the source predecessor item.</param>
            <param name="lagMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source predecessor item to serve as the lag, or null to indicate that the lag is not provided by the source predecessor item.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.Predecessor.#ctor(System.Object,DlhSoft.Windows.Data.Entity.Initialization)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.Predecessor">Predecessor</see> class.
            </summary>
            <param name="item">Predecessor item to be wrapped by the <see cref="T:DlhSoft.Windows.Data.Predecessor">Predecessor</see>.</param>
            <param name="initialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.Predecessor">Predecessor</see> is inserted into the parent collection.</param>
        </member>
        <member name="F:DlhSoft.Windows.Data.Predecessor.TaskProperty">
            <summary>
            Identifies the Task dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Predecessor.OnTaskChanged(DlhSoft.Windows.Data.Task,DlhSoft.Windows.Data.Task)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Predecessor.Task">Task</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Predecessor.DependencyTypeProperty">
            <summary>
            Identifies the DependencyType dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Predecessor.OnDependencyTypeChanged(DlhSoft.Windows.Data.DependencyType,DlhSoft.Windows.Data.DependencyType)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Predecessor.DependencyType">DependencyType</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Predecessor.LagProperty">
            <summary>
            Identifies the Lag dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Predecessor.OnLagChanged(System.TimeSpan,System.TimeSpan)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Predecessor.Lag">Lag</see> property changes.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Predecessor.ParentCollection">
            <summary>
            Gets the parent collection that owns this <see cref="T:DlhSoft.Windows.Data.Predecessor">Predecessor</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Predecessor.ParentTask">
            <summary>
            Gets the parent task that owns this <see cref="T:DlhSoft.Windows.Data.Predecessor">Predecessor</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Predecessor.Task">
            <summary>
            Gets the task of this <see cref="T:DlhSoft.Windows.Data.Predecessor">Predecessor</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Predecessor.DependencyType">
            <summary>
            Gets or sets the dependency type of this <see cref="T:DlhSoft.Windows.Data.Predecessor">Predecessor</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Predecessor.Lag">
            <summary>
            Gets or sets the lag of this <see cref="T:DlhSoft.Windows.Data.Predecessor">Predecessor</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.ReadOnlyPredecessorCollection">
            <summary>
            Read-only observable collection of <see cref="T:DlhSoft.Windows.Data.Predecessor">Predecessor</see> objects.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ReadOnlyPredecessorCollection.#ctor(DlhSoft.Windows.Data.PredecessorCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ReadOnlyPredecessorCollection">ReadOnlyPredecessorCollection</see> class.
            </summary>
            <param name="predecessors">Source predecessor collection to be used by the new read-only predecessor collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ReadOnlyPredecessorCollection.CreateNewItem(System.Object[])">
            <summary>
            Called when a new predecessor item is added to the collection by calling <see cref="M:DlhSoft.Windows.Data.ReadOnlyEntityCollection.InsertNewItem(System.Int32,System.Object[])">InsertNewItem</see> method and the event handlers of the <see cref="E:DlhSoft.Windows.Data.ReadOnlyEntityCollection.NewItem">NewItem</see> event haven't set up the new predecessor item themselves.
            </summary>
            <param name="parameters">List of parameters passed from <see cref="M:DlhSoft.Windows.Data.ReadOnlyEntityCollection.InsertNewItem(System.Int32,System.Object[])">InsertNewItem</see> method used for actually creating the new predecessor item.</param>
            <returns>The newly created predecessor item.</returns>
        </member>
        <member name="P:DlhSoft.Windows.Data.ReadOnlyPredecessorCollection.Item(System.Int32)">
            <summary>
            Gets the predecessor at the specified index.
            </summary>
            <param name="index">The zero-based index of the predecessor to get.</param>
            <returns>The predecessor at the specified index.</returns>
        </member>
        <member name="T:DlhSoft.Windows.Data.SimpleTaskItem">
            <summary>
            Represents a simple task item that can be used as a data definition object when inserting or adding a <see cref="T:DlhSoft.Windows.Data.Task">Task</see> using a <see cref="T:DlhSoft.Windows.Data.TaskManager">TaskManager</see> with simple data management mode.
            It is recommended to set at least these data properties: <see cref="P:DlhSoft.Windows.Data.SimpleNodeItem.Indentation">Indentation</see>, <see cref="P:DlhSoft.Windows.Data.SimpleEntityItem.Content">Content</see>, <see cref="P:DlhSoft.Windows.Data.SimpleTaskItem.Start">Start</see>, <see cref="P:DlhSoft.Windows.Data.SimpleTaskItem.Effort">Effort</see>, <see cref="P:DlhSoft.Windows.Data.SimpleTaskItem.CompletedEffort">CompletedEffort</see>, <see cref="P:DlhSoft.Windows.Data.SimpleTaskItem.Assignments">Assignments</see>.
            These data properties can also be set: <see cref="P:DlhSoft.Windows.Data.SimpleNodeItem.IsExpanded">IsExpanded</see>, <see cref="P:DlhSoft.Windows.Data.SimpleTaskItem.Schedule">Schedule</see>, <see cref="P:DlhSoft.Windows.Data.SimpleTaskItem.Predecessors">Predecessors</see>, <see cref="P:DlhSoft.Windows.Data.SimpleTaskItem.Cost">Cost</see>, <see cref="P:DlhSoft.Windows.Data.SimpleTaskItem.MinStart">MinStart</see>, <see cref="P:DlhSoft.Windows.Data.SimpleTaskItem.MaxStart">MaxStart</see>, <see cref="P:DlhSoft.Windows.Data.SimpleTaskItem.MinFinish">MinFinish</see>, <see cref="P:DlhSoft.Windows.Data.SimpleTaskItem.MaxFinish">MaxFinish</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.SimpleTaskItem.Schedule">
            <summary>
            Gets or sets the schedule of this <see cref="T:DlhSoft.Windows.Data.SimpleTaskItem">SimpleTaskItem</see>.
            The task schedule indicates the time intervals of a day that can be used as work time for achieving completion of the task. If a child task schedule is not set, the parent task schedule is used. If a root task schedule is not set the <see cref="P:DlhSoft.Windows.Data.Schedule.Continuous">Continuous</see> schedule is used.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.SimpleTaskItem.Start">
            <summary>
            Gets or sets the start date and time of this <see cref="T:DlhSoft.Windows.Data.SimpleTaskItem">SimpleTaskItem</see>.
            The start date and time of a parent task will be based on the start date and time values of its children.
            It is recommended to set this property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.SimpleTaskItem.MinStart">
            <summary>
            Gets or sets the minimum start date and time of this <see cref="T:DlhSoft.Windows.Data.SimpleTaskItem">SimpleTaskItem</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.SimpleTaskItem.MaxStart">
            <summary>
            Gets or sets the maximum start date and time of this <see cref="T:DlhSoft.Windows.Data.SimpleTaskItem">SimpleTaskItem</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.SimpleTaskItem.Effort">
            <summary>
            Gets or sets the effort of this <see cref="T:DlhSoft.Windows.Data.SimpleTaskItem">SimpleTaskItem</see>.
            The effort of a parent task will be based on the effort values of its children.
            It is recommended to set this property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.SimpleTaskItem.CompletedEffort">
            <summary>
            Gets or sets the completed effort of this <see cref="T:DlhSoft.Windows.Data.SimpleTaskItem">SimpleTaskItem</see>.
            The completed effort of a parent task will be based on the completed effort values of its children.
            It is recommended to set this property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.SimpleTaskItem.Assignments">
            <summary>
            Gets or sets the assignment item collection of this <see cref="T:DlhSoft.Windows.Data.SimpleTaskItem">SimpleTaskItem</see>.
            You can use a collection of <see cref="T:DlhSoft.Windows.Data.SimpleAssignmentItem">SimpleAssignmentItem</see> objects as the task assignment item collection. Note that the assignment item collection is ignored for parent tasks.
            It is recommended to set this property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.SimpleTaskItem.DlhSoft#Windows#Data#ITaskItem#Assignments">
            <summary>
            Enumerates or populates the assignment item collection of this <see cref="T:DlhSoft.Windows.Data.SimpleTaskItem">SimpleTaskItem</see>.
            When setting this property you must use an <see cref="T:DlhSoft.Windows.Data.IAssignmentItem">IAssignmentItem</see> object collection.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.SimpleTaskItem.Predecessors">
            <summary>
            Gets or sets the predecessor item collection of this <see cref="T:DlhSoft.Windows.Data.SimpleTaskItem">SimpleTaskItem</see>.
            The predecessor item collection is used to indicate dependencies between tasks. You can use a collection of <see cref="T:DlhSoft.Windows.Data.SimplePredecessorItem">SimplePredecessorItem</see> objects as the task predecessor item collection.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.SimpleTaskItem.DlhSoft#Windows#Data#ITaskItem#Predecessors">
            <summary>
            Enumerates or populates the predecessor item collection of this <see cref="T:DlhSoft.Windows.Data.SimpleTaskItem">SimpleTaskItem</see>.
            When setting this property you must use an <see cref="T:DlhSoft.Windows.Data.IPredecessorItem">IPredecessorItem</see> object collection.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.SimpleTaskItem.MinFinish">
            <summary>
            Gets or sets the minimum finish date and time of this <see cref="T:DlhSoft.Windows.Data.SimpleTaskItem">SimpleTaskItem</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.SimpleTaskItem.MaxFinish">
            <summary>
            Gets or sets the maximum finish date and time of this <see cref="T:DlhSoft.Windows.Data.SimpleTaskItem">SimpleTaskItem</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.SimpleTaskItem.Cost">
            <summary>
            Gets or sets the cost of this <see cref="T:DlhSoft.Windows.Data.SimpleTaskItem">SimpleTaskItem</see>.
            Task cost can be computed automatically based on duration and assignments. The cost of a parent task will be based on the cost values of its children. However a specific task cost can be set and will be used instead if it is higher than the automatically computed cost.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.SimplePredecessorItem">
            <summary>
            Represents a simple predecessor item that can be used as a data definition object when inserting or adding a <see cref="T:DlhSoft.Windows.Data.Predecessor">Predecessor</see> using a <see cref="T:DlhSoft.Windows.Data.PredecessorManager">PredecessorManager</see> with simple data management mode.
            It is recommended to set at least these data properties: <see cref="T:DlhSoft.Windows.Data.Task">Task</see>.
            These data properties can also be set: <see cref="P:DlhSoft.Windows.Data.SimplePredecessorItem.DependencyType">DependencyType</see>, <see cref="P:DlhSoft.Windows.Data.SimplePredecessorItem.Lag">Lag</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.SimplePredecessorItem.TaskItem">
            <summary>
            Gets or sets the task item of this <see cref="T:DlhSoft.Windows.Data.SimplePredecessorItem">SimplePredecessorItem</see>.
            Predecessor task item indicates the task that the current task depends on. You can use a <see cref="T:DlhSoft.Windows.Data.SimpleTaskItem">SimpleTaskItem</see> object as the task item.
            It is recommended to set this property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.SimplePredecessorItem.DlhSoft#Windows#Data#IPredecessorItem#TaskItem">
            <summary>
            Gets or sets the task item of this <see cref="T:DlhSoft.Windows.Data.SimplePredecessorItem">SimplePredecessorItem</see>.
            When setting this property you must use an <see cref="T:DlhSoft.Windows.Data.ITaskItem">ITaskItem</see> object.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.SimplePredecessorItem.DependencyType">
            <summary>
            Gets or sets the dependency type of this <see cref="T:DlhSoft.Windows.Data.SimplePredecessorItem">SimplePredecessorItem</see>.
            Predecessor dependency type indicates how the current task depends on the predecessor task.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.SimplePredecessorItem.Lag">
            <summary>
            Gets or sets the lag of this <see cref="T:DlhSoft.Windows.Data.SimplePredecessorItem">SimplePredecessorItem</see>.
            Predecessor lag indicates when the current task depends on the predecessor task. If lag is zero the dependency is applied at the appropriate time. If lag is positive the dependency is applied so that there will be an exclusion interval between the tasks. If lag is negative the dependency is applied so that there will be an intersection interval between the tasks.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.ReadOnlyTaskCollection">
            <summary>
            Read-only observable collection of <see cref="T:DlhSoft.Windows.Data.Task">Task</see> objects.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ReadOnlyTaskCollection.#ctor(DlhSoft.Windows.Data.TaskCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ReadOnlyTaskCollection">ReadOnlyTaskCollection</see> class.
            </summary>
            <param name="tasks">Source task collection to be used by the new read-only task collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ReadOnlyTaskCollection.CreateNewItem(System.Object[])">
            <summary>
            Called when a new task item is added to the collection by calling <see cref="M:DlhSoft.Windows.Data.ReadOnlyEntityCollection.InsertNewItem(System.Int32,System.Object[])">InsertNewItem</see> method and the event handlers of the <see cref="E:DlhSoft.Windows.Data.ReadOnlyEntityCollection.NewItem">NewItem</see> event haven't set up the new task item themselves.
            </summary>
            <param name="parameters">List of parameters passed from <see cref="M:DlhSoft.Windows.Data.ReadOnlyEntityCollection.InsertNewItem(System.Int32,System.Object[])">InsertNewItem</see> method used for actually creating the new task item.</param>
            <returns>The newly created task item.</returns>
        </member>
        <member name="P:DlhSoft.Windows.Data.ReadOnlyTaskCollection.Item(System.Int32)">
            <summary>
            Gets the task at the specified index.
            </summary>
            <param name="index">The zero-based index of the task to get.</param>
            <returns>The task at the specified index.</returns>
        </member>
        <member name="T:DlhSoft.Windows.Data.PredecessorManager">
            <summary>
            Object collection management engine that uses a predecessor collection to wrap the objects internally.
            Provides automatic management for the collection items.
            Use <see cref="P:DlhSoft.Windows.Data.EntityManager.Items">Items</see> property to set your own predecessor data item collection to manage and use <see cref="P:DlhSoft.Windows.Data.PredecessorManager.Predecessors">Predecessors</see> property to access the managed predecessor collection mapping your items.
            It is recommended to set at least these data member properties: <see cref="P:DlhSoft.Windows.Data.PredecessorManager.TaskItemMemberPath">TaskItemMemberPath</see>.
            These data member properties can also be set: <see cref="P:DlhSoft.Windows.Data.PredecessorManager.DependencyTypeMemberPath">DependencyTypeMemberPath</see>, <see cref="P:DlhSoft.Windows.Data.PredecessorManager.LagMemberPath">LagMemberPath</see>.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.PredecessorManager">PredecessorManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see> objects.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorManager.#ctor(DlhSoft.Windows.Data.Task,DlhSoft.Windows.Data.DataManagementMode)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.PredecessorManager">PredecessorManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see> objects.
            </summary>
            <param name="parentTask">Parent task that owns the <see cref="T:DlhSoft.Windows.Data.PredecessorManager">PredecessorManager</see> or null if the manager has no parent task.</param>
            <param name="dataManagementMode">Data management mode to use.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorManager.#ctor(DlhSoft.Windows.Data.Task,System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.SimplePredecessorItem})">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.PredecessorManager">PredecessorManager</see> class using simple data management mode.
            </summary>
            <param name="parentTask">Parent task that owns the <see cref="T:DlhSoft.Windows.Data.PredecessorManager">PredecessorManager</see> or null if the manager has no parent task.</param>
            <param name="simplePredecessorItems">Item definitions representing predecessors to be initially added to the collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorManager.#ctor(DlhSoft.Windows.Data.Task,System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.PredecessorManager">PredecessorManager</see> class.
            The initial values of the data member properties are set to appropriate property paths for using <see cref="T:DlhSoft.Windows.Data.PredecessorItem">PredecessorItem</see> objects.
            </summary>
            <param name="parentTask">Parent task that owns the <see cref="T:DlhSoft.Windows.Data.PredecessorManager">PredecessorManager</see> or null if the manager has no parent task.</param>
            <param name="items">Collection of predecessor items to be managed.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorManager.#ctor(DlhSoft.Windows.Data.Task,System.Collections.IEnumerable,System.String,System.String,System.String,DlhSoft.Windows.Data.EntityManager.Initialization,DlhSoft.Windows.Data.EntityManager.Initialization)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.PredecessorManager">PredecessorManager</see> class.
            </summary>
            <param name="parentTask">Parent task that owns the <see cref="T:DlhSoft.Windows.Data.PredecessorManager">PredecessorManager</see> or null if the manager has no parent task.</param>
            <param name="items">Collection of predecessor items to be managed.</param>
            <param name="taskItemMemberPath">Path to an <see cref="T:System.Object">Object</see> value on the source predecessor item to serve as the task item, or null to indicate that the task item is not provided by the source predecessor item.</param>
            <param name="dependencyTypeMemberPath">Path to a <see cref="T:DlhSoft.Windows.Data.DependencyType">DependencyType</see> value on the source predecessor item to serve as the dependency type, or null to indicate that the dependency value is not provided by the source predecessor item.</param>
            <param name="lagMemberPath">Path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source predecessor item to serve as the lag, or null to indicate that the lag is not provided by the source predecessor item.</param>
            <param name="initialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.PredecessorManager">PredecessorManager</see> initializes.</param>
            <param name="disposingInitialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.PredecessorManager">PredecessorManager</see> is disposed.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorManager.CreateEntityCollection">
            <summary>
            Creates the internal predecessor collection to be used as the predecessor host of this <see cref="T:DlhSoft.Windows.Data.PredecessorManager">PredecessorManager</see>.
            </summary>
            <returns>The internal predecessor collection to be used as the predecessor host of this <see cref="T:DlhSoft.Windows.Data.PredecessorManager">PredecessorManager</see>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorManager.CreateReadOnlyEntityCollection(DlhSoft.Windows.Data.EntityCollection)">
            <summary>
            Creates the internal read-only predecessor collection to be provided by this <see cref="T:DlhSoft.Windows.Data.PredecessorManager">PredecessorManager</see>.
            </summary>
            <returns>The internal read-only predecessor collection to be provided by this <see cref="T:DlhSoft.Windows.Data.PredecessorManager">PredecessorManager</see>.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorManager.InitializeEntityCollection(DlhSoft.Windows.Data.EntityCollection)">
            <summary>
            Sets up the read only predecessor collection to be used for viewing predecessor externally.
            </summary>
            <param name="entities">Internal predecessor collection to be used as the source for the read only predecessor collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorManager.CreateEntity(System.Object)">
            <summary>
            Creates a new predecessor wrapping the specified object.
            </summary>
            <param name="item">Predecessor item to be wrapped by the new predecessor.</param>
            <returns>The new predecessor that wraps the specified object.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorManager.CreateEntityFromSimpleItem(DlhSoft.Windows.Data.SimpleEntityItem)">
            <summary>
            Creates a new predecessor for simple data management mode.
            </summary>
            <param name="entityItem">The entity item definition to use.</param>
            <returns>The new predecessor.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorManager.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.SimplePredecessorItem})">
            <summary>
            Inserts a set of predecessors into the managed collection.
            </summary>
            <param name="index">The zero-based index at which the predecessors should be inserted.</param>
            <param name="simplePredecessorItems">Item definitions representing the predecessors to insert.</param>
            <returns>The new predecessors.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorManager.Insert(System.Int32,DlhSoft.Windows.Data.SimplePredecessorItem)">
            <summary>
            Inserts a predecessor into the managed collection.
            </summary>
            <param name="index">The zero-based index at which the predecessor should be inserted.</param>
            <param name="simplePredecessorItem">Item definition representing the predecessor to insert.</param>
            <returns>The new predecessor.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorManager.AddRange(System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.SimplePredecessorItem})">
            <summary>
            Adds a set of predecessors to the end of the managed collection.
            </summary>
            <param name="simplePredecessorItems">Item definitions representing the predecessors to be added at the end of the collection.</param>
            <returns>The new predecessors.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorManager.Add(DlhSoft.Windows.Data.SimplePredecessorItem)">
            <summary>
            Adds a predecessor to the end of the managed collection.
            </summary>
            <param name="simplePredecessorItem">Item definition representing the predecessor to be added at the end of the collection.</param>
            <returns>The new predecessor.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorManager.RemoveRange(System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.Predecessor})">
            <summary>
            Removes specific predecessors from the managed collection.
            </summary>
            <param name="predecessors">The predecessors to remove from the collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorManager.Remove(DlhSoft.Windows.Data.Predecessor)">
            <summary>
            Removes a specific predecessor from the managed collection.
            </summary>
            <param name="predecessor">The predecessor to remove from the collection.</param>
        </member>
        <member name="F:DlhSoft.Windows.Data.PredecessorManager.PredecessorsProperty">
            <summary>
            Identifies the Predecessors dependency property.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.PredecessorManager.TaskItemMemberPathProperty">
            <summary>
            Identifies the TaskItemMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorManager.OnTaskItemMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.PredecessorManager.TaskItemMemberPath">TaskItemMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.PredecessorManager.DependencyTypeMemberPathProperty">
            <summary>
            Identifies the DependencyTypeMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorManager.OnDependencyTypeMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.PredecessorManager.DependencyTypeMemberPath">DependencyTypeMemberPath</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.PredecessorManager.LagMemberPathProperty">
            <summary>
            Identifies the LagMemberPath dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorManager.OnLagMemberPathChanged(System.String,System.String)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.PredecessorManager.LagMemberPath">LagMemberPath</see> property changes.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorManager.GetPredecessor(System.Object)">
            <summary>
            Gets the predecessor that wraps the specified object from the internal predecessor collection, or null if such predecessor doesn't exist.
            </summary>
            <param name="item">Wrapped object to search for.</param>
            <returns>The predecessor that wraps the specified object from the internal predecessor collection, or null if such predecessor doesn't exist.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorManager.GetPredecessorAt(System.Int32)">
            <summary>
            Gets the predecessor at the specified index from the internal predecessor collection.
            </summary>
            <param name="index">The zero-based index of the predecessor to be get.</param>
            <returns>The predecessor at the specified index from the internal predecessor collection.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorManager.OnInitializeEntitiesCompleting(System.Int32,System.Collections.Generic.IEnumerable{DlhSoft.Windows.Data.Entity})">
            <summary>
            Executed when the managed predecessors are initialized.
            <param name="index">The initial index of the predecessors.</param>
            <param name="entities">The initialized predecessors.</param>
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.PredecessorManager.OnInitializeEntitiesCompleted">
            <summary>
            Executed after the managed predecessors are initialized.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.PredecessorManager.ParentTask">
            <summary>
            Gets the parent <see cref="T:DlhSoft.Windows.Data.Task">Task</see> that owns this <see cref="T:DlhSoft.Windows.Data.PredecessorManager">PredecessorManager</see>.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.PredecessorManager.Predecessors">
            <summary>
            Gets the read-only predecessor collection wrapping the objects that are currently managed.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.PredecessorManager.TaskItemMemberPath">
            <summary>
            Gets or sets the path to an <see cref="T:System.Object">Object</see> value on the source predecessor item to serve as the predecessor task item, or null to indicate that the task item is not provided by the source predecessor item.
            Predecessor task item indicates the task that the current task depends on. You can use a <see cref="T:DlhSoft.Windows.Data.TaskItem">TaskItem</see> object as the task item.
            It is recommended to set this property.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.PredecessorManager.DependencyTypeMemberPath">
            <summary>
            Gets or sets the path to a <see cref="T:DlhSoft.Windows.Data.DependencyType">DependencyType</see> value on the source predecessor item to serve as the predecessor dependency type, or null to indicate that the lag is not provided by the source predecessor item.
            Predecessor dependency type indicates how the current task depends on the predecessor task.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.PredecessorManager.LagMemberPath">
            <summary>
            Gets or sets the path to a <see cref="T:System.TimeSpan">TimeSpan</see> value on the source predecessor item to serve as the predecessor lag, or null to indicate that the lag is not provided by the source predecessor item.
            Predecessor lag indicates when the current task depends on the predecessor task. If lag is zero the dependency is applied at the appropriate time. If lag is positive the dependency is applied so that there will be an exclusion interval between the tasks. If lag is negative the dependency is applied so that there will be an intersection interval between the tasks.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.PredecessorManager.Item(System.Object)">
            <summary>
            Gets the predecessor that wraps the specified object from the internal predecessor collection, or null if such predecessor doesn't exist.
            </summary>
            <param name="item">Wrapped object to search for.</param>
            <returns>The predecessor that wraps the specified object from the internal predecessor collection, or null if such predecessor doesn't exist.</returns>
        </member>
        <member name="T:DlhSoft.Windows.Data.ResourceCollection">
            <summary>
            Observable collection that owns <see cref="T:DlhSoft.Windows.Data.Resource">Resource</see> objects used internally by a <see cref="T:DlhSoft.Windows.Data.ResourceManager">ResourceManager</see>.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceCollection.#ctor(DlhSoft.Windows.Data.ResourceManager)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.ResourceCollection">ResourceCollection</see> class.
            </summary>
            <param name="parentManager">The parent manager of the collection.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceCollection.InsertItem(System.Int32,DlhSoft.Windows.Data.Entity)">
            <summary>
            Inserts a resource to the collection at the specified index and sets it as owned by this <see cref="T:DlhSoft.Windows.Data.ResourceCollection">ResourceCollection</see>.
            </summary>
            <param name="index">The zero-based index at which the resource should be inserted.</param>
            <param name="entity">The resource to insert.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceCollection.RemoveItem(System.Int32)">
            <summary>
            Removes the resource at the specified index of the collection and sets it as not owned by this <see cref="T:DlhSoft.Windows.Data.ResourceCollection">ResourceCollection</see>.
            </summary>
            <param name="index">The zero-based index of the resource to remove.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceCollection.GetResource(System.Object)">
            <summary>
            Gets the resource that wraps the specified object, or null if such resource doesn't exist.
            </summary>
            <param name="item">Wrapped object to search for.</param>
            <returns>The resource that wraps the specified object, or null if such resource doesn't exist.</returns>
        </member>
        <member name="M:DlhSoft.Windows.Data.ResourceCollection.GetResourceAt(System.Int32)">
            <summary>
            Gets the resource at the specified index.
            </summary>
            <param name="index">The zero-based index of the resource to be get.</param>
            <returns>The resource at the specified index.</returns>
        </member>
        <member name="P:DlhSoft.Windows.Data.ResourceCollection.Item(System.Int32)">
            <summary>
            Gets the resource at the specified index.
            </summary>
            <param name="index">The zero-based index of the resource to be get.</param>
            <returns>The resource at the specified index.</returns>
        </member>
        <member name="P:DlhSoft.Windows.Data.ResourceCollection.ParentManager">
            <summary>
            Gets the parent manager of this collection.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.DayOfWeekScheduleDefinitionInfo">
            <summary>
            Represents structured day of week schedule definition information computed based on the definition string within a <see cref="T:DlhSoft.Windows.Data.ScheduleDefinition">ScheduleDefinition</see>.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.DayOfWeekScheduleDefinitionInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.DayOfWeekScheduleDefinitionInfo">DayOfWeekScheduleDefinitionInfo</see> class.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.DayOfWeekScheduleDefinitionInfo.OnPropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.DayOfWeekScheduleDefinitionInfo.OnChanged">
            <summary>
            Raises the Changed event.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.DayOfWeekScheduleDefinitionInfo.Start">
            <summary>
            Gets the start day of week of the scheduled time interval.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.DayOfWeekScheduleDefinitionInfo.Finish">
            <summary>
            Gets the finish day of week of the scheduled time interval.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.DayOfWeekScheduleDefinitionInfo.Duration">
            <summary>
            Gets the duration of the current day of week interval in days.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.DayOfWeekScheduleDefinitionInfo.TimeOfDayInfo">
            <summary>
            Gets the time of day based schedule definition information of the scheduled time.
            </summary>
        </member>
        <member name="E:DlhSoft.Windows.Data.DayOfWeekScheduleDefinitionInfo.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="E:DlhSoft.Windows.Data.DayOfWeekScheduleDefinitionInfo.Changed">
            <summary>
            Occurs when a property value of this object or of a contained object changes.
            </summary>
        </member>
        <member name="T:DlhSoft.Windows.Data.Assignment">
            <summary>
            Represents an assignment item object wrapper generated and managed by an <see cref="T:DlhSoft.Windows.Data.AssignmentManager">AssignmentManager</see>, aware of its referred resource and allocation units.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Assignment.#ctor(System.Object,System.String,System.String,DlhSoft.Windows.Data.Entity.Initialization,DlhSoft.Windows.Data.Entity.Initialization,DlhSoft.Windows.Data.Entity.Initialization,DlhSoft.Windows.Data.Entity.Initialization)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.Assignment">Assignment</see> class.
            </summary>
            <param name="item">Assignment item to be wrapped by the <see cref="T:DlhSoft.Windows.Data.Assignment">Assignment</see>.</param>
            <param name="resourceItemMemberPath">Path to an <see cref="T:System.Object">Object</see> value on the source assignment item to serve as the assigned resource item, or null to indicate that the resource item is not provided by the source assignment item.</param>
            <param name="allocationUnitsMemberPath">Path to a <see cref="T:System.Double">Double</see> value on the source assignment item to serve as the assigned allocation units value, or null to indicate that the allocation units value is not provided by the source assignment item.</param>
            <param name="completingParentManagerInitialization">A method to be called when the initialization of the parent <see cref="T:DlhSoft.Windows.Data.EntityManager">EntityManager</see> is completed.</param>
            <param name="insertedIntoParentCollectionInitialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.Assignment">Assignment</see> is inserted into the parent collection.</param>
            <param name="removingFromParentCollectionInitialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.Assignment">Assignment</see> is removed from the parent collection.</param>
            <param name="disposingInitialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.Assignment">Assignment</see> is disposed.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.Assignment.#ctor(System.Object,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.Assignment">Assignment</see> class.
            </summary>
            <param name="item">Assignment item to be wrapped by the <see cref="T:DlhSoft.Windows.Data.Assignment">Assignment</see>.</param>
            <param name="resourceItemMemberPath">Path to an <see cref="T:System.Object">Object</see> value on the source assignment item to serve as the assigned resource item, or null to indicate that the resource item is not provided by the source assignment item.</param>
            <param name="allocationUnitsMemberPath">Path to a <see cref="T:System.Double">Double</see> value on the source assignment item to serve as the assigned allocation units value, or null to indicate that the allocation units value is not provided by the source assignment item.</param>
        </member>
        <member name="M:DlhSoft.Windows.Data.Assignment.#ctor(System.Object,DlhSoft.Windows.Data.Entity.Initialization)">
            <summary>
            Initializes a new instance of the <see cref="T:DlhSoft.Windows.Data.Assignment">Assignment</see> class.
            </summary>
            <param name="item">Assignment item to be wrapped by the <see cref="T:DlhSoft.Windows.Data.Assignment">Assignment</see>.</param>
            <param name="initialization">A method to be called when the <see cref="T:DlhSoft.Windows.Data.Assignment">Assignment</see> is inserted into the parent collection.</param>
        </member>
        <member name="F:DlhSoft.Windows.Data.Assignment.ResourceProperty">
            <summary>
            Identifies the Resource dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Assignment.OnResourceChanged(DlhSoft.Windows.Data.Resource,DlhSoft.Windows.Data.Resource)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Assignment.Resource">Resource</see> property changes.
            </summary>
        </member>
        <member name="F:DlhSoft.Windows.Data.Assignment.AllocationUnitsProperty">
            <summary>
            Identifies the AllocationUnits dependency property.
            </summary>
        </member>
        <member name="M:DlhSoft.Windows.Data.Assignment.OnAllocationUnitsChanged(System.Double,System.Double)">
            <summary>
            Called when the <see cref="P:DlhSoft.Windows.Data.Assignment.AllocationUnits">AllocationUnits</see> property changes.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Assignment.ParentCollection">
            <summary>
            Gets the parent collection that owns this <see cref="T:DlhSoft.Windows.Data.Assignment">Assignment</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Assignment.ParentTask">
            <summary>
            Gets the parent task that owns this <see cref="T:DlhSoft.Windows.Data.Assignment">Assignment</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Assignment.Resource">
            <summary>
            Gets the resource of this <see cref="T:DlhSoft.Windows.Data.Assignment">Assignment</see>.
            This is a dependency property.
            </summary>
        </member>
        <member name="P:DlhSoft.Windows.Data.Assignment.AllocationUnits">
            <summary>
            Gets or sets the allocation units of this <see cref="T:DlhSoft.Windows.Data.Assignment">Assignment</see>.
            This is a dependency property.
            </summary>
        </member>
    </members>
</doc>
